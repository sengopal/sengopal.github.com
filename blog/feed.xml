<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JBake</title>
    <link>http://sengopal.github.io/</link>
    <atom:link href="http://sengopal.github.io//feed.xml" rel="self" type="application/rss+xml" />
    <description>JBake Bootstrap Template</description>
    <language>en-gb</language>
    <pubDate>Sat, 21 Mar 2015 23:35:13 -0700</pubDate>
    <lastBuildDate>Sat, 21 Mar 2015 23:35:13 -0700</lastBuildDate>

    <item>
      <title>CSS learning and notes</title>
      <link>http://sengopal.github.io//blog/css-learning-and-notes.html</link>
      <pubDate>Thu, 28 Mar 2013 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/css-learning-and-notes.html</guid>
      	<description>
	&lt;p&gt;The following are some of the important points that i had gathered during my learning of CSS and HTML markup. It also contains the important factors to consider when converting a given PSD or image into a good HTML markup and CSS.&lt;/p&gt;&lt;h3&gt;Slicing techniques&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Do not slice the logo&lt;/li&gt;
  &lt;li&gt;Figure out the gradient for repeating along the x -axis&lt;/li&gt;
  &lt;li&gt;Dont start with the slice tool from the toolbar&lt;/li&gt;
  &lt;li&gt;Always design with a wrapper div - for a row or a column - to be enclosed as a container tag&lt;/li&gt;
  &lt;li&gt;Decide upon only one type of slicing for a given layout - for the wrapper divs and then perform the slicing&lt;/li&gt;
  &lt;li&gt;First horizontal - because the flow goes from right to left&lt;/li&gt;
  &lt;li&gt;After selecting the slice, divide the slice and give the number of dividers you would need&lt;/li&gt;
  &lt;li&gt;Save for Web and Devices - Gif and PNG for transparent ones&lt;/li&gt;
  &lt;li&gt;Quality generally set up as 75-85%&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Remember&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;height, width, padding, margin, float - main important properties&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;use the following (or use a reset)&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;body{
    padding:0;
    margin:0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Give Wrapper &lt;code&gt;margin:auto;&lt;/code&gt; to make the whole container centered&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;Give fixed width and height to get the margin auto to work properly&lt;/li&gt;
  &lt;li&gt;Div dimensions: width + margin + padding + border&lt;/li&gt;
  &lt;li&gt;Whenever u are adding a padding or margin, adjust the width or height appropriately&lt;/li&gt;
  &lt;li&gt;Use &lt;code&gt;margin:auto;&lt;/code&gt; to center the div within the container&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;#nav ul{ margin:0; padding:0;}&lt;/code&gt; - remember for every UL block or use a reset&lt;/li&gt;
  &lt;li&gt;Always use &lt;code&gt;ul{list-style-type: none;}&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Give &lt;code&gt;li{display:block}&lt;/code&gt; and provide width &amp;amp; height to get a BUTTON look and feel&lt;/li&gt;
  &lt;li&gt;For vertical nav bar, when absolute position is used, use negative margin-left and margin-top of size half of the width and height of the div.&lt;/li&gt;
  &lt;li&gt;always the target browsers and supported resolutions needs to be decided&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Media Queries&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Change float to normal using the height/width/float properties for changing screen size&lt;/li&gt;
  &lt;li&gt;Always use &lt;code&gt;margin,padding:0&lt;/code&gt; - for reset&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Types of layouts - pure fluid / pure display oriented / hybrid&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;Fluid Layout
    &lt;ol&gt;
      &lt;li&gt;system of relative layout instead of absolute pixels&lt;/li&gt;
      &lt;li&gt;height/width - only in percentages&lt;/li&gt;
    &lt;/ol&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;ul&gt;
    &lt;li&gt;Adaptive Layout
    &lt;ol&gt;
      &lt;li&gt;using the @media tags&lt;/li&gt;
    &lt;/ol&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;ul&gt;
    &lt;li&gt;Responsive Layout
    &lt;ol&gt;
      &lt;li&gt;Mix of Fluid and adaptive layouts. PERCENTAGE + Media Tags&lt;/li&gt;
    &lt;/ol&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;New way of setting the media value&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;initial-scale=1,width=device-width&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Media query representation&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;@media screen and (max-width: 980px){
    ....
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Always create the smallest resolution first&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;Try to use different images with different srcs to cater to different sizes&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Types of Selectors&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Tag&lt;/li&gt;
  &lt;li&gt;Class&lt;/li&gt;
  &lt;li&gt;Pseudo-element [first-line, first-character] &lt;em&gt;This is the LEAST important selector&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Contextual/Conditional - selective styling - &lt;code&gt;p strong{}&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Group/Compound selector - more than 1 tag&lt;/li&gt;
  &lt;li&gt;Pseudo-class [link,active,hover,visited] - &lt;em&gt;MORE important than the other pseudo-element&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;ID Selector&lt;/li&gt;
  &lt;li&gt;when to use id vs class?
  &lt;ul&gt;
    &lt;li&gt;Use Class references with Less weightage&lt;/li&gt;
    &lt;li&gt;Use the TAG selectors first&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Selectors Precedence&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;The precedence for any style flows as : &lt;code&gt;inline &amp;gt; Embedded &amp;gt; External&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;The precedence for any selector: id &amp;gt; class &amp;gt; tag&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;For more details, refer to&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.w3.org/TR/CSS21/cascade.html#specificity&quot;&gt;Specificity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.w3.org/TR/CSS2/selector.html&quot;&gt;Selector&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://css-tricks.com/specifics-on-css-specificity/&quot;&gt;CSS Tricks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Hierarchy of precedence&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;The ID selector&lt;/li&gt;
  &lt;li&gt;The attribute selector&lt;/li&gt;
  &lt;li&gt;The class selector&lt;/li&gt;
  &lt;li&gt;The child selector&lt;/li&gt;
  &lt;li&gt;The adjacent sibling selector - &lt;code&gt;.blog-img + p&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;The descendant selector&lt;/li&gt;
  &lt;li&gt;The tag selector&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Shorthand syntax&lt;/h3&gt;&lt;h4&gt;background&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;background: url(example.gif);
background-color: #eaeaea ;
background-repeat: repeat-x;
background-position: top left;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;can be written as:&lt;/p&gt;&lt;p&gt;&lt;code&gt;background: #eaeaea url(example.gif) repeat-x top left;&lt;/code&gt;&lt;/p&gt;&lt;h4&gt;border&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;border-color: red;
border-width: 1px;
border-style: solid;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;can be written as:&lt;/p&gt;&lt;p&gt;&lt;code&gt;border: 1px solid red;&lt;/code&gt;&lt;/p&gt;&lt;h4&gt;list&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;list-style-position: outside;
list-style-image: none;
list-style-type: disc;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;can be written as:&lt;/p&gt;&lt;p&gt;&lt;code&gt;list-style: disc outside;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;the general format for a list style is:&lt;/p&gt;&lt;p&gt;&lt;code&gt;list-style: [list-style-type] [list-style-position] [list-style-image];&lt;/code&gt;&lt;/p&gt;&lt;h4&gt;font&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;font-family: Arial, Helvetica;
font-weight: bold;
font-style: italic;
font-size: 1em;
line-height: 1.5em;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;can be written as:&lt;/p&gt;&lt;p&gt;&lt;code&gt;font: bold italic 1em/1.5em Arial, Helvetica;&lt;/code&gt;&lt;/p&gt;&lt;h4&gt;margin&lt;/h4&gt;&lt;p&gt;The margin properties allows a shorthand for margin-top, margin-right, margin-bottom and margin-left.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/* top=10px, right=5px, bottom=15px, left=20px */
margin: 10px 5px 15px 20px;

/* top=10px, right=5px, bottom=10px, left=5px*/
margin: 10px 5px;

/* top=10px, right=5px, bottom=15px, left=5px*/
margin: 10px 5px 15px;
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;Form features in HTML5&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Placeholder text&lt;/li&gt;
  &lt;li&gt;Slider control&lt;/li&gt;
  &lt;li&gt;Calendar/Date picker&lt;/li&gt;
  &lt;li&gt;autocomplete&lt;/li&gt;
  &lt;li&gt;Input type Search&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;CSS features in HTML5&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Shadow - box shadow, text shadow&lt;/li&gt;
  &lt;li&gt;Gradient&lt;/li&gt;
  &lt;li&gt;Blur&lt;/li&gt;
  &lt;li&gt;column text&lt;/li&gt;
  &lt;li&gt;transform / transitions&lt;/li&gt;
  &lt;li&gt;Rounded corners (using border radius)&lt;/li&gt;
  &lt;li&gt;CSS Regions&lt;/li&gt;
  &lt;li&gt;Exclusions&lt;/li&gt;
  &lt;li&gt;Shaders&lt;/li&gt;
  &lt;li&gt;Shadow DOM&lt;/li&gt;
  &lt;li&gt;Multiple Images in background&lt;/li&gt;
  &lt;li&gt;Alpha&lt;/li&gt;
  &lt;li&gt;Font-faces&lt;/li&gt;
  &lt;li&gt;Animation using Keyframes&lt;br/&gt;&lt;em&gt;Postion:fixed or other positioning important for animations to work&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;New Tags in HTML5&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;New semantic tags - header, footer, nav, section, aside, article&lt;/li&gt;
  &lt;li&gt;Multimedia tags - audio/sound,video&lt;/li&gt;
  &lt;li&gt;Drawing based tags - canvas, svg&lt;/li&gt;
  &lt;li&gt;Form based new tags - Date, slider, time, spinner&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Important Links&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://css3generator.com/&quot;&gt;Css3Generator&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://meyerweb.com/eric/tools/css/reset/&quot;&gt;Reset&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://vandelaydesign.com/blog/design/resources-grid-based-design/&quot;&gt;Grid&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/&quot;&gt;IE support&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/aFarkas/html5shiv&quot;&gt;html5shiv&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://modernizr.com/&quot;&gt;modernizer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://html5boilerplate.com/&quot;&gt;html5boilerplate&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://html.adobe.com/edge/inspect/&quot;&gt;Adobe Inspect&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://brackets.io/&quot;&gt;Brackets&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
	</description>
    </item>
    <item>
      <title>Big List of Web apps</title>
      <link>http://sengopal.github.io//blog/big-list-of-web-apps.html</link>
      <pubDate>Thu, 16 Aug 2012 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/big-list-of-web-apps.html</guid>
      	<description>
	&lt;p&gt;Since my list of bookmarks is growing huge, and i dont use these web applications often, it seemed more appropriate to maintain it as a reference list rather than bookmarks.&lt;/p&gt;&lt;p&gt;&lt;em&gt;last updated on: 16th august, 2012&lt;/em&gt;&lt;/p&gt;&lt;p&gt;These are not my own findings, rather collected from various sources, newsletters, emails etc.,&lt;/p&gt;&lt;h2&gt;Twitter Bootstrap Templates&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://ajkochanowicz.github.com/Kickstrap/themes.html&quot;&gt;http://ajkochanowicz.github.com/Kickstrap/themes.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Project Management&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://teambox.com/&quot;&gt;http://teambox.com/&lt;/a&gt; - Complete project management - tools for sync, chat, documents etc.,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://recurseapp.com/&quot;&gt;http://recurseapp.com/&lt;/a&gt; - Revision Management&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://trello.com/&quot;&gt;http://trello.com/&lt;/a&gt; - Project collaboration tool - similar to dashboard&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Online meeting&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://doattend.com/&quot;&gt;http://doattend.com/&lt;/a&gt; - online event management, ticket sales etc.,&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;File Viewers&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://gallery.proficad.eu/tools/AutoCAD-Viewer.aspx&quot;&gt;http://gallery.proficad.eu/tools/AutoCAD-Viewer.aspx&lt;/a&gt; - AutoCAD viewer&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Miscelleneous&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.blurb.com/&quot;&gt;http://www.blurb.com/&lt;/a&gt; - Book creation&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.free-ocr.com/&quot;&gt;http://www.free-ocr.com/&lt;/a&gt; - Free OCR reader&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Education&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.minglebox.com/&quot;&gt;http://www.minglebox.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Comic Creation&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Source: &lt;a href=&quot;http://www.makeuseof.com/tag/create-web-comics-memes-free-tools/&quot;&gt;MakeUseOf&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.pixton.com/&quot;&gt;http://www.pixton.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stripgenerator.com/&quot;&gt;http://stripgenerator.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.toondoo.com/&quot;&gt;http://www.toondoo.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.bitstrips.com/&quot;&gt;http://www.bitstrips.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://marvel.com/games/play/34/create_your_own_comic&quot;&gt;http://marvel.com/games/play/34/create_your_own_comic&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.doink.com/&quot;&gt;http://www.doink.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://toonlet.com/&quot;&gt;http://toonlet.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://builder.cheezburger.com/builder/rage&quot;&gt;http://builder.cheezburger.com/builder/rage&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://memegenerator.net/&quot;&gt;http://memegenerator.net/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.memecenter.com/&quot;&gt;http://www.memecenter.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Freelancing Tools&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.freelancer.com/users/changeuserinfo.php&quot;&gt;http://www.freelancer.com/users/changeuserinfo.php&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stalkninja.com/&quot;&gt;http://stalkninja.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.efactor.com/&quot;&gt;http://www.efactor.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Wireframes, Prototyping&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.mockflow.com&quot;&gt;http://www.mockflow.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.gliffy.com&quot;&gt;http://www.gliffy.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://creately.com&quot;&gt;http://creately.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://cacoo.com&quot;&gt;http://cacoo.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://sketchup.google.com&quot;&gt;http://sketchup.google.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://gotiggr.com&quot;&gt;http://gotiggr.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.picmonkey.com&quot;&gt;http://www.picmonkey.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://moqups.com&quot;&gt;http://moqups.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://infogr.am&quot;&gt;http://infogr.am&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://beautifulmindhttp.io&quot;&gt;http://beautifulmindhttp.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.diagram.ly&quot;&gt;http://www.diagram.ly&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://create.visual.ly&quot;&gt;http://create.visual.ly&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.iorad.com&quot;&gt;http://www.iorad.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.tildee.com&quot;&gt;http://www.tildee.com&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Photo printing&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.zoomin.com&quot;&gt;http://www.zoomin.com&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Web Application Hosting&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.gladinet.com&quot;&gt;http://www.gladinet.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://openstack.com&quot;&gt;http://openstack.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://cloudfoundry.org&quot;&gt;http://cloudfoundry.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.heroku.com&quot;&gt;http://www.heroku.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cloudbees.com&quot;&gt;http://www.cloudbees.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://owncloud.org&quot;&gt;http://owncloud.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.joukuu.com&quot;&gt;http://www.joukuu.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.openstack.org&quot;&gt;http://www.openstack.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.aeolusproject.org&quot;&gt;http://www.aeolusproject.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.dotcloud.com&quot;&gt;http://www.dotcloud.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://cloudfoundry.com&quot;&gt;http://cloudfoundry.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.appcloudy.com&quot;&gt;http://www.appcloudy.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.appfog.com&quot;&gt;http://www.appfog.com&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Cloud API&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.mashape.com&quot;&gt;http://www.mashape.com&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Obsure Web Application APIs&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://one.ubuntu.com/developer&quot;&gt;http://one.ubuntu.com/developer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.innovate-conference.com&quot;&gt;http://www.innovate-conference.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.imdbapi.com&quot;&gt;http://www.imdbapi.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://code.google.com/oauthplayground/&quot;&gt;http://code.google.com/oauthplayground/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://pusher.com/showcase&quot;&gt;http://pusher.com/showcase&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://sramana.in/indianrail-db&quot;&gt;http://sramana.in/indianrail-db&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
	</description>
    </item>
    <item>
      <title>CSS style guidelines</title>
      <link>http://sengopal.github.io//blog/css-style-guidelines.html</link>
      <pubDate>Thu, 16 Aug 2012 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/css-style-guidelines.html</guid>
      	<description>
	&lt;p&gt;Though there are very detailed guidelines available for maintaining the CSS files, the most commonly used ones which we follow are given below&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#html-guidelines&quot;&gt;HTML guidelines&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#best-practices&quot;&gt;Best Practices&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#property-specific-guidelines&quot;&gt;Property Specific guidelines&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#naming-conventions&quot;&gt;Naming Conventions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#grouping-of-properties&quot;&gt;Grouping of properties&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#formatting-of-rulesets&quot;&gt;Formatting of rulesets&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#response-web-design&quot;&gt;Responsive Web Design&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;Table of contents&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#css-categorization&quot;&gt;CSS Categorization&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#html-layout&quot;&gt;HTML Layout&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#linting&quot;&gt;Linting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Like any coding standard, the purpose of this standard is to create a baseline for collaboration and review within various aspects of the verification platform projects. Files within a project should appear as though created by a single entity. Above all else, create code that is readable, meaningful, consistent, and beautiful.&lt;/p&gt;&lt;h2&gt;HTML guidelines&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Use a new line for every block, list, or table element, and indent every such child element.&lt;/li&gt;
  &lt;li&gt;Independent of the styling of an element (as CSS allows elements to assume a different role per display property), put every block, list, or table element on a new line.&lt;/li&gt;
  &lt;li&gt;Indent them if they are child elements of a block, list, or table element.&lt;/li&gt;
  &lt;li&gt;Always use appropriate semantics including HTML5 tags such as header, footer, aside, nav etc.,&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Best Practices&lt;/h2&gt;
&lt;blockquote&gt;&lt;p&gt;I have a blanket-ban on IDs in CSS. There is literally no point in them, and they only ever cause harm.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
  &lt;li&gt;If you must use an id selector (#selector) make sure that you have no more than one in your rule declaration. A rule like #header .search #quicksearch { ... } is considered harmful.&lt;/li&gt;
  &lt;li&gt;Do not use entity references. There is no need to use entity references like &amp;mdash;, &amp;rdquo;, or &amp;#x263a;, assuming the same encoding (UTF-8) is used for files and editors as well as among teams.&lt;/li&gt;
  &lt;li&gt;Never use magic numbers. Ex: &lt;code&gt;{padding-left: 87px;}&lt;/code&gt; is a very bad piece of code.&lt;/li&gt;
  &lt;li&gt;Class names such as disabled, mousedown, danger, hover, selected, and active should always be namespaced by a class (button.classy.selected is a good example).&lt;/li&gt;
  &lt;li&gt;Usage of min-width for wrappers&lt;/li&gt;
  &lt;li&gt;Set the font-family as a list rather than only one value. {Ensure that there is atleast one web-safe font available in the list}&lt;/li&gt;
  &lt;li&gt;Never nest more than 3 levels of selectors&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;If you are attempting to fix an issue, attempt to remove code before adding more.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;DOM will change over time, target the element you want to use as opposed to &quot;finding it&quot; through its parents. Example: Use .highlight on the element as opposed to .highlight a (where the selector is on the parent)&lt;/li&gt;
  &lt;li&gt;Know when to use the height property. It should be used when you are including outside elements (such as images). Otherwise use line-height for more flexibility.&lt;/li&gt;
  &lt;li&gt;Do not restate default property &amp;amp; value combinations (for instance display: block; on block-level elements).&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Avoid qualifying ID and class names with type selectors. Unless necessary (for example with helper classes), do not use element names in conjunction with IDs or classes. Avoiding unnecessary ancestor selectors, is useful for performance reasons.&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  ul#example {}
  div.error {}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
  &lt;li&gt;Use shorthand properties where possible. CSS offers a variety of shorthand properties (like font) that should be used whenever possible, even in cases where only one value is explicitly set. Using shorthand properties is useful for code efficiency and understandability.&lt;/li&gt;
  &lt;li&gt;Try to minimize using markup for styling hooks. This will allow you to simplify the markup/DOM. Use media queries to override your &quot;base&quot; CSS properties.&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Property Specific guidelines&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Line-height should never be given with units&lt;/li&gt;
  &lt;li&gt;Where allowed, avoid specifying units for zero-values, e.g., margin: 0.&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Vendor prefixes should go longest (-webkit-) to shortest (unprefixed). Values should be right aligned with spaces after the colon provided that all the values are the same across all prefixes.&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;.koop-shiny {
     -webkit-box-shadow: inset 0 0 1px 1px #eee;
     -moz-box-shadow:    inset 0 0 1px 1px #eee;
     box-shadow:         inset 0 0 1px 1px #eee;

     -webkit-transition: border-color 0.1s;
     -moz-transition:    border-color 0.1s;
     -ms-transition:     border-color 0.1s;
     -o-transition:      border-color 0.1s;
     transition:         border-color 0.1s;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Naming Conventions&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Use meaningful words for IDs and classnames. Abbrievate or expand to maintain readability&lt;/li&gt;
  &lt;li&gt;Use lowercase and separate words with hyphens when naming selectors. Never use Camelcasing, underscores or other special characters.&lt;/li&gt;
  &lt;li&gt;Use Naming convention to clarify INTENT. Examples: .text-plus1{}&lt;/li&gt;
  &lt;li&gt;Don&apos;t code CSS for the page. Code it for the system.&lt;/li&gt;
  &lt;li&gt;If you must use an id selector (#selector) make sure that you have no more than one in your rule declaration. A rule like #header .search #quicksearch { ... } is considered harmful.&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Grouping of properties&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Declarations should be ordered in accordance with a single principle.&lt;/li&gt;
  &lt;li&gt;Commonly used preference is for structurally important properties (e.g. positioning and box-model) to be declared prior to all others and group the properties based on TYPE.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;    .selector {

      /* Positioning */
      position: absolute;
      z-index: 10;
      top: 0;
      right: 0;

      /* Display &amp;amp; Box Model */
      display: inline-block;
      overflow: hidden;
      box-sizing: border-box;
      width: 100px;
      height: 100px;
      padding: 10px;
      border: 10px solid #333;
      margin: 10px;

      /* Color */
      background: #000;
      color: #fff

      /* Text */
      font-family: sans-serif;
      font-size: 16px;
      line-height: 1.4;
      text-align: right;

      /* Other */
      cursor: pointer;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;Comments&lt;/h2&gt;
&lt;blockquote&gt;&lt;p&gt;In situations where it would be useful for a developer to know exactly how a chunk of CSS applies to some HTML, I often include a snippet of HTML in a CSS comment.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
  &lt;li&gt;Comments that refer to selector blocks should be on a separate line immediately before the block to which they refer.&lt;/li&gt;
  &lt;li&gt;Always use /* */ for comment blocks
&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Formatting of rulesets&lt;/h2&gt;&lt;p&gt;Indent by 2 spaces at a time. (for both HTML and CSS). Donâ€™t use tabs or mix tabs and spaces for indentation.&lt;br/&gt;All code has to be lowercase: This applies to element names, attributes, attribute values (unless text/CDATA), selectors, properties, and property values (with the exception of strings such as &lt;code&gt;&amp;lt;img src=&amp;quot;item.png&amp;quot; alt=&amp;quot;Android Mobile Phone&amp;quot;&amp;gt;&lt;/code&gt;).&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Add two blank lines between sections and one blank line between blocks in a section. Separate each ruleset by a blank line.&lt;/li&gt;
  &lt;li&gt;Use soft-tabs with a two space indent.&lt;/li&gt;
  &lt;li&gt;Put two spaces after : in property declarations.&lt;/li&gt;
  &lt;li&gt;Put two spaces before { in rule declarations.&lt;/li&gt;
  &lt;li&gt;Use one discrete selector per line in multi-selector rulesets.&lt;/li&gt;
  &lt;li&gt;Include one declaration per line in a declaration block.&lt;/li&gt;
  &lt;li&gt;Use one level of indentation for each declaration.&lt;/li&gt;
  &lt;li&gt;Use hex code for colors, or rgba() if opacity is needed. Avoid RGB format and uppercase, and shorten values when possible: #fff instead of #FFFFFF.&lt;/li&gt;
  &lt;li&gt;Use single quotation marks for attribute selectors and property values where necessary. When quoting attribute selectors and property values, use single (&apos;&apos;) rather than double (&quot;&quot;) quotation marks. Do not use quotation marks in URI values (url()).&lt;/li&gt;
  &lt;li&gt;Quote attribute values in selectors, e.g., input[type=&quot;checkbox&quot;].&lt;/li&gt;
  &lt;li&gt;Include a space after each comma in comma-separated property or function values.&lt;/li&gt;
  &lt;li&gt;Include a semi-colon at the end of the last declaration in a declaration block.&lt;/li&gt;
  &lt;li&gt;Place the closing brace of a ruleset in the same column as the first character of the ruleset.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;.selector-1,
.selector-2,
.selector-3[type=&amp;quot;text&amp;quot;] {
    -webkit-box-sizing: border-box;
    -moz-box-sizing:    border-box;
    box-sizing:         border-box;
    display: block;
    font-family: helvetica, arial, sans-serif;
    color: #333;
    background: #fff;
    background: linear-gradient(#fff, rgba(0, 0, 0, 0.8));
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
  &lt;li&gt;Remove trailing white spaces as trailing white spaces are unnecessary and can complicate diffs.&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Responsive Web Design&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Start with a flexible grid layout&lt;/li&gt;
  &lt;li&gt;Always use percentages for containers&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://rwdcalc.com&quot;&gt;http://rwdcalc.com&lt;/a&gt; - Calculator and CSS generator for percentage generation&lt;/li&gt;
  &lt;li&gt;Always use em for fonts and other sizes&lt;/li&gt;
  &lt;li&gt;Maximize use of background images&lt;/li&gt;
  &lt;li&gt;Set the sizing of images and other elements using relative width and percentages&lt;/li&gt;
  &lt;li&gt;Use User Agent Switcher to verify the layout in various desktop and mobile browsers&lt;/li&gt;
  &lt;li&gt;Use the meta name in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag&lt;br/&gt; {% highlight html %}&lt;br/&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,maximum-scale=1&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Optional: initial-scale=1,user-scalable=n&lt;br/&gt;9. Always use min-width, max-width, device-pixel-ratio:2&lt;br/&gt;10. Maximize use of high pixel density displays, Minimize image downloads per platform&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@media only all and
(min-device-pixel-ratio:2){
    #bg{
  background:url(bg.png);
  background-size: 50% 50%;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
  &lt;li&gt;Seperate stylesheet for high density displays&lt;/li&gt;
  &lt;li&gt;Produce image scales by pixel-ratio&lt;/li&gt;
  &lt;li&gt;Write CSS-to-device px compensation&lt;/li&gt;
  &lt;li&gt;Apply media query features to value ranges using min- and max-&lt;/li&gt;
  &lt;li&gt;Supply a core stylesheet that maintains appearance that is independent of media queries&lt;/li&gt;
  &lt;li&gt;Media queries allow us to gracefully degrade the DOM for different screen sizes. If you are adding any, be sure to test above and below the break-point you are targeting. It is generally advisable to keep media queries grouped by media at the bottom of the stylesheet.&lt;/li&gt;
  &lt;li&gt;Rule sets for media queries should be indented one level in.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;@media all and (max-width: 699px) and (min-width: 520px) {
       /* Your selectors */
}


##Table of contents
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;At the top of each CSS file, it is good to have a table of contents that maps to the section titles in the document.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/*
NOTES
RESET
SHARED     Share anything we can across elements.
MAIN       HTML, BODY, etc.
*/
Section titles

Each section (layout, type, tables etc) of CSS would look like:

/*------------------------------------*\
    $MAIN
\*------------------------------------*/
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;CSS Categorization&lt;/h2&gt;&lt;p&gt;It is always recommended to use to a state-based design if the web application has user and state based representations such as:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A layout or module style&lt;/li&gt;
  &lt;li&gt;Sub-modules&lt;/li&gt;
  &lt;li&gt;JavaScript-driven states&lt;/li&gt;
  &lt;li&gt;Pseudo-class states&lt;/li&gt;
  &lt;li&gt;Media query states&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;For our design needs, we would be maintaining a common hierarchy as follows:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Base CSS&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;html {
  background-color: #FFF;
  font-family: Arial, Helvetica, sans-serif;
    font-size: 14px;
}
body {
  margin: 0;
  padding: 0;
}
h1, h2, h3 {
  margin: 1em 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;p&gt;Layout CSS&lt;br/&gt; This CSS should contain the common styling for header, sidebar, content&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Module CSS&lt;br/&gt; This CSS should contain the styling for customized list, buttons, tabs&lt;br/&gt; Examples : &lt;code&gt;.tab{}, .listview{}, .btn{}&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Sub-Modules CSS&lt;br/&gt; This CSS should contain the customizations for the modules such as dark, small, large, search&lt;br/&gt; Examples: &lt;code&gt;.btn {}, .btn-large {}, .btn-small {}, .btn-default {}, .btn-search {}&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;State&lt;br/&gt; This CSS should have classes defined for state specific behaviour such as hover, active-state, default-state&lt;br/&gt; Examples: &lt;code&gt;.tab{}, .is-tab-active{}&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Theme&lt;br/&gt; This CSS will have classes specific to theming&lt;br/&gt; Examples: &lt;code&gt;.theme-header{}, .theme-border{}, .theme-background{}&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;HTML layout&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE HTML&amp;gt;
 &amp;lt;html&amp;gt;
     &amp;lt;head&amp;gt;
        &amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;quot; content=&amp;quot;text/html; charset=UTF-8&amp;quot; /&amp;gt;
        &amp;lt;title&amp;gt;Website Title&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
     &amp;lt;body&amp;gt;
         &amp;lt;header&amp;gt;
            &amp;lt;nav&amp;gt;
                &amp;lt;ul&amp;gt;
                    &amp;lt;li&amp;gt;Home&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;Contact&amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
            &amp;lt;/nav&amp;gt;
        &amp;lt;/header&amp;gt;
         &amp;lt;section&amp;gt;
             &amp;lt;article&amp;gt;
                &amp;lt;header&amp;gt;
                    &amp;lt;h2&amp;gt;Title Goes here&amp;lt;/h2&amp;gt;
                    &amp;lt;p&amp;gt;
                      Posted on &amp;lt;time datetime=&amp;quot;2012-07-28T13:00:24+01:00&amp;quot;&amp;gt;July 28th 2012&amp;lt;/time&amp;gt;
                      by &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Author&amp;lt;/a&amp;gt; - &amp;lt;a href=&amp;quot;#comments&amp;quot;&amp;gt;12 comments&amp;lt;/a&amp;gt;
                    &amp;lt;/p&amp;gt;
                &amp;lt;/header&amp;gt;
                &amp;lt;p&amp;gt;Lorem Ipsum is simply dummy text of the printing and typesetting industry.&amp;lt;/p&amp;gt;
            &amp;lt;/article&amp;gt;
             &amp;lt;article&amp;gt;
                &amp;lt;header&amp;gt;
                    &amp;lt;h2&amp;gt;Article title&amp;lt;/h2&amp;gt;
                    &amp;lt;p&amp;gt;
                      Posted on &amp;lt;time datetime=&amp;quot;2012-07-26T13:00:24+01:00&amp;quot;&amp;gt;July 26th 2012&amp;lt;/time&amp;gt;
                      by &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Author&amp;lt;/a&amp;gt; - &amp;lt;a href=&amp;quot;#comments&amp;quot;&amp;gt;9 comments&amp;lt;/a&amp;gt;
                    &amp;lt;/p&amp;gt;
                &amp;lt;/header&amp;gt;
                &amp;lt;p&amp;gt;Lorem Ipsum is simply dummy text of the printing and typesetting industry.&amp;lt;/p&amp;gt;
            &amp;lt;/article&amp;gt;
         &amp;lt;/section&amp;gt;
         &amp;lt;aside&amp;gt;
            &amp;lt;h2&amp;gt;Contact Us&amp;lt;/h2&amp;gt;
            &amp;lt;p&amp;gt;
              It is a long established fact that a reader will be distracted by the readable content of
              a page when looking at its layout.
            &amp;lt;/p&amp;gt;
        &amp;lt;/aside&amp;gt;
         &amp;lt;footer&amp;gt;
            &amp;lt;p&amp;gt;Copyright 2012©&amp;lt;/p&amp;gt;
        &amp;lt;/footer&amp;gt;
     &amp;lt;/body&amp;gt;
 &amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;Linting&lt;/h2&gt;&lt;p&gt;&lt;em&gt;TBD&lt;/em&gt;&lt;/p&gt;&lt;h2&gt;References&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://github.com/styleguide/css&quot;&gt;http://github.com/styleguide/css&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://google-styleguide.googlecode.com/svn/trunk/htmlcssguide.xml&quot;&gt;http://google-styleguide.googlecode.com/svn/trunk/htmlcssguide.xml&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://github.com/necolas/idiomatic-css&quot;&gt;http://github.com/necolas/idiomatic-css&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://csswizardry.com/2012/04/my-html-css-coding-style/&quot;&gt;http://csswizardry.com/2012/04/my-html-css-coding-style/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://make.wordpress.org/core/handbook/coding-standards/css/&quot;&gt;http://make.wordpress.org/core/handbook/coding-standards/css/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
	</description>
    </item>
    <item>
      <title>Git and Github secrets</title>
      <link>http://sengopal.github.io//blog/git-github-secrets.html</link>
      <pubDate>Thu, 16 Aug 2012 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/git-github-secrets.html</guid>
      	<description>
	&lt;p&gt;Recently came across a screencast held at Aloha Ruby Conference. Some of the shortcuts/useful tips mentioned were given below&lt;/p&gt;&lt;h3&gt;Github&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Adding .diff or .patch to the URL provides more clearer textual representation&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:::html
https://github.com/sengopal/sengopal.github.com/commit/c1ed8ca37880bb6b369e5007fa88909aa1b73189
https://github.com/sengopal/sengopal.github.com/commit/c1ed8ca37880bb6b369e5007fa88909aa1b73189.diff
https://github.com/sengopal/sengopal.github.com/commit/c1ed8ca37880bb6b369e5007fa88909aa1b73189.patch
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Remove Whitespace differences using&lt;/strong&gt; &lt;code&gt;?w=1&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Cool octocat images @ octodex.github.com&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;URL Shortner : git.io&lt;/strong&gt;&lt;br/&gt;Usage: &lt;code&gt;gitio &amp;lt;url&amp;gt; &amp;lt;name?&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Lexer and Highlighting Languages:&lt;/strong&gt; &lt;a href=&quot;https://github.com/github/linguist&quot; title=&quot;Linguist&quot;&gt;Linguist&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Gist as Screenshot sharing and discussion tool&lt;/strong&gt; &lt;code&gt;&amp;lt;https://gist.github.com/&amp;gt;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Git + Hub super commands&lt;/strong&gt;&lt;br/&gt;Hub is a command line tool that wraps git in order to extend it with extra features and commands that make working with GitHub easier.&lt;br/&gt;&lt;a href=&quot;https://github.com/defunkt/hub&quot; title=&quot;hub repo&quot;&gt;hub repo&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Key Shortcuts&lt;/strong&gt;&lt;br/&gt;Press in repo page&lt;br/&gt;&lt;code&gt;t&lt;/code&gt; - for File Finder&lt;br/&gt;&lt;code&gt;w&lt;/code&gt; - branch selector&lt;br/&gt;&lt;code&gt;s&lt;/code&gt; - quick search&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;mailto:&amp;#95;_&amp;#64;&amp;#x6d;&amp;#x65;&amp;#x6e;&amp;#x74;&amp;#105;&amp;#x6f;&amp;#x6e;_&amp;#95;&quot;&gt;&amp;#95;_&amp;#64;&amp;#x6d;&amp;#x65;&amp;#x6e;&amp;#x74;&amp;#105;&amp;#x6f;&amp;#x6e;_&amp;#95;&lt;/a&gt; - adds person to the conversation&lt;br/&gt;&lt;a href=&quot;mailto:&amp;#x5f;&amp;#95;@&amp;#79;&amp;#114;&amp;#103;a&amp;#110;i&amp;#x7a;&amp;#97;&amp;#x74;&amp;#x69;&amp;#111;&amp;#110;/&amp;#x54;&amp;#x65;a&amp;#109;&amp;#x5f;&amp;#x5f;&quot;&gt;&amp;#x5f;&amp;#95;@&amp;#79;&amp;#114;&amp;#103;a&amp;#110;i&amp;#x7a;&amp;#97;&amp;#x74;&amp;#x69;&amp;#111;&amp;#110;/&amp;#x54;&amp;#x65;a&amp;#109;&amp;#x5f;&amp;#x5f;&lt;/a&gt; - adds the organization/team to the conversation&lt;/p&gt;&lt;p&gt;&lt;code&gt;#&amp;lt;number&amp;gt;&lt;/code&gt; - &lt;strong&gt;autolinks to issue number&lt;/strong&gt;&lt;br/&gt;Example: using a commit message such as &quot;closes &lt;code&gt;#1291&lt;/code&gt;&quot; autolinks to the issue&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Adding&lt;/strong&gt; &lt;code&gt;?author=sengopal&lt;/code&gt; &lt;strong&gt;or email address to&lt;/strong&gt; &lt;code&gt;github.com/repo/commits/master&lt;/code&gt; &lt;strong&gt;gives the list of commits by that author.&lt;/strong&gt;&lt;br/&gt;&lt;em&gt;Useful for your resume !&lt;/em&gt;&lt;br/&gt;Example:&lt;br/&gt;{% highlight html %}&lt;br/&gt; &lt;a href=&quot;https://github.scm.corp.ebay.com/Verification/verification-webapp/commits/master?author=sengopal&quot;&gt;https://github.scm.corp.ebay.com/Verification/verification-webapp/commits/master?author=sengopal&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Pulls needn&apos;t be from a fork, but can be done from branches as well&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Github supports emoji&apos;s which are available under&lt;/strong&gt; &lt;a href=&quot;http://emoji-cheat-sheet.com&quot; title=&quot;Emoji-cheat-sheet&quot;&gt;Emoji-cheat-sheet&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Git line quirks&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;git branch --merged&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;git branch --no-merged&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;git branch --contains &amp;lt;sha&amp;gt;&lt;/code&gt; - which branch has this SHA&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;git checkout &amp;lt;branch_name&amp;gt; --&amp;lt;path to file&amp;gt;&lt;/code&gt; - checkout that file from that branch into your current branch&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;git log branchA ^branchB&lt;/code&gt; - commits in A not in B&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;git fsck ==lost-found&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;git diff HEAD^ --stat&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;git blame -w&lt;/code&gt; - to avoid whitespace as commits&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;git blame -M&lt;/code&gt; - original commit and not the move commit&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;git blame -C&lt;/code&gt; - same as M except looks in the same commit&lt;br/&gt;&lt;em&gt;-CC, -CCC are the other variations available&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;git status -sb&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;git diff HEAD^ --word-diff&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;git config --global help.autocorrect 1&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;git config --global rerere.enabled 1&lt;/code&gt; - long running branches, remembers merge conflicts&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;git config --global color.ui 1&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;git-amend&lt;/code&gt; - alias to &lt;code&gt;git commit --amend -C HEAD&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;git undo&lt;/code&gt; - alias to &lt;code&gt;git reset --soft HEAD^&lt;/code&gt; - retains commit as staged&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;git-count&lt;/code&gt; - alias to &lt;code&gt;git shortlog -sn&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;git add -p&lt;/code&gt; - useful for logical commits&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;git show :/&amp;lt;query&amp;gt;&lt;/code&gt; - checks for the message or file name&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Commit Comparison&lt;/strong&gt;&lt;br/&gt;LINE Linking - #L16, #L16-25&lt;/p&gt;&lt;p&gt;&lt;em&gt;Advanced Compare View&lt;/em&gt;&lt;br/&gt;Range - &lt;a href=&quot;mailto:&amp;#77;&amp;#65;&amp;#83;&amp;#84;&amp;#69;&amp;#x52;&amp;#x40;&amp;#123;&amp;#49;&amp;#46;&amp;#100;&amp;#x61;&amp;#121;&amp;#46;&amp;#97;&amp;#x67;&amp;#111;&amp;#125;&amp;#x2e;&amp;#46;&amp;#x2e;&amp;#x4d;&amp;#x41;&amp;#x53;&amp;#84;&amp;#x45;&amp;#82;&quot;&gt;&amp;#77;&amp;#65;&amp;#83;&amp;#84;&amp;#69;&amp;#x52;&amp;#x40;&amp;#123;&amp;#49;&amp;#46;&amp;#100;&amp;#x61;&amp;#121;&amp;#46;&amp;#97;&amp;#x67;&amp;#111;&amp;#125;&amp;#x2e;&amp;#46;&amp;#x2e;&amp;#x4d;&amp;#x41;&amp;#x53;&amp;#84;&amp;#x45;&amp;#82;&lt;/a&gt;&lt;br/&gt;bookmark that page and see whats team upto in last 12 hours&lt;/p&gt;&lt;h3&gt;Key Git commands in order of importance&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Clone – Creates a repository from a network or local location&lt;/li&gt;
  &lt;li&gt;Status – What is staged, and in the working directory&lt;/li&gt;
  &lt;li&gt;Log – history of commits&lt;/li&gt;
  &lt;li&gt;Add – make a file ready for staging&lt;/li&gt;
  &lt;li&gt;Commit – Move staged files to a commit&lt;/li&gt;
  &lt;li&gt;Reset – Clean an entire working directory&lt;/li&gt;
  &lt;li&gt;Pull – Perform a fetch &amp;amp; merge operation&lt;/li&gt;
  &lt;li&gt;Push – send your changes to the parent repository&lt;/li&gt;
  &lt;li&gt;Branch – to create a new branch&lt;/li&gt;
  &lt;li&gt;Checkout – to grab one or more files&lt;/li&gt;
  &lt;li&gt;Clean – removing files that exist only in the working directory&lt;/li&gt;
  &lt;li&gt;Fetch – Get changes from the parent repository to store within the current repo&lt;/li&gt;
  &lt;li&gt;Merge – Combine two or more commits into one&lt;/li&gt;
&lt;/ul&gt;
	</description>
    </item>
    <item>
      <title>Google GDay in Chennai</title>
      <link>http://sengopal.github.io//blog/google-gday-chennai-notes.html</link>
      <pubDate>Mon, 23 Jul 2012 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/google-gday-chennai-notes.html</guid>
      	<description>
	&lt;p&gt;Google conducted its first ever gday in India and the first event was held in Chennai Trade Center, Nandambakkam, Chennai. It was a very good crowd of around 1300 technology aspirants ranging from students, freshers, professionals and business folks as well. The keynote was delivered with an enthusiasm of a company who has just released one of the most advanced and sophisticated operating system for mobile - Jelly Bean.&lt;/p&gt;&lt;h2&gt;Welcome Address and Keynote&lt;/h2&gt;&lt;p&gt;The keynote was a great presentation about android, indian internet population and usage, google practices, about google developers group. The interesting practices stressed upon how speed does matter more than instant perfection and new applications should aim to launch fast and often&lt;/p&gt;&lt;p&gt;They also introduced the Chrome mobile and some of its abilities such as sync of tabs open on other devices and how web has evolved into a platform and browser as its OS. There was a Google Docs Collabaration demo where a document was being edited in parallel.&lt;/p&gt;&lt;p&gt;&lt;em&gt;Note to myself: checkout the app Beetlab from Chrome Web Store&lt;/em&gt;&lt;/p&gt;&lt;p&gt;The keynote took a timeline view of how a day starts till end with various technologies working cohesively to achieve the task at hand such as multiple chrome tabs sync, chrome web store and google docs collab, reciept upload and search in images. There was also a Google+ angout demo and an introduction on the hangout apps&lt;/p&gt;&lt;h2&gt;Android 4.1 Jelly Bean Presentation - Divum Software&lt;/h2&gt;&lt;p&gt;The folks from Divum software then presented about the key aspects of the latest Android 4.1 OS - the Jelly bean. They spoke about Project Butter which has enhanced even the performance in menus and chrome, about the support for local lanuguages which can even be pasted into messages as well, about Notifications&lt;br/&gt;and its capabilities ranging upto giving a gallery view of images uploaded. They also spoke about the priority setup for notifications, widget height and width control. Then they introduced Google Now and even had a demo of using &lt;em&gt;Speak &quot;Google&quot; and ask the search term&lt;/em&gt;.&lt;/p&gt;&lt;h2&gt;Android Development Workshop - 101&lt;/h2&gt;&lt;p&gt;&lt;em&gt;By Divum&lt;/em&gt;&lt;br/&gt;Some of the topics covered were very basic and targetted for people who are very new to the Android platform. A simple run down list of topics covered were:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Android Fundamentals
  &lt;ul&gt;
    &lt;li&gt;os, middleware, list of apps, rich set of APIs&lt;/li&gt;
    &lt;li&gt;linux 2.6 not windows X&lt;/li&gt;
    &lt;li&gt;Android architecture diagram&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;Custom 2D and 3D graphics based on OpenGL ES&lt;/li&gt;
  &lt;li&gt;Camera, accelerometer, gyroscope etc.,&lt;/li&gt;
  &lt;li&gt;Each app is assigned with a unique &apos;user&apos; ID&lt;/li&gt;
  &lt;li&gt;Run on unique virtual machine in isolation with other apps&lt;/li&gt;
  &lt;li&gt;Binary file is called &apos;.apk&apos;&lt;/li&gt;
  &lt;li&gt;Basic building blocks
  &lt;ul&gt;
    &lt;li&gt;activities == screens&lt;/li&gt;
    &lt;li&gt;views == layouts&lt;/li&gt;
    &lt;li&gt;intents == messages&lt;/li&gt;
    &lt;li&gt;services == bg tasks&lt;/li&gt;
    &lt;li&gt;notifications == events&lt;/li&gt;
    &lt;li&gt;content providers == to external app&lt;/li&gt;
    &lt;li&gt;AndroidManifest.xml == app config&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Activities&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;represents a single screen&lt;/li&gt;
    &lt;li&gt;LIFO&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Views&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;user interfaces as views and view groups&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Intents&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;messages within app and multiple apps&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;services&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;runs in background&lt;/li&gt;
    &lt;li&gt;long running processes&lt;/li&gt;
    &lt;li&gt;acivity can start and interact with the services&lt;/li&gt;
    &lt;li&gt;non user-interface related&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;notifications&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;broadcast reciever&lt;/li&gt;
    &lt;li&gt;responds to system wide communication&lt;/li&gt;
    &lt;li&gt;screen as turned off, battery low, network loss&lt;/li&gt;
    &lt;li&gt;alternatively app can initiate the broadcast&lt;/li&gt;
    &lt;li&gt;typically broadcast notifications are shown on status bar&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;content providers&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;manages shared application data&lt;/li&gt;
    &lt;li&gt;file system, persistent storage, SQLite&lt;/li&gt;
    &lt;li&gt;reading/writing data private to the app&lt;/li&gt;
    &lt;li&gt;shared data can be read and modified by multiple applications&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;manifest file&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;list of components&lt;/li&gt;
    &lt;li&gt;user permissions&lt;/li&gt;
    &lt;li&gt;app version, icons&lt;/li&gt;
    &lt;li&gt;declaration of hardware and software features like camera, network, libraries&lt;/li&gt;
    &lt;li&gt;constraints like resolution&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Some Code snippets&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;p&gt;AndroidManifest.xml - only with a simple activity&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Start Activity&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;Managing the lifecycle of your activities by implementing callback methods is crucial to develop strong and flexible application&lt;/li&gt;
    &lt;li&gt;Activity lifecycle - onCreate, onStart, onResume&lt;/li&gt;
    &lt;li&gt;Hooks for bookkeeping
    &lt;ol&gt;
      &lt;li&gt;Another activity comes to the foreground - onSaveInstanceState()&lt;/li&gt;
      &lt;li&gt;onRestoreInstanceState() or onCreate() - can be used for resetting once the stored instance is brought back&lt;/li&gt;
    &lt;/ol&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Task and Back stack&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;UI Layouts&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;Linear Layout example&lt;/li&gt;
    &lt;li&gt;Any view object may have a unique ID&lt;/li&gt;
    &lt;li&gt;Uniquely identified within the view-tree&lt;/li&gt;
    &lt;li&gt;Event Listeners - onKeyUp, onKeyDown, onTouchEvent, onClick&lt;/li&gt;
    &lt;li&gt;menu action bar listeners&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Common layouts&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;Tabular layout&lt;/li&gt;
    &lt;li&gt;Lineear Layout&lt;/li&gt;
    &lt;li&gt;Relative Layout&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Google Services&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;c2dm&lt;/li&gt;
    &lt;li&gt;mobile analytics&lt;/li&gt;
    &lt;li&gt;admob&lt;/li&gt;
    &lt;li&gt;places&lt;/li&gt;
    &lt;li&gt;geocoding&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Android Development Workshop - Advanced&lt;/h2&gt;&lt;p&gt;Some of the topics covered or demoed were:&lt;/p&gt;&lt;h3&gt;Connecting to a backend server&lt;/h3&gt;&lt;p&gt;Important points to remember where How to choose a HTTP Client. Since Android provides its own implementation of &lt;em&gt;HttpClient and HttpURLConnection&lt;/em&gt; which supports https as well. The application would need permissions in the manifest file for &lt;strong&gt;INTERNET, ACCESS_NETWORK_STATE&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Some of the code snippets shown were about using the HttpClient to make an HTTPGet Request and get the data (using new DefaultHttpClient). The code snippets also explained about how to use the HttpResponse and converting into a valid String and using the JSONObject to extract the information from JSON based REST services. Also various XML Parsers available to Android application are DOM Parsers, SAX Parsers, PullParser[recommended] and XmlPullParser.&lt;/p&gt;&lt;p&gt;They also briefly touched upon Fragments which are single piece of code adaptable for various form factors and also about the fragment life cycle.&lt;/p&gt;&lt;p&gt;Some of the newly introduced ICS features were also explained such as Action Bar and Split Action Bar. Also the design paradigm behind the action bar was discussed using the YouTube App&apos;s UI Organization. The advantage of using a Stacked ActionBar which acts as a Action Bar + Tabs, it gets mashed into a single bar in a tablet or in the landscape mode.&lt;/p&gt;&lt;h2&gt;Google APIs for MAPS&lt;/h2&gt;&lt;p&gt;The Google Maps API was a little too detailed session with less of demo and more of API detailing. They discussed about the &lt;strong&gt;Google Maps Static API&lt;/strong&gt; and its various parameter needs and usage such as depending on https:// the parameters might be different and others. They also explained about the &lt;strong&gt;Google Street View Image API&lt;/strong&gt; and the &lt;strong&gt;Google Maps Javascript API V3&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;Some of the demos described about obtaining the API Key at &lt;a href=&quot;http://code.google.com/apis/comsole&quot;&gt;http://code.google.com/apis/comsole&lt;/a&gt; and &lt;strong&gt;Maps Events&lt;/strong&gt;. They also described about Overlays and Layers and how the prebuilt aspects such as markers, ploylines, polygons can be used. They also explained about Layers and how they reflect collection of objects that are added on top of the map for association such as weather, traffic, heat maps etc.,&lt;/p&gt;&lt;p&gt;They also briefly touched upon the Direction API, the distance matrix, the elevation data which can be used by trekking and hiking applications, geocoding and street view.&lt;/p&gt;&lt;h2&gt;HTML5&lt;/h2&gt;&lt;p&gt;Guessing by the crowd, this was one of the most anticipated sessions of the day and it truly lived upto the expectations.&lt;br/&gt;The features were divided into 8 categories and presented.&lt;/p&gt;&lt;h4&gt;CSS3&lt;/h4&gt;&lt;p&gt;Some of the features that were explained and demoed were &lt;strong&gt;border-radius, HTML5 slider, box-shadow, text-shadow, text strokes&lt;/strong&gt;. Some of the obscure ones were &lt;strong&gt;image cropping (using clip : rect), opacity, columns (using column-count,column-rule,column-gap)&lt;/strong&gt;. The demoes extended to &lt;strong&gt;text-wrap (using text-overflow ellipsis,clip), gradients(linear or radial), reflection (box-reflect)&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;There were also demoes on transformations and transitions (this is the effect which describes the time to get the transformation) using &lt;strong&gt;transform,translate,scale,rotate,skew&lt;/strong&gt;. They also walked us through creating full fledged animations using @keyframes.&lt;/p&gt;&lt;h4&gt;3D Graphics&lt;/h4&gt;&lt;p&gt;There were great demoes on a **3D CSS cube, a CSS cubic bezier builder and a google chrome logo spin created using a bit of rendering using canvas and vector graphics using svg. There was also a quick note on putting text on a path using svg.&lt;/p&gt;&lt;p&gt;&lt;em&gt;Note to myself: Canvas needs js&lt;/em&gt;&lt;/p&gt;&lt;h4&gt;Multimedia&lt;/h4&gt;&lt;p&gt;Some demoes using the audio and video tags and fallbacks for formats.&lt;/p&gt;&lt;h4&gt;Connectivity&lt;/h4&gt;&lt;p&gt;&lt;em&gt;Not sure what was demoed ???&lt;/em&gt;&lt;/p&gt;&lt;h4&gt;Device Access&lt;/h4&gt;&lt;p&gt;The folks explained about achieving native drag and drop and the usage of the File Systems API. There was a really cool demo of a Html5 terminal using file systems API and drag drop. There were also demoes about a web based file directory browser and a great demo on using the device orientation which feeds the parameters using alpha, beta and gamma. There were also demoes on how to use the &lt;em&gt;navigator, geolocation and xspeech&lt;/em&gt;.&lt;/p&gt;&lt;h4&gt;Semantics&lt;/h4&gt;&lt;p&gt;There were quite a few tags being introduced and other modifications to streamline the web such as new input types for color,date etc., and new input constraints. They also explained about the changes to the Selector API.&lt;/p&gt;&lt;h4&gt;Offline&lt;/h4&gt;&lt;p&gt;They discussed briefly on the online and offline handlers network and local/session storage&lt;/p&gt;&lt;h4&gt;Performance and Integration&lt;/h4&gt;&lt;p&gt;There was a simple demo of application cache and explanation about the Web sockets and the History API which can now push and pop states to govern the back button of the browser.&lt;/p&gt;&lt;h2&gt;Conclusion&lt;/h2&gt;&lt;p&gt;All in all, it was a day well spent though many topics seemed targetted for a fresh audience rather than professionals. However, shedding some light into the content earlier and better facilities would surely make the next gday a grander success.&lt;/p&gt;
	</description>
    </item>
    <item>
      <title>Simple eBay Search using Backbone</title>
      <link>http://sengopal.github.io//blog/simple-ebay-search-using-backbone.html</link>
      <pubDate>Sun, 20 May 2012 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/simple-ebay-search-using-backbone.html</guid>
      	<description>
	&lt;p&gt;After going through some of the tutorials available, backbone seems to be a good bet for a client intensive application. So as a weekend project trying to build a working application using the eBay FindingAPI.&lt;/p&gt;&lt;p&gt;The use cases are simple enough:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;search for an item&lt;/li&gt;
  &lt;li&gt;save the item in your list&lt;/li&gt;
  &lt;li&gt;See a live timer of each item counting down&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Technologies used&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Twitter bootstrap - to build a quick UI&lt;/li&gt;
  &lt;li&gt;Backbone.js - for interaction and the main purpose of this excercise&lt;/li&gt;
  &lt;li&gt;mustache.js - For easier templating&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Project code can be found &lt;a href=&quot;https://github.com/sengopal/ebay-search&quot; title=&quot;ebay-search&quot;&gt;here&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Some of the tasks completed are:&lt;br/&gt;* Defining the model&lt;br/&gt;* Every Item result will display&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Item Title&lt;/li&gt;
  &lt;li&gt;Price&lt;/li&gt;
  &lt;li&gt;Time to finish&lt;/li&gt;
  &lt;li&gt;Shipping type&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Item can be added to or removed from my watch list - To be made a drag and drop later.&lt;/p&gt;
	</description>
    </item>
    <item>
      <title>50 Ubuntu shortcuts and tips</title>
      <link>http://sengopal.github.io//blog/ubuntu-shortcuts-and-tips.html</link>
      <pubDate>Wed, 11 Apr 2012 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/ubuntu-shortcuts-and-tips.html</guid>
      	<description>
	&lt;p&gt;These are various tips, tricks, changes to make ubuntu better. Obviously these are plagarized from various forums and posts &lt;em&gt;and i will be happy to provide attribution if you contact me.&lt;/em&gt;&lt;/p&gt;&lt;h3&gt;Customizing the Grub 2&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://maketecheasier.com/mastering-grub-2-the-easy-way/2009/11/19&quot;&gt;http://maketecheasier.com/mastering-grub-2-the-easy-way/2009/11/19&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://maketecheasier.com/create-and-install-your-own-grub-splash-image/2009/01/27&quot;&gt;http://maketecheasier.com/create-and-install-your-own-grub-splash-image/2009/01/27&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Installing Ruby on Rails&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;sudo apt-get install ruby irb ri rdoc ruby1.8&lt;/li&gt;
  &lt;li&gt;sudo apt-get install rubygems&lt;/li&gt;
  &lt;li&gt;sudo gem update --systemNow&lt;/li&gt;
  &lt;li&gt;sudo gem install rails --include-dependencies&lt;/li&gt;
  &lt;li&gt;rails name_of_app - To create new project type&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Uninstalling ROR&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;sudo gem uninstall rails&lt;/li&gt;
  &lt;li&gt;sudo apt-get remove rubygems ruby irb ri rdoc ruby1.8&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;To Install RPM file&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;sudo apt-get install alien&lt;/li&gt;
  &lt;li&gt;sudo alien -k filename.rpm - creates the deb file&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;To install BIN files&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;sudo chmod +x filename.bin&lt;/li&gt;
  &lt;li&gt;./filename.bin&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Installing a Tar.Gz Archive&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;extract&lt;/li&gt;
  &lt;li&gt;cd into the folder&lt;/li&gt;
  &lt;li&gt;program-installer. -&amp;gt; type in the Terminal: sh program-installer&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Setting Up Lamp server&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;sudo apt-get install lamp-server^&lt;/li&gt;
  &lt;li&gt;sudo apt-get install phpmyadmin&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Configuring Virtual Hosts&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;sudo a2enmod rewrite&lt;/li&gt;
  &lt;li&gt;sudo /etc/init.d/apache2 restart&lt;/li&gt;
  &lt;li&gt;Create /home/sengopal/www&lt;/li&gt;
  &lt;li&gt;cd /etc/apache2/sites-available&lt;/li&gt;
  &lt;li&gt;sudo cp default local.dev&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;sudo gedit local.dev&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;:::xml
&amp;lt;VirtualHost *:80&amp;gt;
    ServerAdmin webmaster@localhost
    serverName your server name here
    DocumentRoot /home/sengopal/www
    &amp;lt;Directory /&amp;gt;
        Options FollowSymLinks
        AllowOverride All
    &amp;lt;/Directory&amp;gt;
    &amp;lt;Directory /home/sengopal/www&amp;gt;
        Options Indexes FollowSymLinks MultiViews
        AllowOverride All
        Order allow,deny
        allow from all
    &amp;lt;/Directory&amp;gt;
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;sudo a2ensite local.dev&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;sudo /etc/init.d/apache2 reload&lt;/li&gt;
  &lt;li&gt;sudo gedit /etc/hosts - &lt;code&gt;127.0.0.1  local.dev&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;sudo /etc/init.d/apache2 reload&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://local.dev&quot;&gt;http://local.dev&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Configuring SSH&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;apt-get install openssh-server&lt;/li&gt;
  &lt;li&gt;cp /etc/ssh/sshd_config ~&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;gedit /etc/ssh/sshd_config&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;:::text
Port 22
PermitRootLogin no
AllowUsers non-root
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;/etc/init.d/ssh restart&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;telnet localhost 22&lt;/li&gt;
  &lt;li&gt;ssh &lt;a href=&quot;mailto:&amp;#110;o&amp;#110;&amp;#x2d;&amp;#x72;o&amp;#x6f;&amp;#116;&amp;#64;&amp;#109;&amp;#x61;&amp;#99;h&amp;#x69;&amp;#110;&amp;#101;&quot;&gt;&amp;#110;o&amp;#110;&amp;#x2d;&amp;#x72;o&amp;#x6f;&amp;#116;&amp;#64;&amp;#109;&amp;#x61;&amp;#99;h&amp;#x69;&amp;#110;&amp;#101;&lt;/a&gt; -p 22&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Simple Commands&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;gnome-app-install&lt;/li&gt;
  &lt;li&gt;sudo apt-get update&lt;/li&gt;
  &lt;li&gt;sudo dpkg -i package_name.deb&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;sudo apt-get remove [--purge] &amp;lt;package&amp;gt; ¦ [complete removal]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;ps aux | grep fire*&lt;/li&gt;
  &lt;li&gt;sudo apt-get clean&lt;/li&gt;
  &lt;li&gt;nautilus&lt;/li&gt;
  &lt;li&gt;sfdisk -luM&lt;/li&gt;
  &lt;li&gt;Alt + F2&lt;/li&gt;
  &lt;li&gt;gconf-editor&lt;/li&gt;
  &lt;li&gt;netstat -antlp&lt;/li&gt;
  &lt;li&gt;CTRL + H (nautilius)&lt;/li&gt;
  &lt;li&gt;dpkg-reconfigure -all&lt;/li&gt;
  &lt;li&gt;df -h&lt;/li&gt;
  &lt;li&gt;update-java-alternatives -s java-6-sun&lt;/li&gt;
  &lt;li&gt;env vars in /etc/environment&lt;/li&gt;
  &lt;li&gt;tail -f /var/log/syslog&lt;/li&gt;
  &lt;li&gt;change user of a file /folder:&lt;/li&gt;
  &lt;li&gt;CTRL + ALT + T - Terminal&lt;/li&gt;
  &lt;li&gt;CTRL + ALT + D - Desktop&lt;/li&gt;
  &lt;li&gt;CTRL + ALT + L - Lock screen&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;apt-cache search &amp;lt;package&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;sudo add-apt-repository ppa:&amp;lt;repo-name&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;~/.local/share/applications/default.list&lt;/li&gt;
&lt;/ol&gt;
	</description>
    </item>
    <item>
      <title>18 Useful command line tools in Windows</title>
      <link>http://sengopal.github.io//blog/useful-commands-in-windows.html</link>
      <pubDate>Thu, 1 Mar 2012 00:00:00 -0800</pubDate>
      <guid isPermaLink="false">blog/useful-commands-in-windows.html</guid>
      	<description>
	&lt;p&gt;Recently came across this suprising list of command line tools in Windows. I have used some of them and looking forward to use others as well. The below given commands are targeted for 32 bit OS.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;eudcedit&lt;/strong&gt; - Private Character Editor&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;iexpress&lt;/strong&gt; - for conerting your files to EXCUTABLE files&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;cleanmgr&lt;/strong&gt; - cleaning harddisk to offer space&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;drwtsn32&lt;/strong&gt; - repairing problems in Windows&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;mplay32&lt;/strong&gt; - Windows Media Player&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;charmap&lt;/strong&gt; - Character Map&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;dxdiag&lt;/strong&gt; - DirectX diagnosis&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;packager&lt;/strong&gt; - Object Packager&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;perfmon&lt;/strong&gt; - System Monitor&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;progman&lt;/strong&gt; - Program Manager&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;rasphone&lt;/strong&gt; - Remote Access phone book&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;regedt32&lt;/strong&gt; - Registry Editor&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;sigverif&lt;/strong&gt; - File siganture verification tool&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;sndvol32&lt;/strong&gt; - Volume Control&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;sysedit&lt;/strong&gt; - System Configuration Editor&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;syskey&lt;/strong&gt; - Syskey&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;telnet&lt;/strong&gt; - Microsoft Telnet Client&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;Code for checking firewall settings in windows&lt;/strong&gt;&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;:::bat
netstat -a -b
netsh advfirewall firewall show rule name=all &amp;gt; firewallrules.txt
netsh advfirewall firewall show rule name | find &amp;quot;Block&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
	</description>
    </item>
    <item>
      <title>Android Application development notes - Part 1</title>
      <link>http://sengopal.github.io//blog/android-learn-part1.html</link>
      <pubDate>Mon, 9 Jan 2012 00:00:00 -0800</pubDate>
      <guid isPermaLink="false">blog/android-learn-part1.html</guid>
      	<description>
	&lt;p&gt;Today I am starting with a new series for learning application development in Android. This series will have five parts and will consists of all the basics that someone needs to understand, learn and kick start developing using Android.&lt;/p&gt;&lt;h3&gt;What is Android?&lt;/h3&gt;&lt;p&gt;Android is an operating system primarily for mobile devices created by Andy Rubin, the owner of Android Inc. It is being developed by OHA [Open Handset Alliance], a non-profit organization created in 2007 by around 79 companies which include contributions from software, hardware and device management corporations. The first Android phone was introduced by HTC in 2008 and the recent one being the Samsung Galaxy Nexus in late 2011.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://upload.wikimedia.org/wikipedia/commons/a/a1/Android_home.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://upload.wikimedia.org/wikipedia/commons/a/a1/Android_home.png&quot; width=&quot;231&quot; height=&quot;383&quot; /&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://upload.wikimedia.org/wikipedia/commons/e/e7/Android_4.0.png&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;margin: 0px 0px 0px 90px&quot; src=&quot;http://upload.wikimedia.org/wikipedia/commons/e/e7/Android_4.0.png&quot; width=&quot;217&quot; height=&quot;385&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Design&lt;/h3&gt;&lt;p&gt;Android is a Linux based operating system customized to primarily work with mobile devices. The architecture/design of the Android ecosystem consists of the &lt;strong&gt;Linux Kernel&lt;/strong&gt; which takes care of the device drivers, the &lt;strong&gt;Libraries&lt;/strong&gt; such as Surface managers, LIBC written in C / C++,** Application framework** which exposes the handlers for creating custom applications, **Android Runtime **which contains the Core Libraries [written in Java] and the custom made **Dalvik Virtual Machine **which reads the DEX files [dalvik executable]&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/File:System-architecture.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://upload.wikimedia.org/wikipedia/commons/6/63/System-architecture.jpg&quot; width=&quot;548&quot; height=&quot;394&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Concept of DEX&lt;/h3&gt;&lt;p&gt;The Android toolkit compiler takes care of compiling, building and packaging the applications created using the application framework. The advent of .dex files saves the creation of hundreds of class files and generates one single dex file for an application. The drawback of this approach is that normal JAR files will not work in Android JVM, they need to be built again to ensure it works similar to how the &quot;Core Libraries&quot; have been created from source.&lt;/p&gt;&lt;h2&gt;Boot up Sequence&lt;/h2&gt;&lt;p&gt;Though Android is built on Linux Kernel, it does not follow the same boot up sequence of the Linux kernel. On powering up, the bootloader reads the OS from ROM and loads into RAM. Then the init() of the linux kernel is invoked which loads these main four background[Daemon] processes.&lt;br/&gt;1. USB daemon&lt;br/&gt;2. Android Debug Bridge&lt;br/&gt;3. Debugger Daemon&lt;br/&gt;4. Radio Interface Layer Daemon&lt;/p&gt;&lt;p&gt;After the daemon process, Android Runtime and Zygote [MASTER DALVIK VM] will then be started. Zygote will create individual Dalvik VMs for every application. The philosophy behind the Dalvik JVM creation is that every application will run in its own DVM wherein around 15-30 MB of RAM space for a DVM Process will be allocated. When there is a shortage of memory, the Zygote finds the Least Used Application, terminates and reclaims the RAM space. The System Server process is never terminated ahead of application space. Because of this termination/reclaiming process, application state storage/retrieval, needs to be built into the application itself.&lt;/p&gt;&lt;h3&gt;Android SDK&lt;/h3&gt;&lt;p&gt;The first Android version was released in 2008 called Apple pie with the latest version being called the “Ice cream sandwich” with version 4.0. The full list of Android releases and the supported features is available &lt;a href=&quot;http://socialcompare.com/en/comparison/android-versions-comparison&quot;&gt;here&lt;/a&gt;. Some of the modern usage of the Android application development tools involve jQuery Mobile, HTML 5 using the Webkit introduced with Android Gingerbread. More detailed developer videos are available at &lt;a href=&quot;http://developer.android.com/videos/index.html&quot;&gt;http://developer.android.com/videos/index.html&lt;/a&gt;&lt;/p&gt;
	</description>
    </item>
    <item>
      <title>Android Application development notes - Part 2</title>
      <link>http://sengopal.github.io//blog/android-learn-part2.html</link>
      <pubDate>Mon, 9 Jan 2012 00:00:00 -0800</pubDate>
      <guid isPermaLink="false">blog/android-learn-part2.html</guid>
      	<description>
	&lt;h2&gt;Hello Android Application creation steps&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Create an android Project and just run without any changes&lt;/li&gt;
  &lt;li&gt;Individual manufacturer specific emulator skins are available for downloads&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;AndroidManifest.xml&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Usage of @drawable, @string&lt;/li&gt;
  &lt;li&gt;Application Definition&lt;/li&gt;
  &lt;li&gt;Activity Definition&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;INTENT-FILTER&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Activity with &lt;code&gt;android.intent.action.MAIN&lt;/code&gt; which will be started first&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;android.intent.category.LAUNCHER&lt;/code&gt; adds the Application to the Apps Menu Launcher&lt;/li&gt;
  &lt;li&gt;Java packages available within Android SDK is not the exact same as Java SDK&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Activity Lifecycle&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Always ensure super.onCreate is called.&lt;/li&gt;
  &lt;li&gt;Res/layout - user interface definition using XML&lt;/li&gt;
  &lt;li&gt;LinearLayout - Similar to Flow layout in AWT&lt;/li&gt;
  &lt;li&gt;Fill_parent - will fill the entire vertical portion [will not allow to place another component alongside]&lt;/li&gt;
  &lt;li&gt;wrap_content - wrap the content and allows other components to be placed along side&lt;/li&gt;
  &lt;li&gt;Activities, Services, Content Providers, BroadCast Recievers&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Activity Structure&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Concrete Class, extends Activity, Needs Entry in AndroidManifest&lt;/li&gt;
  &lt;li&gt;One Activity with IntentFilter MAIN&lt;/li&gt;
  &lt;li&gt;A view hierarchy is placed in Activity using setContentView()&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Activity LifeCycle&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;onCreate() - View Creation&lt;/li&gt;
  &lt;li&gt;onStart()&lt;/li&gt;
  &lt;li&gt;onResume()&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Activity Lifecycle Diagram&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Perform setView on onCreate as it needs to be done only once&lt;/li&gt;
  &lt;li&gt;What is a Bundle? - Similar to eBay V3 batch restarted data&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Store Key-Pair value for retrieval in case of Dalvik VM stops and starts again calling onCreate ()&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;So always check for specific values in Bundle and then proceed.&lt;/li&gt;
  &lt;li&gt;Save the values using onStop(), so that it picks when onCreate is called&lt;/li&gt;
  &lt;li&gt;Bundle will be stored in System Server&lt;/li&gt;
  &lt;li&gt;Multiple Screens can be shown using the same Activity. &lt;em&gt;Just by calling the setContentView&lt;/em&gt; - &lt;em&gt;But navigation will be a problem&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Android Intents&lt;/h3&gt;&lt;h4&gt;Overview&lt;/h4&gt;&lt;p&gt;Intents are asynchronous messages which allow Android components to request functionality from other components of the Android system. For example an Activity can send an Intents to the Android system which starts another Activity. Therefore Intents allow to combine loosely coupled components to perform certain tasks. Intents can be used to signal to the Android system that a certain event has occurred. Other components in Android can register to this event and will get notified. Intents are instances of the &lt;code&gt;android.content.Intent&lt;/code&gt; class. Intents are send to the Android system. Depending on how the Intent was constructed the Android system will run an receiver determination and determine what to do.&lt;/p&gt;&lt;p&gt;An Intent can also contain data. This data can be used by the receiving component. For example your application can calls via an Intent a browser&lt;br/&gt;component. As data is it may send the URL to the browser component. Android supports explicit and implicit Intents.&lt;/p&gt;&lt;h4&gt;Explicit Intents&lt;/h4&gt;&lt;p&gt;Explicit Intents explicitly names the component which should be called by the Android system, by using the the Java class as identifier. The following shows an explicit Intent. If that Intent is correctly send to the Android system, it will start the associated class.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:::java
Intent i = new Intent(this, ActivityTwo.class);
i.putExtra(&amp;quot;Value1&amp;quot;, &amp;quot;This value one for ActivityTwo &amp;quot;);
i.putExtra(&amp;quot;Value2&amp;quot;, &amp;quot;This value two ActivityTwo&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Explicit Intents are typically used within on application as the classes in an application are controlled by the application developer.&lt;/p&gt;&lt;h4&gt;Implicit Intents&lt;/h4&gt;&lt;p&gt;Implicit Intents do not specify the Java class which should be called. They specify the action which should be performed and optionally an URI which should be used for this action. For example the following tells the Android system to view a webpage. Typically the web browser is registered to this Intent but other component could also register themself to this event.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:::java
Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(&amp;quot;http://www.vogella.de&amp;quot;));
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If these Intents are send to the Android system it searches for all components which are registered for the specific action and the data type.&lt;/p&gt;&lt;p&gt;If only one component is found, Android starts this component directly. If several components are identifier by the Android system, the user will get an selection dialog and can decide which component should be used for the Intent.&lt;/p&gt;
	</description>
    </item>
    <item>
      <title>AWS Cloud Tour Chennai 2011</title>
      <link>http://sengopal.github.io//blog/aws-cloud-tour.html</link>
      <pubDate>Fri, 2 Dec 2011 00:00:00 -0800</pubDate>
      <guid isPermaLink="false">blog/aws-cloud-tour.html</guid>
      	<description>
	&lt;h2&gt;Keynote&lt;/h2&gt;&lt;p&gt;Amazon web services had arranged for a 1-day expo for customers, partners and enthusiasts alike at Hyatt Regency in Chennai. The main hosts Shane and Janakiram were warm and truly enthusiastic about the turnout for the event. The limelight of the event though was &lt;strong&gt;Dr.Werner Vogel&lt;/strong&gt;, the CTO of Amazon and a wonderfully hearty person who enjoyed the keynote and the other interactions as much as the participants.&lt;/p&gt;&lt;p&gt;Some of the customer solutions who had booths set up are Right Scale (who provided a free trial), Cognizant Technology Solutions who were demonstrating their &lt;em&gt;Logging as a service&lt;/em&gt; which pulls the logs from app to a private cloud and uses hadoop to analyze the data based on a user query.&lt;/p&gt;&lt;h2&gt;Building Fault tolerent AWS applications&lt;/h2&gt;&lt;p&gt;The first session after the keynote was &lt;em&gt;Building Fault tolerent AWS applications&lt;/em&gt; which described about the AWS building blocks, Amazon EC2 architecture and the High availability features of EDS&lt;/p&gt;&lt;h3&gt;AWS building blocks&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Amazon EC2&lt;/li&gt;
  &lt;li&gt;Amazon S3&lt;/li&gt;
  &lt;li&gt;Amazon EBS&lt;/li&gt;
  &lt;li&gt;Amazon VPS&lt;/li&gt;
  &lt;li&gt;Elastic LB&lt;/li&gt;
  &lt;li&gt;Amazon RDS&lt;/li&gt;
  &lt;li&gt;Amazon Global physical infrastructure&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;All these above are just like Lego building blocks enabling mix and match of these components to build the necessary system.&lt;/p&gt;&lt;h3&gt;Amazon EC2 - Elastic Compute Cloud&lt;/h3&gt;&lt;p&gt;EC2 can scale out/in/up/down&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Choose the EC2 instance depending on region of your customers&lt;/li&gt;
  &lt;li&gt;Choose Amazon Machine Image - To be launched in AZ - as a EC2 instance
  &lt;ol&gt;
    &lt;li&gt;Epheremal Storage&lt;/li&gt;
    &lt;li&gt;Elastic Block Storage - Snapshot stored in S3&lt;/li&gt;
    &lt;li&gt;Security Groups - Elastic IP and Elastic LB&lt;/li&gt;
    &lt;li&gt;Amazon Cloud Watch (tracking and monitoring)&lt;/li&gt;
  &lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Elastic IP&lt;/strong&gt;&lt;br/&gt;1. Associated with an AWS account&lt;br/&gt;2. Sync assign to a running instance&lt;br/&gt;3. Quickly remap EIP to any instance&lt;br/&gt;4. Always point Static IP as the Elastic IP&lt;br/&gt;5. Domain CNAME mapped to Elastic IP. &lt;em&gt;This is useful if the EC2 instance goes donw, it can be pointed to a secondary server&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Elastic Block Store&lt;/strong&gt;&lt;br/&gt;1. From 1GB to 1TB&lt;br/&gt;2. formatted with native file system&lt;br/&gt;3. automatically replicated in same AZ&lt;br/&gt;4. ability to create point-in-time snapshots stored in S3&lt;br/&gt;5. integration with CloudWatch to track performance metrics&lt;/p&gt;&lt;h4&gt;Instance Metadata&lt;/h4&gt;&lt;p&gt;SPOT Instances/On demand instances - Bid, win, Perform and the instance is shut down&lt;/p&gt;&lt;h4&gt;Making the ANI Dynamic&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Similar to JNDL - Metadata endpoint - 169.254.169.254 accessable by EC2 instance&lt;/li&gt;
  &lt;li&gt;Instance Queries the End point to know what is the role it needs to play&lt;/li&gt;
  &lt;li&gt;If the endpoint says it is a Web Server, it setups itself as Apache HTTPD server and queries the lastest website as returned by the End point&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Dynamic discovery of the DB&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;which is the master and slave DBs info for the EC2 web server instance&lt;/li&gt;
  &lt;li&gt;while launching, additional parameters can be given&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Elastic Load Balancer&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;distribute across AZs&lt;/li&gt;
  &lt;li&gt;detect health of instances and block traffic
  &lt;ol&gt;
    &lt;li&gt;supports sticky sessions&lt;/li&gt;
    &lt;li&gt;supports IPv4 and IPv6&lt;/li&gt;
    &lt;li&gt;Request count and latency metrics in CloudWatch&lt;/li&gt;
  &lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Amazon RDS - Relational Data services&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Web service&lt;/li&gt;
  &lt;li&gt;Automatic failover&lt;/li&gt;
  &lt;li&gt;Sync replication&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Quick Steps&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Start with EC2&lt;/li&gt;
  &lt;li&gt;Attach an elastic IP&lt;/li&gt;
  &lt;li&gt;Create and attach EBS&lt;/li&gt;
  &lt;li&gt;Bundle generic AMIs using Metadata&lt;/li&gt;
  &lt;li&gt;Associate EC2 instances with the ELB&lt;br/&gt;6.Launch RDS DB instances in Multi AZ&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Arjun Chopra - Building AWS Apps&lt;/h2&gt;&lt;p&gt;This presentation was by Arjun Chopra, the CTO of Cambridge Tech. Enterprises and uses aws for cloud enablement.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;24x7 management, starting at 9$&lt;/li&gt;
  &lt;li&gt;why cloud makes sense
  &lt;ol&gt;
    &lt;li&gt;no up front expense&lt;/li&gt;
    &lt;li&gt;pay as u go&lt;/li&gt;
    &lt;li&gt;on demand provisioning&lt;/li&gt;
    &lt;li&gt;Elastic scale&lt;/li&gt;
    &lt;li&gt;Pass benefits on to users&lt;/li&gt;
  &lt;/ol&gt;&lt;/li&gt;
  &lt;li&gt;Cloud Goal Flip the equation&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Build a Cloud ready App&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Shared responsiblity model&lt;/li&gt;
  &lt;li&gt;Development and migration assissted by CTE&lt;/li&gt;
  &lt;li&gt;24/7 managed services delivered by cloud enable&lt;/li&gt;
  &lt;li&gt;on demand pay as u go infrastructure provided by AWS&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Design Best Practices&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Protect ur data&lt;/li&gt;
  &lt;li&gt;Design for failure so nothing fails&lt;/li&gt;
  &lt;li&gt;Decouple and make stateless&lt;/li&gt;
  &lt;li&gt;Handle reboots grcefully&lt;/li&gt;
  &lt;li&gt;Isolate traffic
  &lt;ol&gt;
    &lt;li&gt;Static vs dynamic&lt;/li&gt;
    &lt;li&gt;Read Vs write&lt;/li&gt;
  &lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Operation Best practices&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Secure the systems&lt;/li&gt;
  &lt;li&gt;Leverage the Regions and AZs for disaster receovery&lt;/li&gt;
  &lt;li&gt;Create the automation roadmap&lt;/li&gt;
  &lt;li&gt;Seperate enviornments and keep consistent&lt;/li&gt;
  &lt;li&gt;Establish monitoring and management parameters and alarms&lt;/li&gt;
  &lt;li&gt;Document, Test and Improve&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Security&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Deny all as default, except as mentioned below&lt;/li&gt;
  &lt;li&gt;Web Server Security Group [80+443]&lt;/li&gt;
  &lt;li&gt;app server secruity grp [App server ports;comm from WS group members only]&lt;/li&gt;
  &lt;li&gt;DB secrutiy grp [DB ports; comm with App Server Grop members]&lt;/li&gt;
  &lt;li&gt;Admin sec grp [SSH port; admin security only]&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Harden all stack components&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Securing the DB&lt;/strong&gt;&lt;br/&gt;1. use TDE for easy app development&lt;br/&gt;2. Use RDS aor ensure HA&lt;br/&gt;3. Run on a hardened AMI&lt;br/&gt;4. Seperation of duties&lt;br/&gt;5. Access control and audit tools&lt;/p&gt;&lt;h3&gt;Supporting Multiple customers&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Dedeicated Cloudlets for Tenants&lt;/li&gt;
  &lt;li&gt;Hardend OS for entire stack&lt;/li&gt;
  &lt;li&gt;Dedicated cloudlet for multi tenant software&lt;/li&gt;
  &lt;li&gt;In flight and rest data secruity&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Cloud Enables full SLA driven Opeartions&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Pro active management&lt;/li&gt;
  &lt;li&gt;Pro active monitoring&lt;/li&gt;
  &lt;li&gt;Configuration management&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Business Continuity and Disaster recovery&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Avoid single points of failure&lt;/li&gt;
  &lt;li&gt;Design and test failure and recoeveyr scenearitos -Netfilis used Chaos Script random down of instnaces&lt;/li&gt;
  &lt;li&gt;Define RTOs and RPOs - receovery time&lt;/li&gt;
  &lt;li&gt;Define and develop data backup management&lt;/li&gt;
  &lt;li&gt;Account for security, encryption, key rotation and account termination&lt;/li&gt;
  &lt;li&gt;Deliver automation when required&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Case studies&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;University of Cloud&lt;/li&gt;
  &lt;li&gt;Cloud readiness assessment&lt;/li&gt;
  &lt;li&gt;On boarding&lt;/li&gt;
  &lt;li&gt;Cloud enable management&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Vishal Malik CoE Cognizant&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Petabyte scale computing on EC2 with Big Data&lt;/li&gt;
  &lt;li&gt;2013, 650 Exabyte&apos;s on internet&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Challenge&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Ability to prcess huge data, filter at scale&lt;/li&gt;
  &lt;li&gt;Turning raw unstructured data into insights using ML etc.,&lt;/li&gt;
  &lt;li&gt;Adding relavance to data via personalizing content&lt;/li&gt;
  &lt;li&gt;Analyzing data by adding ML about what user likes and give more of it [driving online-ad revenues for example]&lt;/li&gt;
  &lt;li&gt;Nike Logo change and checking public reaction&lt;/li&gt;
  &lt;li&gt;Sentimental analysis in realtime will become more prevalent&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Agile BI&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Analytics near real time, process 5 TB+ in less than 1 minute&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;RDBMS&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;good for transactions&lt;/li&gt;
  &lt;li&gt;Bad for
  &lt;ol&gt;
    &lt;li&gt;Queues polling caching&lt;/li&gt;
    &lt;li&gt;Social graph tree traversal, NxN relationships&lt;/li&gt;
    &lt;li&gt;Dont require ACID everything&lt;/li&gt;
    &lt;li&gt;Not good for scaling to PetaBytes of data&lt;/li&gt;
    &lt;li&gt;Traditional SQL based systems have replication delay, cache eviction, produce inconsistent results, slow [single threaded], locks create contention for popular data&lt;/li&gt;
    &lt;li&gt;Hence cant scale to Petabytes&lt;/li&gt;
  &lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Solution&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Cost effective&lt;/li&gt;
  &lt;li&gt;Processing Side
  &lt;ol&gt;
    &lt;li&gt;Use Hadoop&lt;/li&gt;
    &lt;li&gt;Sql-like layer on top&lt;/li&gt;
    &lt;li&gt;Access time is in micro-seconds&lt;/li&gt;
  &lt;/ol&gt;&lt;/li&gt;
  &lt;li&gt;Storage side
  &lt;ol&gt;
    &lt;li&gt;S3, Simple DB&lt;/li&gt;
    &lt;li&gt;Private cloud using NoSQL dbs namely Hbase, CouchDb, mongoDB, Riak,Redis etc.,&lt;/li&gt;
  &lt;/ol&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Big Data by industry&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;Cloud based solutions built using AWS&lt;/li&gt;
  &lt;li&gt;Logging as a Service&lt;/li&gt;
  &lt;li&gt;Gigabyte Scale Log management&lt;/li&gt;
  &lt;li&gt;Logs are saved in a S3 system and the processing is performed in EC2&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Current state of Storage Tiering&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;Data can be hot, warm and cold&lt;/li&gt;
  &lt;li&gt;Hot data needs to be saved in SSD&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;NoSQL Datastores&lt;br/&gt; All dont using the iMoveS Engine&lt;br/&gt; S/w Based checkpoint system&lt;br/&gt; Policy based data object migration&lt;br/&gt; RAID, replication and monitoring is very important&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;S/w based Storage Tiering&lt;br/&gt; iMoveS Architecture&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Mahout Platform as a Service&lt;br/&gt; Comparable to Google Analytics APU&lt;br/&gt; Classification - Basic prediction&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Panel Discussion&lt;/h2&gt;&lt;p&gt;There was a panel dicussion which contains Vaidyanathan from Classle who discussed about &lt;em&gt;Creating a Social Learning network&lt;/em&gt; and &lt;em&gt;Virtualize the architecture rather than the CPU and Storage&lt;/em&gt;. The panel also had folks from Consim (Matrimony services), Mahul Shah (Ventuno Tech) which monetizes the video platform. Ventuno tech experimented with AWS Ec2 catering to 8 million requests/day. They also had Raj Bala from Cognizant which came up with System Integrator for Enterprise Customers from Fortune 100. They provide business processes on the cloud along with Complete Stack with internal assets placed on AWS since it provides articulity, agility in deploying quickly and fast failure.&lt;/p&gt;&lt;p&gt;Then followed a great Q&amp;amp;A session and the emphasis is&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;on creating an application architecture based on AWS products.&lt;/li&gt;
  &lt;li&gt;If there is an asset management/Trans database is needed, break it into simple Async/eventual transactions and move only the unavoidable transactions to SQL&lt;/li&gt;
  &lt;li&gt;But always DECOMPOSE correctly and move to eventual transactions.&lt;/li&gt;
  &lt;li&gt;Change architecture to support the EVENTUAL transcations.&lt;/li&gt;
  &lt;li&gt;First use the Management Console and Start Programming with the APIs later&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;How Amazon.com moved to AWS - Dr. Verner Wogel&lt;/h2&gt;&lt;h4&gt;Size of CC2.8xlarge&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;88 EC2 Compute untis&lt;/li&gt;
  &lt;li&gt;60.5 GB memory&lt;/li&gt;
  &lt;li&gt;3370 GB instance storage&lt;/li&gt;
  &lt;li&gt;64 bit&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Problems&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Distribution Center isolation&lt;/li&gt;
  &lt;li&gt;Relational databases are Scaling nightmare&lt;/li&gt;
  &lt;li&gt;Scaling and reliability was based on Databases&lt;/li&gt;
  &lt;li&gt;CMS - Customer management services - First service&lt;/li&gt;
  &lt;li&gt;No other service can access your Private Data model&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Solutions&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Decouple&lt;/li&gt;
  &lt;li&gt;SOA - For isolation&lt;/li&gt;
  &lt;li&gt;Scale Horizontally&lt;/li&gt;
  &lt;li&gt;Increase Speed of Execution&lt;/li&gt;
  &lt;li&gt;Develop Iteratively&lt;br/&gt;6.Seek Simplicity&lt;/li&gt;
  &lt;li&gt;Completely de-centralized Data model&lt;/li&gt;
  &lt;li&gt;Working from the Customer backwards - First write a press release, FAQ, User Manual - Get feedback and then start building&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Scalability through Smart Systems Engg&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Use scalable primitives&lt;/li&gt;
  &lt;li&gt;Cache near the edges&lt;/li&gt;
  &lt;li&gt;Employ hierearchies and functioanl partitioning&lt;/li&gt;
  &lt;li&gt;User aggreration and data fusion techniquies&lt;/li&gt;
  &lt;li&gt;Dont conceal heterogenity&lt;/li&gt;
  &lt;li&gt;Strict in what you emit, liberal in what you accept&lt;/li&gt;
  &lt;li&gt;Avoid strong consistency properties&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Principles of Scalable Service Design&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Autonomy&lt;/li&gt;
  &lt;li&gt;Asynchrony&lt;/li&gt;
  &lt;li&gt;Controlled concurrency&lt;/li&gt;
  &lt;li&gt;Controlled parallelism&lt;/li&gt;
  &lt;li&gt;Decentralize&lt;/li&gt;
  &lt;li&gt;Decompose into small well understood building blocks&lt;/li&gt;
  &lt;li&gt;Failure tolreant&lt;/li&gt;
  &lt;li&gt;Local responsibility - Trouble shoot only your domain&lt;/li&gt;
  &lt;li&gt;Recovery built in&lt;/li&gt;
  &lt;li&gt;Simplicity&lt;/li&gt;
  &lt;li&gt;Symmetry&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;What could we do just with S3 (Scalable Service Design)&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Experimenting and scaling for successful experiments&lt;/li&gt;
  &lt;li&gt;Thearrical information from IMDB service - IMDB Widget&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Problem&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Release process is coupled&lt;/li&gt;
  &lt;li&gt;Runtime latency and scale requirements&lt;/li&gt;
  &lt;li&gt;Service integration issues&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Solution&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Use S3 as aservice&lt;/li&gt;
  &lt;li&gt;IMDB - Store raw HTML for the feature in S3 - Amazon picks up from the S3 HTML Store&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Results&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Reduced page latency&lt;/li&gt;
  &lt;li&gt;IMDB doesnt worry abt Scaling&lt;/li&gt;
  &lt;li&gt;Reduced Web server CPU utilization&lt;br/&gt;4.Improvde availability thur reduced dependencies&lt;/li&gt;
  &lt;li&gt;Simplified release model [Blue/Green Release Model - failure switch over for failure deployments, errors]&lt;/li&gt;
  &lt;li&gt;AJAX readiness&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;More Complex case -Monitoring Tool&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Client Experience Analytics 1.0&lt;/strong&gt;&lt;/p&gt;&lt;h4&gt;Problem&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;System has lot of moving parts&lt;/li&gt;
  &lt;li&gt;Run in a external data center&lt;/li&gt;
  &lt;li&gt;Cannot scale up quickly&lt;/li&gt;
  &lt;li&gt;Dev team is 2 people&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Solution&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Use as many AWS services as possible&lt;/li&gt;
  &lt;li&gt;Cloud Watch is used&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Results&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Few dev resources&lt;/li&gt;
  &lt;li&gt;launched w/o any colo datacenter&lt;/li&gt;
  &lt;li&gt;True external performance metrics&lt;/li&gt;
  &lt;li&gt;Test site features in dev before launched&lt;/li&gt;
  &lt;li&gt;System scales horizontally large amounts of traffic&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;What about amazon.com web servers&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;15% + highest peak for weekly traffic&lt;/li&gt;
  &lt;li&gt;39% of capcity is not used at all due to the highs and lows&lt;/li&gt;
  &lt;li&gt;November Traffic [Holiday season] - only 24% used and 76% goes unused as they have to be kept ready&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Problem&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Retail web site HW is underutilized&lt;/li&gt;
  &lt;li&gt;Traffic spikes require heroic effort&lt;/li&gt;
  &lt;li&gt;Scaling is non linear&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Solution&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Migrate the entire www.amazon.com web server fleet to AWS&lt;/li&gt;
  &lt;li&gt;VPC between amazon.com classic and AWS EC2&lt;/li&gt;
  &lt;li&gt;Nov 10, 2010 - all the physical amazon.com web servers are all turned off&lt;/li&gt;
  &lt;li&gt;Oct 31, 2011 - last piece of h/w serving all over internationally is switched off&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Results&lt;/h4&gt;&lt;p&gt;1.Traffic for several Amazon retail sites is now served from AWS&lt;br/&gt;2. Dynamically scale the fleet in increments as small as a single host&lt;br/&gt;3. Traffic spikes can be handled with ease&lt;/p&gt;&lt;h3&gt;What is a DB use case?&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;All the old orders from 1997 available - historical data&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Order storage Arch&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Order Database - current and historical&lt;/li&gt;
  &lt;li&gt;Use either Scale out or Scale UP&lt;/li&gt;
  &lt;li&gt;Old data is very rarely queried&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Problems&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Cumulative data impacts scale&lt;/li&gt;
  &lt;li&gt;No DB scaling pattern is ideal&lt;/li&gt;
  &lt;li&gt;DB infrastructures is expensive&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Solution&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Tiered storage system with AWS&lt;/li&gt;
  &lt;li&gt;Ordering service - uses order database or S3 depending on data query&lt;/li&gt;
  &lt;li&gt;Allowing user only Querying based on the Primary data and not all the various combinations&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Results&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;670 million / 4 TB orders in S3&lt;/li&gt;
  &lt;li&gt;We are spending less on DB hosts&lt;/li&gt;
  &lt;li&gt;Migration to RDS/SDB&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Business Lessons learned&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Less time on capcity planning&lt;/li&gt;
  &lt;li&gt;Fewer finance conversations&lt;/li&gt;
  &lt;li&gt;More innovation&lt;/li&gt;
  &lt;li&gt;Happier developers&lt;/li&gt;
  &lt;li&gt;Get credit for AWS price reductions&lt;/li&gt;
  &lt;li&gt;Sure to consider compliance issues&lt;/li&gt;
  &lt;li&gt;No more lease returns&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Tech lessons&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Start with simple apps&lt;/li&gt;
  &lt;li&gt;Iterate towards ur desired end state&lt;/li&gt;
  &lt;li&gt;Identity reusale componentnts&lt;/li&gt;
  &lt;li&gt;Engage security early and treat as partners&lt;/li&gt;
  &lt;li&gt;Migrate to the cloud in concert with ur arch objectives&lt;/li&gt;
  &lt;li&gt;Cloud cant cover up for sloppy engineering&lt;/li&gt;
&lt;/ol&gt;
	</description>
    </item>
    <item>
      <title>Google Developer Fest 2011 - Random Notes</title>
      <link>http://sengopal.github.io//blog/google-dev-fest-part-1.html</link>
      <pubDate>Thu, 22 Sep 2011 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/google-dev-fest-part-1.html</guid>
      	<description>
	&lt;h3&gt;Keynote&lt;/h3&gt;&lt;p&gt;After a feisty travel from Chennai to Bangalore, i reached the Lalit Ashok without any incidents. The Google folks used the QR code from our confirmation mails to record our attendance - Cool! Then we had a huge queue for getting our name tags which are pre-generated and unfortunately was clubbed together in alphabetical order. A little fiasco ensued, but alls well that ends well, I got my name tag and found a great seat right in front of the lectern.&lt;/p&gt;&lt;p&gt;Due to the above mentioned fiascos, the keynote started a little late and was given by Rajdeep and the main theme of the day is about Android 3.x. Then we had Boris explaining us with a cool presentation made of HTML5 in appspot about Bleeding edge HTML5 which deals with the Sound API, PrePageRender etc.,&lt;/p&gt;&lt;h3&gt;Itenary&lt;/h3&gt;&lt;p&gt;The intenary is available &lt;a href=&quot;http://www.slideshare.net/senthil777/google-dev-fest-2011-itenary&quot; title=&quot;itenary in slideshare&quot;&gt;here&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Android market place&lt;/h3&gt;&lt;p&gt;Then we had Tony explaining us about the growth of Android market which is 49% global based on device activations which amounts to nearly 50k activations per day. This year displays about 3x increase in US and 14x increase in Rest of the World. The app Installations per device shows Honeycomb as the top leader which encourages development in Tablets.&lt;/p&gt;&lt;p&gt;Some salient but little known facts about the Android market that it has Checkout Merchants in 29 countries, access to download error reports. This is given without any stringent review process. In terms of application licensing, it can be modeled to ensure that only licensed users can utilize the application. The android market gives full control on how our app enforces its licensing policies.&lt;/p&gt;&lt;p&gt;Some things to watch out for while developing an android market application is that our application code is obfuscated, no reuse of any sample code, License Validation Library is changed and most importantly to offload license response validation to a trust server. This methodology works only if the application is designed to have the content on the server which is picked up from the web and pushed into the android phone.&lt;/p&gt;&lt;p&gt;There are also provisions for In-App billing, to sell digital content [No physical content as there will be a TOS conflict]. In case of payment related functionalities some of the gotchas are that the API Level should be 4+, release signing key should be used for development, some Google Checkout API&apos;s are disabled [Cancel and Refund] which need to be done from the merchant console. Also, the Google Checkout API callback URL will not work and Order notifications need to be confirmed once they arrive, since the android market consumes the checkout.&lt;/p&gt;&lt;p&gt;Some of the features that are available for an application developer are Carrier Billing, Monthly sales reporting, Detailed transaction records, App Purchases and in-App payments. The developers can also access application statistics such as Active Installation Trend, Distribution by Android Version and Distribution by device.&lt;/p&gt;&lt;p&gt;Some of the recent features that have been enabled for the application developers are Multiple APK support, App being available as ONE product listing, User Ratings, aggregated comments and billing. The marketplace also filters the unsupported devices, show all supported devices for published or draft apps. The marketplace also has been revamped to display New Localized listings which has sections for Top and New applications falling under categories like Free, Paid, Grossing, Trending. They are also displaying recommendations such as - who viewed this also viewed and who installed this also installed. The application developers can also earn badges which can boost their growth in the android market such as Top Developer, Editor&apos;s choice. There are also talks about large application support with 500MB app package and 2GB of archives. Some professional tips to market the application better are to update users with the new version information and recent changes, update listing details with information about the L10N translations, provide good graphics for the application, create a short video, set filters in app manifest about details of non - compatible devices, update the description about needed permissions and most importantly price the application correctly after comparing similar apps and monitor user comments and error reports.&lt;/p&gt;&lt;h3&gt;Android ADK and fragment Accessory overview&lt;/h3&gt;&lt;p&gt;Fragments are reusable UI, app functionality components within an Activity which has its Own lifecycle, back stack and its lifecycle is affected by the host Activity&apos;s lifecycle. It is considered as the investment for the future and used for easier reusability and supporting multiple devices. A fragment can be attached to a ViewGroup in the Activity view through &lt;code&gt;&amp;lt;fragment&amp;gt;&lt;/code&gt; by XML or programmatically. In a Fragment Lifecycle the activity state is tightly similar to fragment callback. Similar to a view, a fragment can declared in XML for UI Components and used programmatically for backend purposes.&lt;/p&gt;&lt;h5&gt;How to add a fragment by programmatically&lt;/h5&gt;
&lt;ol&gt;
  &lt;li&gt;FragmentManager
  &lt;ul&gt;
    &lt;li&gt;findById - to find the ones available from XML&lt;/li&gt;
    &lt;li&gt;findByTag - to find the ones created by the Program as they don&apos;t have an ID&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;FragmentTransaction
  &lt;ul&gt;
    &lt;li&gt;add/replace/remove/show/hide fragments as an atomic unit&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;Manages the fragment backstack
  &lt;ul&gt;
    &lt;li&gt;A transaction is needed to define the rollback for the BACK button - stacked approach for rollback&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;Fragment Vs &lt;include/&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;code&gt;&amp;lt;include&amp;gt;&lt;/code&gt; has no functionality reuse, but another &lt;include/&gt; can be used within it, But fragments cannot be nested in layouts.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;Fragment Vs Activity
  &lt;ul&gt;
    &lt;li&gt;UI is mandatory in Activity while a fragment cannot be standalone and all Intents interact with Activity only. Communications is possible between fragment-to-fragment by means of Implementing an interface and through fragment manager which makes it difficult to reuse. Its always better to perform a Fragment - Activity - Fragment Communication where using interfaces., Frag 1 with interA, Frag 2 with interB and Activity can implement both the interfaces.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Open Accessory and ADK&lt;/h3&gt;&lt;p&gt;The talk opened with USB Basics which describes about the Host which controls the entire bus, tracks all the devices, initiates communications and provides power. The Devices communicate with host through the endpoint and describe its capabilities to the host during enumeration. Then the discussion went on to describe the various descriptors such as:&lt;/p&gt;&lt;h5&gt;USB descriptors&lt;/h5&gt;&lt;p&gt;Device Descriptors which maps to UsbDevice of the API and provides the VendorId, Prod ID, Device Calls, sub class and Protocol IDs, Manufacturer, Prod and serial no. Strings.&lt;/p&gt;&lt;h5&gt;Configuration Descriptor&lt;/h5&gt;&lt;p&gt;which provides the Configuration Number, List of interfaces, Max power usage and maps to UsbDevice of the API. Android devices have only one configuration descriptor.&lt;/p&gt;&lt;h5&gt;Interface Descriptor&lt;/h5&gt;&lt;p&gt;provides details about specific function implemented on the device which also includes the Android interfaces, USB mass storage and Maps to USBInterface API.&lt;/p&gt;&lt;h5&gt;Endpoint Descriptor&lt;/h5&gt;&lt;p&gt;describes about the channels used for sending/receiving data, Address, Type, Direction, Max Packet Size and maps to the UsbEndpoint of the API.&lt;/p&gt;&lt;h3&gt;What is an Open Accessory&lt;/h3&gt;&lt;p&gt;A simple USB host Device that can communicate to an Android Device which can supply 500 mA @5V, follows the simple &quot;Android Accessory Protocol&quot; and has bi-directional communication. The ADK - Accessory Development Kit which is based on Arduino Mega 2560 is used to provide this functionality. The Handshake between the two devices are performed in this order. Send &quot;Get Protocol&quot; and Send Manufacturer, model, description to identify the accessory to the Android device and Send &quot;Start&quot; Command. Then the Android Device should re-enumerate in accessory mode and launch an app . The device is in Accessory mode if the Vendor ID is 0x18D1 and Prd ID is 0x2D00 or 0x2D01. After a handshake the USB manager tries to match accessory to compatible applications and asks the user consent. The Android 3.1+ APIs [com.android.hardware.hub.*] can act in both Host and Accessory mode. A cool Gyroscope demo was performed to describe how to control a servo motor. The demokit.pde gives the value of the gyroscope and the same degree is given into the servo motor which stabilizes the gyroscope and this is based on a Closed loop FB system.&lt;/p&gt;&lt;h3&gt;Cloud Technology&lt;/h3&gt;&lt;p&gt;Alfred Fuller gave a wonderful talk on Cloud Technology and how we can develop on the Cloud and the various tools and services available such as SDKs, Memcache, mail, XMPP, Task Queue, Images, Blobstore etc., Some of the new technologies on the horizon for cloud development are:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Google Storage&lt;/strong&gt; which offers storage for files of any format, any amount, any time with great APIs to access them. The use cases for this technology are unbounded such as serving static content, backup, sharing, App Engine, android, computation storage, BigQuery, Prediction API with the sharing done either in private, public or shared modes. The benefits are inherently known such as High performance, scalability, strong security and privacy.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Google Storage&lt;/strong&gt; offers REST API for accessing the files and access controls for Google Accounts. The means of authentication are either key based or entity based where the files can be authenticate downloads, shared with individuals, group shared with Google groups and also access controls for buckets and objects. Some of the other tools that are provided are GSutil, GS manager, Google BigQuery and Prediction API and the pricing stays free for 5GB this year end.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;The Prediction API&lt;/strong&gt; provides results based on &quot;learned&quot; patterns. It finds relevant features in the sample data during training and later uses these features during prediction. The usability of this API can be in endless number of applications such as usage in eBay to display &quot;items you would like&quot;. Using the API involves uploading the data[CSV files], Train[using POST to the REST API (async)] and getting the predictions which can give multiple possibilities as well&lt;/p&gt;&lt;p&gt;The capabilities of this API ranges from handling numeric or unstructured text with hundreds of discrete categories. Some of the recent features are multi-category prediction, continuous output, mixed inputs. Google Prediction API also displays a gallery of pre-trained prediction models and the ability to add new training data on the fly.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Big Query&lt;/strong&gt; offers the ability to perform large data adhoc analysis with SQL like language. The usage varies with a variety of use cases such as spam, web dashboard etc., This has the ability to process billions of rows in seconds using SQL like queries. The activities involve uploading the data, importing into BigQuery[even from spreadsheets] and querying the BigQuery using the SQL like syntax along with a slew of SQL functions via REST such as tables/tablename or query/q=.&lt;/p&gt;&lt;p&gt;The security and privacy aspects are controlled using client login, OAuth, HTTPS Support. The last part of this talk discussed about the App Engine IDENTITY API which seeks to cryptographically secure authentication. The API exposes operations such as app_identity.sign_blob and app_identity.get_public_certificate. The interactions goes like App A call the Identity API to sign blob, then sends the string blob along with signature to App B. App A publishes all public certificates and App B pulls the public certificates to recover the signed Blob. Google uses the same type of API for Application sharing between Google Docs, Google Calendar.&lt;/p&gt;
	</description>
    </item>
    <item>
      <title>Google Developer Fest 2011 - Random Notes Part 2</title>
      <link>http://sengopal.github.io//blog/google-dev-fest-part-2.html</link>
      <pubDate>Thu, 22 Sep 2011 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/google-dev-fest-part-2.html</guid>
      	<description>
	&lt;h3&gt;Launching and Growing your Business&lt;/h3&gt;&lt;p&gt;Michael gave a wonderful talk on how Google Apps can be leveraged to improve the business propositions. He also spoke about Google Apps Marketplace and Google Apps for Business which is being used by 40 million users from 3 million businesses and how developers can develop and deploy their own applications and use them for businesses as well. Including Gmail, some of the applications available out of the market place are enterprise security, audit tools, two part authentication, project management, sales and marketing, administration tools and scheduling.&lt;/p&gt;&lt;p&gt;Some of the success stores are OpenID which provides single sign-on, Breeze which performs user management with Google Apps and uses the Provisioning API which takes the list of users, ManyMoon which performs Autocomplete from Google Apps Contacts and Calendar, MindMeister with Docs Integration, Sliderocket which creates live charts in presentations and Docs Integration. There are many Gmail contextual gadgets which can get the Details of the sender from CRM and display in the email, sidebar gadgets in Gmail such as Atlassian gadget and sidebar gadgets in Calendar such as TripIt .&lt;/p&gt;&lt;p&gt;The significant Integration points from the above success stories are taking advantage of existing data without any data silos, Importing contacts and user feeds which makes sharing with people easier and Collaboration not limited only to Google Docs but also with Google APIS and Other APIs from other services.&lt;/p&gt;&lt;h3&gt;Quick Steps for publishing in Google App Marketplace&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Search for Google Apps marketplace&lt;/li&gt;
  &lt;li&gt;Install ManyMoon Project management&lt;/li&gt;
  &lt;li&gt;Create the manifest â€“ the definition of applications to use and publish to marketplace&lt;/li&gt;
  &lt;li&gt;Build your application with any tools and provider&lt;/li&gt;
  &lt;li&gt;Integrate the application by adding SSO using OpenID&lt;/li&gt;
  &lt;li&gt;Sell your application with a one time fee of 100$&lt;/li&gt;
&lt;/ol&gt;&lt;h5&gt;Important Links&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.google.com/enterprise/marketplace&quot; title=&quot;Google Marketplace&quot;&gt;Google Marketplaces&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://code.google.com/googleapps&quot; title=&quot;Google Code for Apps&quot;&gt;Google Code for Apps&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://googleappsdeveloper.blogspot.com&quot; title=&quot;Google Apps Blog&quot;&gt;Google Apps Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Chrome Developer Tools&lt;/h3&gt;&lt;p&gt;Boris gave an excellent and well received session on the not-too-well known Chrome Developer tools. He started off with Session and Local Storage and showed a one page overview of the Chrome Dev Tools, a Cheat Sheet hosted on his blog. &lt;code&gt;CRTL+ALT+I&lt;/code&gt; is the magic key combination to invoke all the underlying tools. Chrome now has an improved workflow for editing Inline Styles which updates as you type against the need to press the Enter key. A new style can be easily added using the + key. Right Click and choosing &lt;code&gt;Edit as HTML&lt;/code&gt; on a &lt;code&gt;&amp;lt;div/&amp;gt;&lt;/code&gt; displays the appropriate content for editing. We can edit the JS and CSS from the resources tab and double click on the JS to edit it. The resources tab is a great tool to work with which has all these small nuances like highlighting the changes done in green, maintaining the revision history, syncing the changes across panels and even the ability to save the revisions to the local disk.&lt;/p&gt;&lt;p&gt;Some pro features that are found in chrome developer tools are Autocomplete everywhere, ability to tab between properties in CSS Editor [web inspector], Color manipulation in any of the HSL / RGB /Hex modes by clicking [using the SHIFT makes the values increment by 10], ability to inspect pseudo class selectors, great keyboard shortcuts and configurable options [right click on the console]. The complete list of keyboard shortcuts can be found by using the &lt;code&gt;?&lt;/code&gt; key.&lt;/p&gt;&lt;p&gt;The Console API used in chrome is same as Firebug Console Log. Some cool features are console.log takes N parameters, using copy() to copy the last run result from the console, using querySelector(), using inspect() which switches to the element view of the selected elements and use arguments like $0 when inspecting, to use the selected element. While debugging, use CTRL+L to navigate to a specific line number while the functioning of breakpoints and debugging remain same as Firebug. One great aspect of search in resources is that it gives the number of results in each file and we can prettify an obfuscated JS using the pretty print feature.&lt;/p&gt;&lt;h5&gt;Breakpoints&lt;/h5&gt;&lt;p&gt;Also, there are the regular line breakpoints for debugging and some special ones like conditional breakpoints and my favorite the Exception breakpoints which are represented by the small buttons on the left bottom, for &quot;Stop on Exceptions&quot; and &quot;Don&apos;t stop on Exceptions&quot;. Then there are the other DOM Breakpoints which can be created by right-click on an DOM View, right-click and selecting &quot;Break on modifications&quot;, the Event Breakpoints which can be selected to break on on the right side panel, the XHR Breakpoints where the condition of the XHR URL contains the given string can be given.&lt;/p&gt;&lt;p&gt;The future of the developer tools seems to hold a lot such as Chrome extensions - an API for extending Developer Tools which is experimental for now [need to use flags] which can be used to add audits and panels such as PageSpeed, JS Validator. Modifications of the Developer tools itself since it is just a web application and chromiumer can be used to update the DevTools.&lt;/p&gt;&lt;p&gt;The last but not the least of the great features available in developer tools is the ability for Remote Debugging which can be done using &lt;code&gt;-remote-debugging-port=31337&lt;/code&gt;. This is currently being pursued as part of the project: &lt;code&gt;weinre&lt;/code&gt;. The invocation goes like starting the webkit instance with remote debugging, opening the server instance and remote debugging can be done using that instance.&lt;/p&gt;&lt;p&gt;There are lot many videos available on Chrome Dev Tools home page and &lt;a href=&quot;http://new.crbug.com&quot; title=&quot;Chrome Bugs&quot;&gt;Chrome Bugs&lt;/a&gt; can be used to log any issues or submit an idea for a new feature.&lt;/p&gt;&lt;h3&gt;Web applications on High Replication Datastore&lt;/h3&gt;&lt;p&gt;We had a very informative session with Alfred about the Datastore and how it is being used across various platforms. With the cloud platform providing various SaaS, Paas and IaaS such as the App Engine, dynamic scaling and reliability are key aspects for the platform&apos;s success. The Datastore is schema-less, non-relational. Started in January 2011, it has provided serial consistency, sync replication, high reliability and availability, consistent performance and no data-loss or downtime.&lt;/p&gt;&lt;h5&gt;Strong Vs Eventual&lt;/h5&gt;&lt;p&gt;Strong means that if datastore tells us that the write is committed, then the write is immediately visible while if Eventual is committed, it takes some time to be visible.&lt;/p&gt;&lt;h5&gt;Why to use a High Replication Datastore&lt;/h5&gt;&lt;p&gt;Datastore provides a written sync using a consensus algorithm [Paxos] and no single replica is guaranteed to have all the data at any time. High replication is made available either through Strong Vs Eventual ideology. Strong reads are transactional i.e., on a read, Datastore tries to determine if the replica has the latest data, if not then the datastore catches up the replica to the latest version.&lt;/p&gt;&lt;p&gt;To make the datastore which needs to scale, Entity Groups are created helping the application to check only a small group of entities, not the entire datastore. Entity Groups is just a logical grouping of entities with parent child key relationship. The unit of transactionality is maintained by having only read/write in a single group[Cross entity group transactions are coming soon. The Unit of consistency is based on a Strong serial consistency where the datastore will always get an entity once put but never see a part of transaction, but a whole one.&lt;/p&gt;&lt;p&gt;The best example to demonstrate this is to use it for a collaborative Blog application where we have Users, Photos, Documents, Blog Posts, Comments, Revision History and comments. The comments are individual in nature for Photos, Docs and Posts. The acceptable Entity Group Limitations are that the throughput is limited to at least &lt;code&gt;1 write/second and Write/Sec != Entity/Sec&lt;/code&gt; with the batch puts/transactions counted as 1 write. A contradictory advice to the above mentioned norms is that the Entity Groups must be big to get all the groups involved, but never greater than 1 write/sec.&lt;/p&gt;&lt;p&gt;Dealing with eventual consistency needs some trade-offs. So some simple steps to ensure that that the eventual consistency is reached is by performing a code audit to find global queries and make sure everything is strongly consistent, accepting that a lot of global queries don&apos;t need strong consistency and avoid large entity groups + batch writes. Better usage of Memcache such as Session cache [keep track of recent writes of user] to achieve eventual consistency. A good example is displaying a blog&apos;s comments where a user comments on a blog post and will see all his recent comments but may not see all the other user&apos;s comments.&lt;/p&gt;&lt;h3&gt;Android User Experience&lt;/h3&gt;&lt;p&gt;The final talk for the day was about the UI and the user experience design for Phones and Tablets. Some of the great UI experiences in Honeycomb are the Holographic UI, the Bookmarks App for the browser, Fading in of the widgets [inspired from games and movies digital UI], the RenderScript usage for the Youtube application for the 3D carousel [Java - Master and C code - RenderScript is the slave], the Books Application with the never ending scroll, the reflections on the shelf, the elegance of the UI where the Page is being flipped, the Progress Bars, New Widgets and Styles and the theme.Holo.Light.&lt;/p&gt;&lt;p&gt;Then the discussion spanned into the Tablet UI Patterns and Honeycomb framework features. They also provided some general solutions to recurring problems which are inherently supported in the framework. These were just guidelines and not restrictions. Some of them were using the Action Bar for the most important actions such as My location in Maps Application, Home Icon for branding and also helps user to restart the flow without quitting the application. Using the Navigation/Options Button for buttons which are lesser used and Context Based such as Sorting the list. The main usage of the Application Icon is to provide a branding experience for the application and can be replaced with logo and to support &quot;upward&quot; navigation within the application.&lt;/p&gt;&lt;p&gt;The various components of the application view are View Details [What can i see] which can Simple with a non interactive title bar replacement or Richer with Tabs, dropdowns, menus, breadcrumbs [ Examples: Day, week, month of calendar application / Search fields of the map application], Action Buttons [What can i do here] with more important/frequently accessed action at left. The buttons can only be icon, text and if real estate permits, put the text or add to the other items menu.&lt;/p&gt;&lt;p&gt;Having the Action bar transform its appearance when items are selected [such as copy/paste] is a slick trick and can improve the user experience. The action bar can also change for single or multiple selections which is typically invoked using touch and hold. It can also contain items like a normal action bar such as Done button, Selection details, Contextual action buttons.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Multi-Pane Layouts&lt;/strong&gt; gives the advantage of increased real estate, help avoid long line lengths, consolidate multiple related screens into a single compound view and provide more context based settings. Some commonly used designs are the Right-Panes show more content or details for items selected in the left panes.&lt;/p&gt;&lt;p&gt;The multi-pane layout should support orientations i.e., Orientation change should preserve functional parity and should not make a user rotate to achieve a task. The Strategies should be applied per screen and not per application. For show/hide use UPward navigation to show the master pane [Example: Gmail Conversation view]. Make use of Intents and Fragments, and for a new Intent use the same activity and change the layout if needed. Use Fragment-Activity-Fragment communication in case we have both intents and fragments in the same screen.&lt;/p&gt;&lt;p&gt;The major pieces in Honeycomb to remember while designing an Android Application are application navigations, richer notifications and richer home screen widgets. The long press of the Home button in Honey comb shows a preview of the Activity going on.&lt;/p&gt;&lt;p&gt;Android has relied on &lt;em&gt;temporal memory&lt;/em&gt; since users are not good at remembering order of events but good at remembering what just happened. It also relies on users having good structural memory which helps in remembering the relationships between screens such as the differences between Application UP which navigates through the hierarchy within the application while the SYSTEM BACK navigates the user back to the previous activity the user was on.&lt;/p&gt;&lt;p&gt;Though these are the best practices, it is always better to be creative with different navigation views for media-rich apps and break the monotony with great views such as CarouselView using Renderscript customizations.&lt;/p&gt;&lt;h5&gt;Some of the Do&apos;s and Don&apos;ts for a novice Android application developer are:&lt;/h5&gt;
&lt;ol&gt;
  &lt;li&gt;Do aim for single apk&lt;/li&gt;
  &lt;li&gt;Do use the compatibility library&lt;/li&gt;
  &lt;li&gt;Do customize visual design completely, if not following the Halo theme&lt;/li&gt;
  &lt;li&gt;Do support both Portrait and landscape&lt;/li&gt;
  &lt;li&gt;Do extract dimensions for phones and tablets using values/ dimens.xml and values-large/dimens.xml&lt;/li&gt;
  &lt;li&gt;Do use theme/style to reduce redundancy&lt;/li&gt;
  &lt;li&gt;Do marry OS with your brand identity using drawable-hdpi and drawable-large-mdpi-v11&lt;/li&gt;
  &lt;li&gt;Don&apos;t assume API level &amp;gt; 11 == tablet&lt;/li&gt;
  &lt;li&gt;Don&apos;t assume xlarge == tablet, 7&apos; tablet is large&lt;/li&gt;
  &lt;li&gt;Don&apos;t use small font sizes&lt;/li&gt;
  &lt;li&gt;Always remember tablets fulfill very different needs, it is not a BIG Phone&lt;/li&gt;
&lt;/ol&gt;
	</description>
    </item>
    <item>
      <title>Some Eclipse, tips, tricks and shortcuts</title>
      <link>http://sengopal.github.io//blog/some-eclipse-tips-tricks-and-shortcuts.html</link>
      <pubDate>Thu, 22 Sep 2011 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/some-eclipse-tips-tricks-and-shortcuts.html</guid>
      	<description>
	&lt;p&gt;&lt;em&gt;This page is updated regularly when i come across a very useful tip/shortcut that can save some keystrokes.&lt;/em&gt;&lt;/p&gt;&lt;h3&gt;Some of the most useful and sometimes hidden tips and tricks in Eclipse are:&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Preferences -&amp;gt; Type Filter -&amp;gt; To remove packages from showing up in Code Completion&lt;/li&gt;
  &lt;li&gt;For completing a List - &lt;code&gt;List&amp;lt;String&amp;gt; list = new ArLis&lt;/code&gt; and hit &lt;code&gt;CTRL+SPC&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Keep the cursor at the end of the line and CTRL+1 gives assign to local variable or field&lt;/li&gt;
  &lt;li&gt;Preferences -&amp;gt; Type Prefix -&amp;gt; Code Styles -&amp;gt; for Variables add the m_ so that the getters and setters generate with m_&lt;/li&gt;
  &lt;li&gt;Use {@inheritDoc} for adding the JavaDoc&lt;/li&gt;
  &lt;li&gt;Preferences -&amp;gt; Type error -&amp;gt; Compiler -&amp;gt; Errors/Warnings -&amp;gt; Potential Null Pointers can be turned ON&lt;/li&gt;
  &lt;li&gt;In debug, Use &quot;Edit Detail formatter&quot; to get the values and it has Code Completion&lt;/li&gt;
  &lt;li&gt;Preferences --&amp;gt; Step Filtering --&amp;gt; To prevent debug going into packages that are not needed&lt;/li&gt;
  &lt;li&gt;Java Toolbar --&amp;gt; Toggle Breadcrumb&lt;/li&gt;
  &lt;li&gt;Junit Test Results can be export in XML format&lt;/li&gt;
  &lt;li&gt;Debug Perspective -&amp;gt; Rt-Click Customize --&amp;gt; Adds the Menu or Toolbar needed&lt;/li&gt;
  &lt;li&gt;Generate getters and setters at the bottom of the class&lt;/li&gt;
  &lt;li&gt;Go to Java / Appearances, check the box and define your abbreviations&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Some of the commonly used shortcuts are:&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;CTRL + 1&lt;/strong&gt; - Do all / Perform all shortcut&lt;br/&gt;1. shows options to fix it&lt;br/&gt;2. like importing a class&lt;br/&gt;3. or adding an argument to a method or fixing the method signature&lt;br/&gt;4. assigning the resultant of code to a local variable&lt;br/&gt;5. adding removing method parameters to fix compliation and many more&lt;/p&gt;&lt;p&gt;&lt;strong&gt;CTRL + D&lt;/strong&gt; - Delete entire line of code&lt;/p&gt;&lt;p&gt;&lt;strong&gt;CTRL + /&lt;/strong&gt; - Comment out all lines of code that are highlighted&lt;/p&gt;&lt;p&gt;&lt;strong&gt;CTRL + I&lt;/strong&gt; - Correct the Indent of lines of code&lt;/p&gt;&lt;p&gt;&lt;strong&gt;CTRL + L&lt;/strong&gt; - Navigate to a specific line number&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ALT + UP / DOWN&lt;/strong&gt; - Move the selected line of code UP / DOWN&lt;/p&gt;&lt;p&gt;&lt;strong&gt;SHIFT + F2&lt;/strong&gt; - Opens the JavaDoc&lt;/p&gt;&lt;p&gt;&lt;strong&gt;CTRL + SHIFT + UP / DOWN&lt;/strong&gt; - Moves the cursor to the Previous/ Next method in the class&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ALT + LEFT&lt;/strong&gt; - Navigate backwards through the code navigation history&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ALT + SHIFT + Q&lt;/strong&gt; - Quick View List; O for Outline&lt;/p&gt;&lt;p&gt;**CTRL + &lt;strong&gt;ALT + H&lt;/strong&gt; - Call Hierarchy&lt;/p&gt;&lt;p&gt;&lt;strong&gt;CTRL + SHIFT + M&lt;/strong&gt; - Add Import(s)&lt;/p&gt;&lt;p&gt;&lt;strong&gt;CTRL + SHIFT + P&lt;/strong&gt; - Go to matching bracket or paranthesis&lt;/p&gt;&lt;p&gt;&lt;strong&gt;CTRL + F11&lt;/strong&gt; - Reruns the last run configuration&lt;/p&gt;&lt;p&gt;&lt;strong&gt;CTRL + SHIFT + R&lt;/strong&gt; - the Open Resource Dialog &quot;For searching any type of File&quot;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;CTRL + SHIFT + O&lt;/strong&gt; - Organize Import statements&lt;/p&gt;&lt;p&gt;&lt;strong&gt;CTRL + SHIFT + T&lt;/strong&gt; - Shows the Type Dialog &quot;For searching any Java Class&quot;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;CTRL + SHIFT + L&lt;/strong&gt; - Displays the list of shortcuts&lt;/p&gt;&lt;p&gt;&lt;strong&gt;CTRL + SHIFT + F&lt;/strong&gt; - Format highlighted lines of code or all if none selected.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;CTRL + O&lt;/strong&gt; - Shows the methods and the properties of the class&lt;/p&gt;&lt;p&gt;&lt;strong&gt;CTRL + T&lt;/strong&gt; - Opens the Type hierarchy&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ALT + SHIFT + R&lt;/strong&gt; - To Rename or Refactor&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ALT + SHIFT + M&lt;/strong&gt; - To extract a method from the selected code&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ALT + SHIFT + C&lt;/strong&gt; - Changing the method signature&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ALT + SHIFT + L&lt;/strong&gt; - To extract a local variable from the statement&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ALT + SHIFT + T&lt;/strong&gt; - Displays the Refactor Menu&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ALT + SHIFT + S&lt;/strong&gt; - Displays the Source Menu&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ALT + SHIFT + X&lt;/strong&gt; - Displays the a Quicklist Run Menu&lt;/p&gt;
	</description>
    </item>
    <item>
      <title>Corporate Lingo</title>
      <link>http://sengopal.github.io//blog/corporate-lingo.html</link>
      <pubDate>Wed, 21 Sep 2011 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/corporate-lingo.html</guid>
      	<description>
	&lt;p&gt;A humoristic mail about corporate lingo from one of my esteemed colleagues about the lingo used in corporate. Worth a laugh !&lt;/p&gt;&lt;p&gt;P.S: This post is in no-way intended to harm or demean anybody. Please read it with a smile on a lips and laughter in your thoughts.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Competitive salary&lt;/strong&gt;&lt;br/&gt;We remain competitive by paying less than our competitors.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Join our fast-paced company&lt;/strong&gt; We have no time to train you.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Casual Work Atmosphere&lt;/strong&gt; We don&apos;t pay enough to expect that you&apos;ll dress up-well, a couple of the real daring guys wear earrings.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Must be deadline oriented&lt;/strong&gt; You&apos;ll be six months behind schedule on your first day.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Some overtime required&lt;/strong&gt;&lt;br/&gt;Some time each night and some time each weekend.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Duties will vary&lt;/strong&gt;&lt;br/&gt;Anyone in the office can boss you around.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Must have an eye for detail&lt;/strong&gt;&lt;br/&gt;We have no quality control.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Apply in person&lt;/strong&gt;&lt;br/&gt;If you&apos;re old, fat or ugly you&apos;ll be told the position has been filled.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;No phone calls please&lt;/strong&gt;&lt;br/&gt;We&apos;ve filled the job, our call for resumes is just a legal formality.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Seeking candidates with a wide variety of experience&lt;/strong&gt;&lt;br/&gt;You&apos;ll need it to replace three people who just left.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Problem-solving skills a must&lt;/strong&gt;&lt;br/&gt;You&apos;re walking into a company in perpetual chaos.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Requires team leadership skills&lt;/strong&gt;&lt;br/&gt;You?ll have the responsibilities of a manager, without the pay or respect.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Good communication skills&lt;/strong&gt;&lt;br/&gt;Management communicates, you, figure out what they want and do.&lt;/p&gt;&lt;h3&gt;Some real time values found in resumes&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;I am extremely adept at all manner of office organization&lt;/strong&gt;&lt;br/&gt;I&apos;ve used Microsoft Office.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;I am honest, hardworking and dependable&lt;/strong&gt;&lt;br/&gt;I pilfer office supplies.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;I take pride in my work&lt;/strong&gt;&lt;br/&gt;I blame others for my mistakes.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;I am personable&lt;/strong&gt;&lt;br/&gt;I give lots of unsolicited personal advice to co - workers.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;I am extremely professional&lt;/strong&gt;&lt;br/&gt;I carry a Day-Timer.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;I am adaptable&lt;/strong&gt;&lt;br/&gt;I&apos;ve changed jobs a lot.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;I am on the go&lt;/strong&gt;&lt;br/&gt;I&apos;m never at my desk.&lt;/p&gt;
	</description>
    </item>
    <item>
      <title>My Agile training notes - Day 1</title>
      <link>http://sengopal.github.io//blog/my-agile-training-notes-day-1.html</link>
      <pubDate>Mon, 5 Sep 2011 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/my-agile-training-notes-day-1.html</guid>
      	<description>
	&lt;p&gt;Recently I took part in a two day Agile training workshop and the following are some of my notes during that session. It is both lecture based and workshop oriented where we would try to solve a given problem with our Agile learning applied to it.&lt;/p&gt;&lt;h3&gt;Setting up a “Done Criteria” for a Sprint&lt;/h3&gt;&lt;p&gt;It is a basic need to define a “Done Criteria” or a baseline for settling on completion of a Sprint. Some of the criteria we used were:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Acceptance Criteria&lt;/li&gt;
  &lt;li&gt;80% Junit coverage&lt;/li&gt;
  &lt;li&gt;80% Automation Test coverage&lt;/li&gt;
  &lt;li&gt;Code Coverage&lt;/li&gt;
  &lt;li&gt;Successful Feature Completion&lt;/li&gt;
  &lt;li&gt;Documentation&lt;/li&gt;
  &lt;li&gt;No Find Bugs&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Core Practices of Agile&lt;/h3&gt;&lt;p&gt;Some of the criteria to satisfy before beginning a sprint are&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Should collect enough information to get started&lt;/li&gt;
  &lt;li&gt;No assumptions&lt;/li&gt;
  &lt;li&gt;How am I going to use the product&lt;/li&gt;
  &lt;li&gt;Understand the business Values and the need &amp;amp; usage&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;User Story Template&lt;/h3&gt;&lt;p&gt;The key ingredients of a User Story are&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Define a Role - &lt;em&gt;As a Showerer&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Define an Action - &lt;em&gt;I Want my shower to be wide for scrubbing my back&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Define a Outcome - &lt;em&gt;So that I wont have dust on my back&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Note: &lt;em&gt;User story should not have implementation details&lt;/em&gt;&lt;/p&gt;&lt;h3&gt;I.N.V.E.S.T&lt;/h3&gt;&lt;p&gt;Every User Story should be INVEST-able.&lt;/p&gt;&lt;p&gt;I stands for Independent&lt;br/&gt;N stands for Negotiable&lt;br/&gt;V stands for Valuable&lt;br/&gt;E stands for Estimate-able&lt;br/&gt;S stands for Small&lt;br/&gt;T stands for Testable&lt;/p&gt;&lt;h3&gt;Typical Agile Sprint&lt;/h3&gt;&lt;p&gt;The setup of a typical Agile project will be as follows:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Inception - 2-4 weeks&lt;/li&gt;
  &lt;li&gt;Initiation - 1-2 weeks&lt;/li&gt;
  &lt;li&gt;Develop &amp;amp; Deploy - 12+weeks with multiple iterations&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Single Iteration&lt;/h3&gt;&lt;p&gt;A single cycle of iteration is always Analyze, Design, Code, Test and Deploy&lt;/p&gt;&lt;h3&gt;Project Roles&lt;/h3&gt;&lt;p&gt;The major roles in an Agile project are given as&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Project Manager [a.k.a Business/Product Owner]&lt;/li&gt;
  &lt;li&gt;Iteration Manager[a.k.a Scrum Master]&lt;/li&gt;
  &lt;li&gt;User Experience Analyst&lt;/li&gt;
  &lt;li&gt;Quality Assurance Analyst&lt;/li&gt;
  &lt;li&gt;Product Developer&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Agile Product Development Practices and Terms&lt;/h3&gt;&lt;p&gt;Some of the terminology and practices that are followed commonly in an Agile project are described below.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Software Craftsmanship Manifesto&lt;/li&gt;
  &lt;li&gt;Agile Manifesto&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Test Driven Development&lt;/h3&gt;&lt;p&gt;Test Driven Development or TDD as it is commonly called, is the major contributor for adoption into Agile methodology. A developer following TDD develops lesser&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Always write a test and develop the code&lt;/li&gt;
  &lt;li&gt;Perform Red-Green refactor using the test&lt;/li&gt;
  &lt;li&gt;Develop just enough code for passing the test&lt;/li&gt;
  &lt;li&gt;Ensure that you follow Uncle Bob Martin’s 3 laws of TDD&lt;/li&gt;
  &lt;li&gt;Don’t change the test unless to make it PASS&lt;/li&gt;
  &lt;li&gt;Perform Unit testing and test cases which are just sufficient to fail&lt;/li&gt;
  &lt;li&gt;Don’t develop code more than which is sufficient to PASS the test&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Pair Programming&lt;/h3&gt;&lt;p&gt;One of the age old practice which caught on during into the Agile bandwagon is Pair-Programming which gives the developers a DRIVER-OBSERVER means of development. The positive outcomes of pair programming are:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Catching defects early&lt;/li&gt;
  &lt;li&gt;Code review Online&lt;/li&gt;
  &lt;li&gt;Collective Code Ownership&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Understanding smells&lt;/h3&gt;&lt;p&gt;A piece of code which has the ability to “stink” or create incorrect outcomes and flows are called “Code Smells”. Some of the common code smells are:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Long Methods&lt;/li&gt;
  &lt;li&gt;Explaining Comments&lt;/li&gt;
  &lt;li&gt;Magic Numbers&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Refactoring&lt;/h3&gt;&lt;p&gt;Refactoring is a concept shunned by many but has always proved to be the correct way to solve legacy and spaghetti code. Along with TDD this proves to be a blessing in disguise for developers who have to add/create on top of existing code base. Ensure the code stays DRY [Don’t Repeat Yourself] and always express an intent to refactor and perform it as a part of development rather than asking for confirmation/approval. Use unit testing to ensure that the existing functionality stays intact.&lt;/p&gt;&lt;h3&gt;Code Quality and Feedback&lt;/h3&gt;&lt;p&gt;Agile methodology is very rewarding if all the basic necessities are available especially a Continuous Integration system which can execute automated Tests at least 2-3 times a day is needed to ensure that the code quality stays top notch. Agile ensure code quality through constant feedback which is built in at multiple levels.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Level I - Pair Programming&lt;/li&gt;
  &lt;li&gt;Level II - Unit Testing&lt;/li&gt;
  &lt;li&gt;Level III - Continuous Integration&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Retrospective&lt;/h3&gt;&lt;p&gt;Another important aspect of the feedback mechanism in Agile is performing an honest and unbiased retrospective of what actually transpired during the previous sprint. This enables all the involved folks to understand their strengths and weaknesses. The main questions that need to be answered are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;What went well?&lt;/li&gt;
  &lt;li&gt;What didn’t go well?&lt;/li&gt;
  &lt;li&gt;Action Items from above&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Please feel free to provide your bouquets and brickbats and as always all your comments are welcome.&lt;/p&gt;
	</description>
    </item>
    <item>
      <title>My Agile training notes - Day 2</title>
      <link>http://sengopal.github.io//blog/my-agile-training-notes-day-2.html</link>
      <pubDate>Mon, 5 Sep 2011 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/my-agile-training-notes-day-2.html</guid>
      	<description>
	&lt;h3&gt;Common Agile Practices&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Every User story should have an Acceptance Test.&lt;/li&gt;
  &lt;li&gt;Before signing up, the Business and QA Acceptance Tests should have been finalized&lt;/li&gt;
  &lt;li&gt;Load and Performance Testing is performed every milestone at 3 months&lt;/li&gt;
  &lt;li&gt;Use a template for Acceptance Criteria&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;For Multiple Use cases&lt;/h3&gt;&lt;p&gt;What is observed by the Customer for a successful completion&lt;br/&gt;An Acceptance Criteria should be Specific, Measurable, Achievable, Relevant and Timely&lt;br/&gt;&lt;strong&gt;Acceptance Test Template&lt;/strong&gt; should be &lt;code&gt;Given a condition - When  a user action - Then a application response&lt;/code&gt;&lt;/p&gt;&lt;p&gt;A good Example will be&lt;br/&gt; * Given the customer has more than 20 Accts,&lt;br/&gt; * When they have complete logging in,&lt;br/&gt; * Then the screen should show the first 20 accounts (in acct. number order) only&lt;br/&gt;They should have &lt;code&gt;[Context: Given] [Event: When] [Outcome: Then]&lt;/code&gt;&lt;/p&gt;&lt;h3&gt;Different types of Development&lt;/h3&gt;&lt;p&gt;The different types of product development are:&lt;br/&gt;EDD - Example Driven&lt;br/&gt;ATDD - Acceptance Test Driven&lt;br/&gt;BDD - Behavior Driven&lt;/p&gt;&lt;h3&gt;Timelines&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Acceptance Criteria + User Story is completed before &quot;Ready for Dev&quot; Status&lt;/li&gt;
  &lt;li&gt;Acceptance test cases Should be prepared for &lt;code&gt;N+1&lt;/code&gt; sprint&lt;/li&gt;
  &lt;li&gt;The QA&apos;s responsibility lies&lt;br/&gt;a. in Automation of the &lt;code&gt;Nth&lt;/code&gt; iteration&lt;br/&gt;b. Manual testing of the Nth iteration&lt;br/&gt;c. Preparing Acceptance Tests for the N+1 Iteration&lt;/li&gt;
  &lt;li&gt;A Spike is generally done to perform a POC for 2-3 days&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Collecting Stories&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;em&gt;A good User Story Template is given by:&lt;/em&gt;
  &lt;ol&gt;
    &lt;li&gt;Role
    &lt;ul&gt;
      &lt;li&gt;Specifies who the player/role is&lt;/li&gt;
      &lt;li&gt;Different kinds of users - 12 year old, 70 year old, school boy etc.,&lt;/li&gt;
      &lt;li&gt;Every User story contains a Persona and this is attached to a role&lt;/li&gt;
      &lt;li&gt;Should be Low-fi prototyping&lt;/li&gt;
    &lt;/ul&gt;&lt;/li&gt;
    &lt;li&gt;Goal: I want/need&lt;/li&gt;
    &lt;li&gt;Value: So that&lt;/li&gt;
  &lt;/ol&gt;&lt;/li&gt;
  &lt;li&gt;Should be aligned with the Acceptance Criteria&lt;/li&gt;
  &lt;li&gt;Should be put up as part of the Story Board&lt;/li&gt;
  &lt;li&gt;Contain Contextual Design and Inquiry&lt;/li&gt;
  &lt;li&gt;Every Story has an Activity - Number of Tasks and Number of Sub Tasks&lt;/li&gt;
  &lt;li&gt;Should ensure Vertical Slicing of the development is addressed
  &lt;ul&gt;
    &lt;li&gt;EACH STORY represents a DIFFERENCT SLICE&lt;/li&gt;
    &lt;li&gt;EACH STORY MUST TOUCH ALL THE LAYERS&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;Classification of Story Cards&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
  &lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;User Story&lt;/strong&gt; &lt;em&gt;White&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Bugs&lt;/strong&gt; &lt;em&gt;Red&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Tasks&lt;/strong&gt; &lt;em&gt;Yellow&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;others&lt;/strong&gt; &lt;em&gt;Blue&lt;/em&gt;&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;&lt;h3&gt;What should I do&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Iteration and Sprint Planning&lt;/li&gt;
  &lt;li&gt;Sprint Estimation and Task Creation&lt;/li&gt;
  &lt;li&gt;Daily Standup
  &lt;ul&gt;
    &lt;li&gt;Standup Every day in the morning&lt;/li&gt;
    &lt;li&gt;What I did yesterday&lt;/li&gt;
    &lt;li&gt;What am I going to do today&lt;/li&gt;
    &lt;li&gt;Road blocks&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;Deciding on Releases&lt;/li&gt;
  &lt;li&gt;Estimating the Effort
  &lt;ul&gt;
    &lt;li&gt;NUTS -&lt;/li&gt;
    &lt;li&gt;Estimation is done in terms of NUTS[Nebulous Units of Time] in Fibonacci order [1,2,3,5,8] Story Points&lt;/li&gt;
    &lt;li&gt;Use Sample Story and fix the 1 pointer and relatively the others&lt;/li&gt;
    &lt;li&gt;Estimate the Sprint Velocity [No. of Story Points or Stories]/Sprint = Velocity&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Should I follow the NUTS?&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;The Units of Estimation are totally up to the team, but the estimation should be for Ideal time&lt;/li&gt;
  &lt;li&gt;Velocity for the Iteration - Estimate Average Story Points in a Spring&lt;/li&gt;
  &lt;li&gt;Burn Down Graph: Story Points on Y-Axis and Sprint Number in X â€“ Axis&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Managing the Process&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;IPM attended by the entire team&lt;/li&gt;
  &lt;li&gt;Milestone planning meeting&lt;/li&gt;
  &lt;li&gt;Release Planning Tests&lt;/li&gt;
  &lt;li&gt;Showcase&lt;/li&gt;
  &lt;li&gt;Retrospectives &lt;em&gt;An Outsider can facilitate&lt;/em&gt;
  &lt;ul&gt;
    &lt;li&gt;STAR technique What should the team - &lt;em&gt;Keep doing, start doing, stop doing, do more, do less&lt;/em&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Maintaining Visibility and Communication&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Information Radiators&lt;/li&gt;
  &lt;li&gt;Card Wall - Physical and Web based [RALLY] tool&lt;/li&gt;
  &lt;li&gt;Story Wall States -
  &lt;ul&gt;
    &lt;li&gt;Ready for Analysis&lt;/li&gt;
    &lt;li&gt;In Analysis&lt;/li&gt;
    &lt;li&gt;Ready for Dev&lt;/li&gt;
    &lt;li&gt;In Dev&lt;/li&gt;
    &lt;li&gt;Ready for Testing&lt;/li&gt;
    &lt;li&gt;In Testing&lt;/li&gt;
    &lt;li&gt;Ready for Signoff&lt;/li&gt;
    &lt;li&gt;Accepted&lt;/li&gt;
    &lt;li&gt;Deployed&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Levels of transitioning to an Agile Project&lt;/h3&gt;&lt;p&gt;&lt;em&gt;From Assessment to Execution&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Level I &lt;em&gt;Understand Agile&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Level II &lt;em&gt;Identify Ideal targets&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Level III &lt;em&gt;Form Roadmap from current to Ideal State&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Level IV &lt;em&gt;Execute Agile Roadmap with periodic Reviews&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Level V &lt;em&gt;Create Environment for faster success&lt;/em&gt;&lt;/p&gt;&lt;h3&gt;Agile Tools&lt;/h3&gt;&lt;p&gt;Agile Project management, Continuous Integration, Automation and Testing Tools&lt;/p&gt;&lt;h3&gt;FAQs&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;What is a Story Wall&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;A story wall is a physical representation of the different states in which the User Stories are present&lt;/p&gt;&lt;p&gt;&lt;strong&gt;What is Dev Box Testing&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;QA Testing on the DEV System&lt;/p&gt;&lt;p&gt;&lt;strong&gt;What is a Planning Poker&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Performing the estimates viz., Iteration Level Estimate [List of Tasks] and Release Level Estimate which deals with Sprint Velocity, No. of Sprints and Estimation for the User Stories&lt;/p&gt;&lt;p&gt;&lt;strong&gt;What is needed for transitioning to Agile&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Vertical Commitment&lt;/li&gt;
  &lt;li&gt;Expect things to get slower before getting faster&lt;/li&gt;
  &lt;li&gt;Complete Transparency&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;What are the obstacles for an Agile project&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Miscommunication&lt;/li&gt;
  &lt;li&gt;Lack of understanding&lt;/li&gt;
  &lt;li&gt;Mixed or half-cooked support&lt;/li&gt;
&lt;/ol&gt;
	</description>
    </item>
    <item>
      <title>ashing and Checksum in Java</title>
      <link>http://sengopal.github.io//blog/hashing-and-checksum-in-java.html</link>
      <pubDate>Mon, 22 Aug 2011 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/hashing-and-checksum-in-java.html</guid>
      	<description>
	&lt;h3&gt;Checksum generation&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;:::java
public class SHACheckSumExample{
    public static void main(String[] args)throws Exception{
        MessageDigest md = MessageDigest.getInstance(&amp;quot;SHA-256&amp;quot;);
        FileInputStream fis = new FileInputStream(&amp;quot;c:loging.log&amp;quot;);
        byte[] dataBytes = new byte[1024];   int nread = 0;
        while ((nread = fis.read(dataBytes)) != -1) {
          md.update(dataBytes, 0, nread);
        };
        //convert the byte to hex format method 1
        byte[] mdbytes = md.digest();
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i &amp;lt; mdbytes.length; i++) {
          sb.append(Integer.toString((mdbytes[i] &amp;amp; 0xff) + 0x100, 16).substring(1));
        }
        //convert the byte to hex format method 2
        System.out.println(&amp;quot;Hex format : &amp;quot; + sb.toString());
        StringBuffer hexString = new StringBuffer();
        for (int i=0;i&amp;lt;mdbytes.length;i++) {
          hexString.append(Integer.toHexString(0xFF &amp;amp; mdbytes[i]));
        }   System.out.println(&amp;quot;Hex format : &amp;quot; + hexString.toString());
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;Hashing of a String&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;:::java
public class SHAHashingExample{
    public static void main(String[] args)throws Exception    {
        String password = &amp;quot;123456&amp;quot;;
        MessageDigest md = MessageDigest.getInstance(&amp;quot;SHA-256&amp;quot;);
        md.update(password.getBytes());
        byte byteData[] = md.digest();   //convert the byte to hex format method 1
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i &amp;lt; byteData.length; i++) {
         sb.append(Integer.toString((byteData[i] &amp;amp; 0xff) + 0x100, 16).substring(1));
        }
        //convert the byte to hex format method 2
        System.out.println(&amp;quot;Hex format : &amp;quot; + sb.toString());
        StringBuffer hexString = new StringBuffer();
        for (int i=0;i&amp;lt;byteData.length;i++) {
            String hex=Integer.toHexString(0xff &amp;amp; byteData[i]);
            if(hex.length()==1) hexString.append(&amp;#39;0&amp;#39;);
            hexString.append(hex);
        }
        System.out.println(&amp;quot;Hex format : &amp;quot; + hexString.toString());
    }
}
&lt;/code&gt;&lt;/pre&gt;
	</description>
    </item>
    <item>
      <title>List of JVM command line options</title>
      <link>http://sengopal.github.io//blog/jvm-options-discussion-notes.html</link>
      <pubDate>Wed, 10 Aug 2011 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/jvm-options-discussion-notes.html</guid>
      	<description>
	&lt;h2&gt;JVM Optimization and Parameters&lt;/h2&gt;&lt;p&gt;The following notes are obtained from bits and pieces available from various posts on the world wide web. Not all command-line flags are necessarily supported by any VM other than the one from Sun/Oracle. The best way to find out whether a flag is supported is, of course, to try it and see if it works.&lt;/p&gt;&lt;h3&gt;Classification&lt;/h3&gt;&lt;p&gt;Options that begin with -X are non-standard (not guaranteed to be supported on all VM implementations), and are subject to change without notice in subsequent releases of the JDK. Options that are specified with -XX are not stable and are not recommended for casual use.&lt;/p&gt;&lt;h3&gt;Default Values&lt;/h3&gt;&lt;p&gt;Boolean options are turned on with &lt;code&gt;-XX:+&amp;lt;option&amp;gt;&lt;/code&gt; and turned off with &lt;code&gt;-XX:-&amp;lt;option&amp;gt;&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Numeric options are set with &lt;code&gt;-XX:&amp;lt;option&amp;gt;=&amp;lt;number&amp;gt;&lt;/code&gt;. Numbers can include &apos;m&apos; or &apos;M&apos; for megabytes, &apos;k&apos; or &apos;K&apos; for kilobytes, and &apos;g&apos; or&apos;G&apos; for gigabytes (for example, 32k is the same as 32768).&lt;/p&gt;&lt;p&gt;String options are set with &lt;code&gt;-XX:&amp;lt;option&amp;gt;=&amp;lt;string&amp;gt;&lt;/code&gt; and are usually used to specify a file, a path or a list of commands&lt;/p&gt;&lt;p&gt;&lt;em&gt;As a developer, following are the five important parameters we need to remember&lt;/em&gt;&lt;/p&gt;&lt;h4&gt;DisableExplicitGC&lt;/h4&gt;&lt;p&gt;To prevent application developers from using System.gc() explicitly. The &lt;code&gt;-XX:+DisableExplicitGC&lt;/code&gt; flag automatically turns a System.gc() call into a no-op&lt;/p&gt;&lt;h4&gt;HeapDumpOnOutOfMemoryError&lt;/h4&gt;&lt;p&gt;&lt;code&gt;XX:+HeapDumpOnOutOfMemoryError&lt;/code&gt; command catches a snapshot of the heap right as the JVM is on its dying breath. The actual path to which the file is saved using the corresponding &lt;code&gt;-XX:HeapDumpPath&lt;/code&gt; flag.&lt;/p&gt;&lt;h4&gt;bootclasspath&lt;/h4&gt;&lt;p&gt;&lt;code&gt;-Xbootclasspath&lt;/code&gt; lets you set the complete boot classpath, which typically has to include a reference to rt.jar, plus a bunch of other JAR files that ship with the JDK that aren&apos;t part of rt.jar. &lt;code&gt;-Xbootclasspath/p&lt;/code&gt; prepends the value to the existing bootclasspath, and &lt;code&gt;-Xbootclasspath/a&lt;/code&gt; appends it.&lt;/p&gt;&lt;h4&gt;verbose&lt;/h4&gt;&lt;p&gt;-verbose is a useful first-level diagnostic utility for virtually any type of Java application. The flag has three sub-flags: gc, class, and jni.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;gc&lt;/strong&gt; - is typically the first place developers go to try to figure out if the JVM garbage collector is acting up and causing poor performance.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;class&lt;/strong&gt; - can be a life-saver for trying to diagnose ClassLoader and/or mismatched class conflicts. It reports not only when a class is loaded, but also where the class was loaded from, including the path to the JAR file, assuming it came from a JAR.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;jni&lt;/strong&gt; - is of little use except when working with JNI and native libraries. When turned on, it will report various JNI events, such as when native libraries are loaded and methods are bound; again, the output can vary from one release or JVM to another.&lt;/p&gt;&lt;h3&gt;-X&lt;/h3&gt;&lt;p&gt;Running the command-line argument -X lists all the non-standard (but mostly safe) arguments that the JVM provides.&lt;/p&gt;&lt;p&gt;&lt;code&gt;-Xint&lt;/code&gt; - which runs the JVM in interpreted mode (which can be useful for testing whether the JIT compiler is actually having an effect on your code or verifying if you have a bug in the JIT compiler).&lt;/p&gt;&lt;p&gt;&lt;code&gt;-Xloggc&lt;/code&gt; - which does the same thing as &lt;code&gt;-verbose:gc&lt;/code&gt; but logs to a file instead of spewing to the command-line window.&lt;/p&gt;&lt;p&gt;The &quot;not-so-exhaustive&quot; list is given below.&lt;/p&gt;&lt;h4&gt;Behavior Options&lt;/h4&gt;&lt;p&gt;&lt;em&gt;Option and its default Value&lt;/em&gt; is given for better understanding&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-AllowUserSignalHandlers&lt;/strong&gt; - Do not complain if the application installs signal handlers.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:AltStackSize=16384&lt;/strong&gt; - Alternate signal stack size (in Kbytes)&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-DisableExplicitGC&lt;/strong&gt; - Disable calls to System.gc(), JVM still performs garbage collection when necessary.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+FailOverToOldVerifier&lt;/strong&gt; - Fail over to old verifier when the new type checker fails.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+HandlePromotionFailure&lt;/strong&gt; - The youngest generation collection does not require a guarantee of full promotion of all live objects.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+MaxFDLimit&lt;/strong&gt; - Bump the number of file descriptors to max.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:PreBlockSpin=10&lt;/strong&gt; - Spin count variable for use with &lt;code&gt;**-XX:+UseSpinning&lt;/code&gt;. Controls the maximum spin iterations allowed before entering operating system thread synchronization code.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-RelaxAccessControlCheck&lt;/strong&gt; - Relax the access control checks in the verifier.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+ScavengeBeforeFullGC&lt;/strong&gt; - Do young generation GC prior to a full GC.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+UseAltSigs&lt;/strong&gt; - Use alternate signals instead of SIGUSR1 and SIGUSR2 for VM internal signals.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+UseBoundThreads&lt;/strong&gt; - Bind user level threads to kernel threads.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-UseConcMarkSweepGC&lt;/strong&gt; - Use concurrent mark-sweep collection for the old generation.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+UseGCOverheadLimit&lt;/strong&gt; - Use a policy that limits the proportion of the VM&apos;s time that is spent in GC before an OutOfMemory error is thrown.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+UseLWPSynchronization&lt;/strong&gt; - Use LWP-based instead of thread based synchronization.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX :-UseParallelGC&lt;/strong&gt; - Use parallel garbage collection for scavenges.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-UseParallelOldGC&lt;/strong&gt; - Use parallel garbage collection for the full collections. Enabling this option automatically sets &lt;code&gt;-XX:+UseParallelGC&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-UseSerialGC&lt;/strong&gt; - Use serial garbage collection.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-UseSpinning&lt;/strong&gt; - Enable naive spinning on Java monitor before entering operating system thread synchronizaton code.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+UseTLAB&lt;/strong&gt; - Use thread-local object allocation&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+UseSplitVerifier&lt;/strong&gt; - Use the new type checker with StackMapTable attributes.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+UseThreadPriorities&lt;/strong&gt; - Use native thread priorities.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+UseVMInterruptibleIO&lt;/strong&gt; - Thread interrupt before or with EINTR for I/O operations results in OS_INTRPT.&lt;/p&gt;&lt;h4&gt;Performance Options&lt;/h4&gt;&lt;p&gt;&lt;em&gt;Option and its default Value&lt;/em&gt; is given for better understanding&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+AggressiveOpts&lt;/strong&gt; - Turn on point performance compiler optimizations that are expected to be default in upcoming releases.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:CompileThreshold=10000&lt;/strong&gt; - Number of method invocations/branches before compiling [-client: 1,500]&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:LargePageSizeInBytes=4m&lt;/strong&gt; - Sets the large page size used for the Java heap.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:MaxHeapFreeRatio=70&lt;/strong&gt; - Maximum percentage of heap free after GC to avoid shrinking.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:MaxNewSize=size&lt;/strong&gt; - Maximum size of new generation (in bytes).&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:MaxPermSize=64m&lt;/strong&gt; - Size of the Permanent Generation.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:MinHeapFreeRatio=40&lt;/strong&gt; - Minimum percentage of heap free after GC to avoid expansion.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:NewRatio=2&lt;/strong&gt; - Ratio of new/old generation sizes.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:NewSize=2.125m&lt;/strong&gt; - Default size of new generation (in bytes)&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:ReservedCodeCacheSize=32m&lt;/strong&gt; - Reserved code cache size (in bytes)&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:SurvivorRatio=8&lt;/strong&gt; - Ratio of eden/survivor space size&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:TargetSurvivorRatio=50&lt;/strong&gt; - Desired percentage of survivor space used after scavenge.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:ThreadStackSize=512&lt;/strong&gt; - Thread Stack Size (in Kbytes). (0 means use default stack size)&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+UseBiasedLocking&lt;/strong&gt; - Enable biased locking.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+UseFastAccessorMethods&lt;/strong&gt; - Use optimized versions of &lt;code&gt;Get&amp;lt;Primitive&amp;gt;Field&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-UseISM&lt;/strong&gt; - Use Intimate Shared Memory.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+UseLargePages&lt;/strong&gt; - Use large page memory.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+UseMPSS&lt;/strong&gt; - Use Multiple Page Size Support w/4mb pages for the heap._Do not use with ISM as this replaces the need for ISM_&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+UseStringCache&lt;/strong&gt; - Enables caching of commonly allocated strings.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:AllocatePrefetchLines=1&lt;/strong&gt; - Number of cache lines to load after the last object allocation using prefetch instructions generated in JIT compiled code. &lt;em&gt;Default values are 1 if the last allocated object was an instance and 3 if it was an array&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:AllocatePrefetchStyle=1&lt;/strong&gt; - Generate code style for prefetch instructions.&lt;br/&gt;&lt;code&gt;
0 - no prefetch instructions are generated,
1 - execute prefetch instructions after each allocation,
2 - use TL AB allocation watermark pointer to gate when prefetch instructions are executed.
&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+UseCompressedStrings&lt;/strong&gt; - Use a byte[] for Strings which can be represented as pure ASCII.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+OptimizeStringConcat&lt;/strong&gt; - Optimize String concatenation operations where possible.&lt;/p&gt;&lt;h4&gt;Debugging Options&lt;/h4&gt;&lt;p&gt;&lt;em&gt;Option and its default Value&lt;/em&gt; is given for better understanding&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-CITime&lt;/strong&gt; - Prints time spent in JIT Compiler.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:ErrorFile=./hs_err_pid&amp;lt;pid&amp;gt;.log&lt;/strong&gt; - If an error occurs, save the error data to this file.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-ExtendedDTraceProbes&lt;/strong&gt; - Enable performance-impacting dtrace probes&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:HeapDumpPath=./java_pid&amp;lt;pid&amp;gt;.hprof&lt;/strong&gt; - Path to directory or filename for heap dump.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-HeapDumpOnOutOfMemoryError&lt;/strong&gt; - Dump heap to file when java.lang.OutOfMemoryError is thrown.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:OnError=&quot;&amp;lt;cmd args&amp;gt;;&amp;lt;cmd args&amp;gt;&quot;&lt;/strong&gt; - Run user-defined commands on fatal error&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:OnOutOfMemoryError=&quot;&amp;lt;cmd args&amp;gt;;&amp;lt;cmd args&amp;gt;&quot;&lt;/strong&gt; - Run user-defined commands when an OutOfMemoryError is first thrown&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-PrintClassHistogram&lt;/strong&gt; - Print a histogram of class instances on Ctrl-Break.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-PrintConcurrentLocks&lt;/strong&gt; - Print java.util.concurrent locks in Ctrl-Break thread dump.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-PrintCommandLineFlags&lt;/strong&gt; - Print flags that appeared on the command line.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-PrintCompilation&lt;/strong&gt; - Print message when a method is compiled.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-PrintGC&lt;/strong&gt; - Print messages at garbage collection.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-PrintGCDetails&lt;/strong&gt; - Print more details at garbage collection.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-PrintGCTimeStamps&lt;/strong&gt; - Print timestamps at garbage collection&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-PrintTenuringDistribution&lt;/strong&gt; - Print tenuring age information.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-TraceClassLoading&lt;/strong&gt; - Trace loading of classes.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-TraceClassLoadingPreorder&lt;/strong&gt; - Trace all classes loaded in order referenced (not loaded)&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-TraceClassResolution&lt;/strong&gt; - Trace constant pool resolutions&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-TraceClassUnloading&lt;/strong&gt; - Trace unloading of classes&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:-TraceLoaderConstraints&lt;/strong&gt; - Trace recording of loader constraints&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+PerfSaveDataToFile&lt;/strong&gt; - Saves jvmstat binary data on exit&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:ParallelGCThreads=&lt;/strong&gt; - Sets the number of garbage collection threads in the young and old parallel garbage collectors. &lt;em&gt;The default value varies with the platform on which the JVM is running.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+UseCompressedOops&lt;/strong&gt; - Enables the use of compressed pointers (object references represented as 32 bit offsets instead of 64-bit pointers) for optimized 64-bit performance with Java heap sizes less than 32gb.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:+AlwaysPreTouch&lt;/strong&gt; - Pre-touch the Java heap during JVM initialization. &lt;em&gt;Every page of the heap is thus demand-zeroed during initialization rather than incrementally during application execution.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:AllocatePrefetchDistance=&lt;/strong&gt; - Sets the prefetch distance for object allocation. &lt;em&gt;Memory about to be written with the value of new objects is prefetched into cache at this distance (in bytes) beyond the address of the last allocated object. Each Java thread has its own allocation point. The default value varies with the platform on which the JVM is running.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:InlineSmallCode=&lt;/strong&gt; - Inline a previously compiled method only if its generated native code size is less than this. The default value varies with the platform on which the JVM is running&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:MaxInlineSize=35&lt;/strong&gt; - Maximum bytecode size of a method to be inlined.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:FreqInlineSize=&lt;/strong&gt; - Maximum bytecode size of a frequently executed method to be inlined. The default value varies with the platform on which the JVM is running&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:LoopUnrollLimit=&lt;/strong&gt; - Unroll loop bodies with server compiler intermediate representation node count less than this value.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:InitialTenuringThreshold=7&lt;/strong&gt; - Sets the initial tenuring threshold for use in adaptive GC sizing in the parallel young collector. &lt;em&gt;The tenuring threshold is the number of times an object survives a young collection before being promoted to the old, or tenured, generation.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-XX:MaxTenuringThreshold=&lt;/strong&gt; - Sets the maximum tenuring threshold for use in adaptive GC sizing.&lt;/p&gt;
	</description>
    </item>
    <item>
      <title>Database Design Tips</title>
      <link>http://sengopal.github.io//blog/database-design-tips.html</link>
      <pubDate>Fri, 5 Aug 2011 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/database-design-tips.html</guid>
      	<description>
	&lt;p&gt;During the course of re-designing a database, i was struck with the lack of good tips and basics of good database design. On googling, came across this wonderful &lt;a href=&quot;http://codebalance.blogspot.com/2011/07/20-database-design-best-practices.html&quot;&gt;article&lt;/a&gt; which describes not only tips about creation and design, but also about deployment, maintainence and how to ensure that the usability is optimal.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Use well defined and consistent names for tables and columns (e.g. School, StudentCourse, CourseID).&lt;/li&gt;
  &lt;li&gt;Use singular for table names (i.e. use StudentCourse instead of StudentCourses). Table represents a collection of entities, there is no need for plural names.&lt;/li&gt;
  &lt;li&gt;Don’t use spaces for table names. Otherwise you will have to use ‘{‘, ‘[‘, ‘“’ etc. characters to define tables (i.e. for accessing table Student Course you&apos;ll write “Student Course”. StudentCourse is much better).&lt;/li&gt;
  &lt;li&gt;Don’t use unnecessary prefixes or suffixes for table names (i.e. use School instead of TblSchool, SchoolTable etc.).&lt;/li&gt;
  &lt;li&gt;Keep passwords as encrypted for security. Decrypt them in application when required.&lt;/li&gt;
  &lt;li&gt;Use integer id fields for all tables. If id is not required for the time being, it may be required in the future (for association tables, indexing ...).&lt;/li&gt;
  &lt;li&gt;Choose columns with the integer data type (or its variants) for indexing. varchar column indexing will cause performance problems.&lt;/li&gt;
  &lt;li&gt;Use bit fields for boolean values. Using integer or varchar is unnecessarily storage consuming. Also start those column names with “Is”.&lt;/li&gt;
  &lt;li&gt;Provide authentication for database access. Don’t give admin role to each user.&lt;/li&gt;
  &lt;li&gt;Avoid “select *” queries until it is really needed. Use &amp;quot;select [required_columns_list]&amp;quot; for better performance.
&lt;/li&gt;
  &lt;li&gt;Use an ORM (object relational mapping) framework (i.e. hibernate, iBatis ...) if application code is big enough. Performance issues of ORM frameworks can be handled by detailed configuration parameters.&lt;/li&gt;
  &lt;li&gt;Partition big and unused/rarely used tables/table parts to different physical storages for better query performance.&lt;/li&gt;
  &lt;li&gt;For big, sensitive and mission critic database systems, use disaster recovery and security services like failover clustering, auto backups, replication etc.&lt;/li&gt;
  &lt;li&gt;Use constraints (foreign key, check, not null ...) for data integrity. Don’t give whole control to application code.&lt;/li&gt;
  &lt;li&gt;Lack of database documentation is evil. Document your database design with ER schemas and instructions. Also write comment lines for your triggers, stored procedures and other scripts.&lt;/li&gt;
  &lt;li&gt;Use indexes for frequently used queries on big tables. Analyser tools can be used to determine where indexes will be defined. For queries retrieving a range of rows, clustered indexes are usually better. For point queries, non-clustered indexes are usually better.&lt;/li&gt;
  &lt;li&gt;Database server and the web server must be placed in different machines. This will provide more security (attackers can’t access data directly) and server CPU and memory performance will be better because of reduced request number and process usage.&lt;/li&gt;
  &lt;li&gt;Image and blob data columns must not be defined in frequently queried tables because of performance issues. These data must be placed in separate tables and their pointer can be used in queried tables.&lt;/li&gt;
  &lt;li&gt;Normalization must be used as required, to optimize the performance. Under-normalization will cause excessive repetition of data, over-normalization will cause excessive joins across too many tables. Both of them will get worse performance.&lt;/li&gt;
  &lt;li&gt;Spend time for database modeling and design as much as required. Otherwise saved(!) design time will cause (saved(!) design time) * 10/100/1000 maintenance and re-design time.&lt;/li&gt;
&lt;/ol&gt;
	</description>
    </item>
    <item>
      <title>Basics of ClearCase</title>
      <link>http://sengopal.github.io//blog/basics-of-clearcase.html</link>
      <pubDate>Sat, 23 Jul 2011 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/basics-of-clearcase.html</guid>
      	<description>
	&lt;p&gt;Rational ClearCase is a software tool for revision control (e.g. configuration management, SCM) of source code and other software development assets.&lt;/p&gt;&lt;p&gt;ClearCase provides more than just version control. The other features available are:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Version Control&lt;/li&gt;
  &lt;li&gt;Workspace Management&lt;/li&gt;
  &lt;li&gt;Build Management&lt;/li&gt;
  &lt;li&gt;Process Control&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Version Control&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Versions all file types&lt;/li&gt;
  &lt;li&gt;Versions directories&lt;/li&gt;
  &lt;li&gt;Stores objects in reliable, scalable Versioned Object Bases (VOBs)&lt;/li&gt;
  &lt;li&gt;Elements are read-only until checked out&lt;/li&gt;
  &lt;li&gt;Unlimited branching and merging&lt;/li&gt;
  &lt;li&gt;Easy checkout-edit-checkin model&lt;/li&gt;
  &lt;li&gt;Unlimited branching capability for parallel development&lt;/li&gt;
  &lt;li&gt;Graphical compare and intelligent merge utilities automatically merges non-conflicting changes&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Workspace Management&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Provides access to all versioned objects from standard development tools&lt;/li&gt;
  &lt;li&gt;A way of seeing the objects in one or more VOBs&lt;/li&gt;
  &lt;li&gt;Version selection is based on user-defined rules&lt;/li&gt;
  &lt;li&gt;Easy way to manage multiple tasks&lt;/li&gt;
  &lt;li&gt;Controls the public/private nature of work&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;There are two types of views available in ClearCase&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Dynamic Views&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;VOB objects are displayed from the VOB cache&lt;/li&gt;
  &lt;li&gt;Transparent access to elements&lt;/li&gt;
  &lt;li&gt;Virtual filesystem&lt;/li&gt;
  &lt;li&gt;Always up-to-date&lt;/li&gt;
  &lt;li&gt;Provides build auditing&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Snapshot Views&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;VOB objects are copied to the client&lt;/li&gt;
  &lt;li&gt;Downloads files based on user-based rules&lt;/li&gt;
  &lt;li&gt;Allows work while disconnected from the network&lt;/li&gt;
  &lt;li&gt;Optimal build performance for prototype or test builds&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Build Management&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;clearmake&lt;/strong&gt; and &lt;strong&gt;omake&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Compatible with standard makefiles&lt;/li&gt;
  &lt;li&gt;Automatic detection of header- and source-file dependencies&lt;/li&gt;
  &lt;li&gt;Software bill-of-materials guarantees complete reproducibility of every build&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Process Control&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Enforces appropriate policies and processes across diverse development environments&lt;/li&gt;
  &lt;li&gt;Integrated with ClearCase as a set of flexible, customizable tools&lt;/li&gt;
&lt;/ol&gt;
	</description>
    </item>
    <item>
      <title>Some Java 7 features</title>
      <link>http://sengopal.github.io//blog/some-java-7-features.html</link>
      <pubDate>Mon, 11 Jul 2011 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/some-java-7-features.html</guid>
      	<description>
	&lt;h3&gt;Switch Case for Strings&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;:::java
switch(someString) {
    case &amp;quot;Bubba&amp;quot;:
        return bubbaStringResult;
    case &amp;quot;Sue&amp;quot;:
        return sueStringResult;
    default:
        return new BrokenSwitchException(&amp;quot;Odd String!&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;Simple IO Handling – Just a try and catch&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;:::java
try (FileOutputStream fos = new FileOutputStream(file)) {
    // perform some op using the stated resources
} catch (AnyExceptionThrownByThatOp aetbto) {
    // handle the exception byfm
} // Nothing to do. The FileOutputStream will be autoclosed.
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;Multiple Exceptions in a single catch&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;:::java
try {
    // perform some op that can throw various exceptions,
    // where some subset of them should be handles &amp;quot;thisway&amp;quot;
} catch (FirstSimilarException | SecondSimilarException e) {
    // deal with it thisway(e), whatever it is
} catch (Exception ex) {
    // deal with it thatway(ex)
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;Underscore in digits to facilitate easier readability&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;:::java
long creditCard = 5440_4440_3330_0005L;
long phoneNumber = 213_555_1212L;
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;Binary Literals are also supported&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;:::java
int x = 0b1010110;
&lt;/code&gt;&lt;/pre&gt;
	</description>
    </item>
    <item>
      <title>Collection of useful java code snippets</title>
      <link>http://sengopal.github.io//blog/collection-of-useful-java-code-snippets.html</link>
      <pubDate>Wed, 6 Jul 2011 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/collection-of-useful-java-code-snippets.html</guid>
      	<description>
	&lt;h3&gt;For Sending a POST request&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Code snippet for making a HTTP call&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    import java.io.IOException;
    import java.io.OutputStreamWriter;
    import java.net.HttpURLConnection;
    import java.net.URL;
    public class Test {
        public static void main(String[] args) throws IOException {
            URL url = new URL(&amp;quot;&amp;lt;a href=&amp;quot;http://localhost:8080/resttest/services/Order/3&amp;quot;);
            HttpURLConnection httpCon = (HttpURLConnection) url.openConnection();
            httpCon.setDoOutput(true);
            httpCon.setRequestMethod(&amp;quot;POST&amp;quot;);
            OutputStreamWriter out = new OutputStreamWriter(httpCon.getOutputStream());
            System.out.println(httpCon.getResponseCode());
            System.out.println(httpCon.getResponseMessage());
            out.close();
        }
    }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Static Block and main()&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Before calling main, the static block for the class is called to initialize the class.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    public class Main {
        static {
            System.out.println(&amp;quot;Called first.&amp;quot;);
        }
        public static void main(String... args) {
            System.out.println(&amp;quot;Hello world.&amp;quot;);
        }
    }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;Output:&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;Called first.
Hello world.&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Code without main()&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Normally, if you don&apos;t have a main() method, you will get an error. However if your program exits before calling main() no error is produced.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    public class Main {
        static {
            System.out.println(&amp;quot;Hello world.&amp;quot;);
            System.exit(0);
        }
    }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;Output:&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;`Hello world.`
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;premain&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;If you have Java agents, those agents can have a premain method which is called first. &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/lang/instrument/package-summary.html&quot;&gt;Instrument package&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  public static void premain(String agentArgs, Instrumentation inst);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The Instrumentation class gives the agent access to each class&apos; byte code after it is read and before it is linked, giving the agent the option to change byte code. One interesting feature of the Instrumentation class is the getObjectSize() which will give you the size of an object.&lt;/p&gt;
	</description>
    </item>
    <item>
      <title>Java Logging and Log4J Notes</title>
      <link>http://sengopal.github.io//blog/java-logging-and-log4j-notes.html</link>
      <pubDate>Wed, 6 Jul 2011 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/java-logging-and-log4j-notes.html</guid>
      	<description>
	&lt;h4&gt;Some tips for Java Logging&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Use isDebugEnabled() for putting debug log in Java&lt;/li&gt;
  &lt;li&gt;Choose which kind of message should go to which level for logging in Java&lt;/li&gt;
  &lt;li&gt;Use either log4j or java.util.logging for logging in Java&lt;/li&gt;
  &lt;li&gt;Using log4j.xml you can have different logger configuration for different java classes&lt;/li&gt;
  &lt;li&gt;Include Thread Name and fully qualified java class Name while printing logs&lt;/li&gt;
  &lt;li&gt;Use some kind of prefix and parametrized version of various log methods as they are faster compared to normal method&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Class Specific Log File&lt;/h4&gt;&lt;p&gt;For example, if we have a class which is logging using the log4j.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:::java
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

public class WebTrackingLogger {
    private static final Log log = LogFactory.getLog(WebTrackingLogger.class);
    public static void log(Sting ip, String url, String.... otherValues) {
        log.info(IP + &amp;quot; &amp;quot; + URL);
        ....
        log.warn(IP + &amp;quot; &amp;quot; + URL, e);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The logs from this code alone can be rolled seperately using,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:::java
log4j.category.com.company.WebTrackingLogger.INFO, PL
log4j.appender.PL=org.apache.log4j.DailyRollingFileAppender
log4j.appender.PL.layout=org.apache.log4j.PatternLayout
log4j.appender.PL.layout.ConversionPattern=%d %x - %m%n
log4j.appender.PL.File=/var/log/app/web-tracking-log
log4j.appender.PL.DatePattern=&amp;#39;.&amp;#39;yyyy-MM-dd&amp;lt;/p&amp;gt;&amp;lt;/blockquote&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
	</description>
    </item>
    <item>
      <title>JAXB Usage for single line conversion</title>
      <link>http://sengopal.github.io//blog/jaxb-usage-for-single-line-conversion.html</link>
      <pubDate>Sun, 29 May 2011 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/jaxb-usage-for-single-line-conversion.html</guid>
      	<description>
	&lt;p&gt;I came across a great article which introduces a utility Class &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/javax/xml/bind/JAXB.htm&quot;&gt;JAXB&lt;/a&gt; which converts XML to Object and vice versa in a single line.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;For Unmarshalling an XML to a Class Object&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;JAXBContext context = JAXBContext.newInstance(ObjectToConvert.class);
Unmarshaller u = context.createUnmarshaller();
return (ObjectToConvert) u.unmarshal(xmlInputStream);

// becomes
return (ClassToConvert)JAXB.unmarshal(xmlInputStream, ObjectToConvert.class);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;For Marshalling an Object to a XML&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;JAXBContext context = JAXBContext.newInstance(objectInstanceToConvert.getClass());
Marshaller m = jc.createMarshaller();
m.marshal(objectInstanceToConvert, xmlOutputStream);

// becomes
JAXB.marshall(objectInstanceToConvert, xmlOutputStream)
&lt;/code&gt;&lt;/pre&gt;
	</description>
    </item>
    <item>
      <title>Chennai JUG Summit - April 16 and 17</title>
      <link>http://sengopal.github.io//blog/chennai-jug-summitapril-16-and-17.html</link>
      <pubDate>Sun, 24 Apr 2011 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/chennai-jug-summitapril-16-and-17.html</guid>
      	<description>
	&lt;p&gt;Last week, I had a great opportunity to attend the &lt;a href=&quot;http://jugchennai.in/chennaijavasummit/&quot;&gt;Chennai JUG summit&lt;/a&gt; for the first time.&lt;br/&gt;It was a pleasant surprise to find such a huge following to the group and the language. It started with the traditional lamp lighting and a hearty welcome by the group creator &lt;strong&gt;Raj Mahendra Hegde&lt;/strong&gt;, whose passionate speech was very infecting. His group IGGUG caught everybody&apos;s attention and I for one will be enrolling in the group as soon as possible.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Kaushik Sathupadi&lt;/strong&gt; had everyone enthralled with his presentation full of Bollywood and Hollywood scenes. It was fun and educating about how Java and JVM has evolved to great heights. It was a great presentation on Fanthom and the Tales framework that he is working on. His lines like &quot;Make the compiler do more work and complain less&quot; made people think why we are still stuck with Java.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Mani Duraisamy&lt;/strong&gt; - The best speaker for the day [IMHO] held everyone&apos;s attention with not only his Q&amp;amp;A and pranks but also with his informative talk about how and why Cloud computing going to change the world [Though irony strikes with the recent Amazon EC2 failure]. His presentation was so good that I was looking forward for each slide. Quotes such as &lt;code&gt;Businesses shouldn&amp;#39;t own software&lt;/code&gt; and &lt;code&gt;Because &amp;quot;Owning is the root cause of all &amp;#39;evil&amp;#39;&amp;quot;&lt;/code&gt; really got everyone rooted with laughter and yet made folks get new ideas for their own/employing businesses.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;A.Senthil Nayagam&lt;/strong&gt; - a very talented engineer who has this zest for languages spoke about Mirah, the next JVM language in the fold. He gave a wonderful comparison of where Ruby is lacking and how JVM and Ruby would be the best marriage for a software engineer. He showed how an open source language in its baby step looks like and an open invitation to participate in its growth.&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;static/jug-chennai-2011.png&quot; alt=&quot;&quot; width=&quot;277&quot; height=&quot;258&quot; border=&quot;0&quot; /&gt;&lt;/p&gt;
	</description>
    </item>
    <item>
      <title>A great article about Code reviews</title>
      <link>http://sengopal.github.io//blog/a-great-article-about-code-reviews.html</link>
      <pubDate>Mon, 13 Dec 2010 00:00:00 -0800</pubDate>
      <guid isPermaLink="false">blog/a-great-article-about-code-reviews.html</guid>
      	<description>
	&lt;p&gt;Originally posted &lt;a href=&quot;http://www.developer.com/tech/article.php/3579756/Effective-Code-Reviews-Without-the-Pain.htm&quot;&gt;here&lt;/a&gt;. It really draws out the perspective of developers considering themselves as the owner of the code and how they become defensive about it. Code reviews in most organizations are a painful experience for everyone involved. The developer often feels like it&apos;s a bashing session designed to beat out their will. The development leads are often confused as to what is important to point out and what isn&apos;t. And other developers that may be involved often use this as a chance to show how much better they can be by pointing out possible issues in the reviewed code. Code reviews, however, don&apos;t have to be painful&lt;/p&gt;&lt;h4&gt;Remembering the Purpose&lt;/h4&gt;&lt;p&gt;Code reviews have two purposes. Their first purpose is to make sure that the code that is being produced has sufficient quality to be released. In other words, it&apos;s the acid test for whether the code should be promoted to the next step in the process. Code reviews are very effective at finding errors of all types, including those caused by poor structure, those that don&apos;t match business process, and also those simple omissions. That&apos;s why they are an effective litmus test for the quality of the code.&lt;/p&gt;&lt;p&gt;The second purpose is as a teaching tool to help developers learn when and how to apply techniques to improve code quality, consistency, and maintainability. Through thoughtfully evaluating code on a recurring basis, developers have the opportunity to learn different and potentially better ways of coding.&lt;/p&gt;&lt;p&gt;Code reviews often start off on the wrong foot because they are perceived as an unnecessary step that has been forced upon the developers or, in some cases, evidence that management doesn&apos;t trust the developers. Neither of these perspectives is accurate. Code reviews are a proven, effective way to minimize defects. Whatever additional motivations the organization has for performing code reviews, they are, at their core, an industry best practice.&lt;/p&gt;&lt;h3&gt;A Matter of Approach&lt;/h3&gt;&lt;p&gt;One of the other ways that a code review gets off track is by the participants approaching it as though the process is designed to demonstrate who the better programmer is. Code reviews often become mental jousting matches where people take shots at a target; in other words, the developer that wrote the code being reviewed. A better approach is a learning approach where the whole exercise is viewed as a forum to discuss and learn from everyone.&lt;/p&gt;&lt;p&gt;Saying that the approach should be educational and open is one thing but creating that feeling when the history has been mental jousting matches can be quite challenging. That being said, there are a few simple things that you can do to change the approach for the better:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;Ask questions rather than make statements.&lt;/strong&gt; A statement is accusatory. &quot;You didn&apos;t follow the standard here&amp;quot; is an attack—whether intentional or not. The question, &amp;quot;What was the reasoning behind the approached you used?&amp;quot; is seeking more information. Obviously, that question can&apos;t be said with a sarcastic or condescending tone; but, done correctly, it can often open the developer up to stating their thinking and then asking if there was a better way.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;Avoid the &quot;Why&quot; questions.&lt;/strong&gt; Although extremely difficult at times, avoiding the&amp;quot;Why&amp;quot; questions can substantially improve the mood. Just as a statement is accusatory—so is a why question. Most &amp;quot;Why&amp;quot; questions can be reworded to a question that doesn&apos;t include the word &amp;quot;Why&amp;quot; and the results can be dramatic. For example, &amp;quot;Why didn&apos;t you follow the standards here...&amp;quot; versus &amp;quot;What was the reasoning behind the deviation from the standards here...&amp;quot;&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;Remember to praise.&lt;/strong&gt; The purposes of code reviews are not focused at telling developers how they can improve, and not necessarily that they did a good job. Human nature is such that we want and need to be acknowledged for our successes, not just shown our faults. Because development is necessarily a creative work that developers pour their soul into, it often can be close to their hearts. This makes the need for praise even more critical.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;Make sure you have good coding standards to reference&lt;/strong&gt; Code reviews find their foundation in the coding standards of the organization. Coding standards are supposed to be the shared agreement that the developers have with one another to produce quality, maintainable code. If you&apos;re discussing an item that isn&apos;t in your coding standards, you have some work to do to get the item in the coding standards. You should regularly ask yourself whether the item being discussed is in your coding standards.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;Make sure the discussion stays focused on the code and not the coder.&lt;/strong&gt; Staying focused on the code helps keep the process from becoming personal. You&apos;re not interested in saying the person is a bad person. Instead, you&apos;re looking to generate the best quality code possible.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;Remember that there is often more than one way to approach a solution.&lt;/strong&gt; Although the developer might have coded something differently from how you would have, it isn&apos;t necessarily wrong. The goal is quality, maintainable code. If it meets those goals and follows the coding standards, that&apos;s all you can ask for.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;What to Do If You&apos;re a Developer&lt;/h3&gt;&lt;p&gt;The above advice is fine if you&apos;re the project or development leader who is organizing the code review, but what if you&apos;re the one who has to endure a painful code review? What can you do to make the process less painful if you&apos;re the developer who&apos;s having your code reviewed?&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;Remember that the code isn&apos;t you.&lt;/strong&gt; Development is a creative process. It&apos;s normal to get attached to your code. However, the folks who are reviewing the code generally aren&apos;t trying to say that you&apos;re a bad developer (or person) by pointing out something that you missed, or a better way of handling things. They&apos;re doing what they&apos;re supposed to be doing by pointing out better ways. Even if they&apos;re doing a bad job of conveying it, it&apos;s your responsibility to hear past the attacking comments and focus on the learning that you can get out of the process. You need to strive to not get defensive.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;Create a checklist for yourself of the things that the code reviews tend to focus on.&lt;/strong&gt; Some of this checklist should be easy to put together. It should follow the outline of the coding standards document. Because it&apos;s your checklist, you can focus on the thing that you struggle with and skip the things that you rarely, if ever, have a problem with. Run through your code with the checklist and fix whatever you find. Not only will you reduce the number of things that the team finds, you&apos;ll reduce the time to complete the code review meeting—and everyone will be happy to spend less time in the review.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;Help to maintain the coding standards.&lt;/strong&gt; Offer to add to the coding standards for things discussed that aren&apos;t in the coding standards. One of the challenges that a developer has in an organization with combative code review practices is that they frequently don&apos;t know where the next problem will come from. If you document each issue into the coding standards, you can check for it with your checklist the next time you come up for code reviews. It also will help cement the concept into your mind so that you&apos;re less likely to miss opportunities to use the feedback.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Sure the above techniques can help you when you&apos;re sitting across the table from someone but how do you communicate tone and approach when you&apos;re doing code reviews through marking up the developer&apos;s code. Surprisingly, it&apos;s often easier than face-to-face code reviews.&lt;/p&gt;&lt;p&gt;In a face-to-face code review you, have to think on your feet. You can&apos;t reread your statements and questions and then change them to be more sensitive, more precise, or more caring. The benefit of an off-line code review is most heightened at the beginning of the process. Both the development leader and the developer have the opportunity to think about how to respond.&lt;/p&gt;&lt;p&gt;By the way, this off-line review process is the one that books (and some articles use.) This off-line process is used all the time in the publishing world, but is strangely not frequently used for code reviews. In some ways, it can be much more effective than a face-to-face conversation. Even if you have the ability to do meetings, you may consider moving to an off-line review to make the process better.&lt;/p&gt;&lt;p&gt;If you do your reviews by comments, a few special techniques are called for. They are:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;Put a summary comment at the top—and be positive.&lt;/strong&gt; One of the beautiful things about a review that is done off-line is that it&apos;s possible to read through everything and make a summary statement at the top of the file. This can help set the mood of the developer so they understand whether you&apos;re thrilled, thankful, happy, and so forth. This will soften comments even if harsh at times and make them more palatable. No matter what, the initial comment should contain some element of a positive message because there&apos;s something good to say about nearly every piece of code—even if it is only that it compiles. (It is syntactically correct.) Setting that positive attitude is essential.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;Use an electronic mechanism to record the comments.&lt;/strong&gt; Whether you export the code to a PDF file and use comments to mark it up, or copy the code into Word and use Word&apos;s commenting features, make sure that you use an electronic format for comments. This is important because it doesn&apos;t limit you to how much you can fit on a page—so you can explain more of what you mean and you can be more questioning and caring than doing a hardcopy review allows.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;Make an upfront agreement that not every question needs to be responded to.&lt;/strong&gt; The best off-line reviews include thinking questions. Questions such as &amp;quot;Would it be better to implement a provider pattern here?&amp;quot; don&apos;t necessarily need a response. Make it clear to the developer that some comments are simply to provoke thinking. This allows you to identify areas where you want to make sure the developer is considering alternatives without raising them to the point of being an issue with the code. Getting developers to think about the code they are writing doesn&apos;t improve the quality of the code they&apos;ve already written, but it does have a long-term positive impact on code quality.&lt;/p&gt;&lt;h3&gt;Conclusion&lt;/h3&gt;&lt;p&gt;Code reviews are often misused and painful for everyone, but they don&apos;t have to be. Some simple steps can convert torture into teaching and improve the long-term outlook for code quality in your organization.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
	</description>
    </item>
    <item>
      <title>Topics for a java Interview</title>
      <link>http://sengopal.github.io//blog/topics-for-a-java-interview.html</link>
      <pubDate>Mon, 13 Dec 2010 00:00:00 -0800</pubDate>
      <guid isPermaLink="false">blog/topics-for-a-java-interview.html</guid>
      	<description>
	&lt;ol&gt;
  &lt;li&gt;JVM – About JVM, JIT compiler, Bytecode, Classloader&lt;/li&gt;
  &lt;li&gt;Garbage Colection – Conditions when JVM invokes garbage collection, System.gc()&lt;/li&gt;
  &lt;li&gt;Static and Instance initializer block&lt;/li&gt;
  &lt;li&gt;Datatypes – character especially&lt;/li&gt;
  &lt;li&gt;enum – where to declare, defining constructor, methods and variables in enum&lt;/li&gt;
  &lt;li&gt;OOP concepts – inheritance, polymorphism, aggregation vs Composition, abstraction&lt;/li&gt;
  &lt;li&gt;Multiple Inheritance in java&lt;/li&gt;
  &lt;li&gt;Difference/Similarities between interface and abstract class&lt;/li&gt;
  &lt;li&gt;Software Engineering Concepts – Coupling and CohesionNE&lt;/li&gt;
  &lt;li&gt;String, StringBuffer and StringBuilder&lt;/li&gt;
  &lt;li&gt;Exception Handling – Checked vs Unchecked Exceptions, Assertion, Error, Exception Hierarchy, throw vs throws&lt;/li&gt;
  &lt;li&gt;final, finally and finalize&lt;/li&gt;
  &lt;li&gt;Method Overriding (Rules for the same)&lt;/li&gt;
  &lt;li&gt;Method Overloading – Covariant Return (Java5)&lt;/li&gt;
  &lt;li&gt;Autoboxing&lt;/li&gt;
  &lt;li&gt;Array – Declaring an anonymous and multidimensional array&lt;/li&gt;
  &lt;li&gt;Keywords like super and this&lt;/li&gt;
  &lt;li&gt;The Object classs – equals and hashcode methods&lt;/li&gt;
  &lt;li&gt;Access Specifiers – default, public , protected and private&lt;/li&gt;
  &lt;li&gt;Marker Interface, Wrapper Classe and Adapter Class&lt;/li&gt;
  &lt;li&gt;Classes like Math, StrictMath, Scanner, Console&lt;/li&gt;
  &lt;li&gt;Java IO: Important classes in IO, NIO.&lt;/li&gt;
  &lt;li&gt;Reading and writing XMLs in java. Type of parsers – SAX, DOM and STAX.&lt;/li&gt;
  &lt;li&gt;Java UI: AWT vs Swing, Different Layouts, Event handling, Calback methods&lt;/li&gt;
  &lt;li&gt;Serialization, Transient keyword&lt;/li&gt;
  &lt;li&gt;Multithreading – Runnable vs Thread, How to write a thread, difference between run and start method.&lt;/li&gt;
  &lt;li&gt;Java5 Concurrency and advanced threading – Callable, Future, Executors, Thread pooling, Locks and Conditions&lt;/li&gt;
  &lt;li&gt;Collection and Generics – Map, Set and List; Conventional Questions like ArrayList vs Vector, HashTable vs HashMap etc; Comparator and Comparable; Important collection classes.&lt;/li&gt;
  &lt;li&gt;Methods of java.util.Collections – Synchronizing a collection, Creating views&lt;/li&gt;
  &lt;li&gt;JDBC: The JDBC code, Type of JDBC Drivers, Type of Statements, execute, executeUpdate and executeQuery&lt;/li&gt;
&lt;/ol&gt;
	</description>
    </item>
    <item>
      <title>Java Mail Made Easy using Velocity Templates</title>
      <link>http://sengopal.github.io//blog/java-mail-using-velocity-templates.html</link>
      <pubDate>Fri, 1 Oct 2010 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/java-mail-using-velocity-templates.html</guid>
      	<description>
	&lt;h3&gt;Introduction to Velocity&lt;/h3&gt;&lt;p&gt;Velocity is an open source templating tool developed by an international volunteer community and hosted by the Apache Software Foundation&apos;s Jakarta Project. You can download the freely available source code at the &lt;a href=&quot;http://www.javaworld.com/javaworld/jw-12-2001/jw-1228-velocity.html#resources&quot;&gt;Jakarta Velocity&lt;/a&gt; Project Website.&lt;/p&gt;&lt;h3&gt;Simple Velocity Template Example&lt;/h3&gt;&lt;p&gt;Any application using Velocity requires two parts. The first is the template&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Helloworld.vm&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  Hello $name!  Welcome to Velocity!
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;HelloWorld.java:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  import java.io.StringWriter;
  import org.apache.velocity.Template;
  import org.apache.velocity.VelocityContext;
  import org.apache.velocity.app.Velocity;
  public class HelloWorld{
      public static void main( String[] args ) throws Exception {
          /*  Get the Template  */
          Template t = Velocity.getTemplate(&amp;quot;Helloworld.vm&amp;quot; );
          /*  create a context and add data */
          VelocityContext context = new VelocityContext();
          context.put(&amp;quot;name&amp;quot;, &amp;quot;World&amp;quot;);
          /* now render the template into a StringWriter */
          StringWriter writer = new StringWriter();
          t.merge( context, writer );
          /* show the World */
          System.out.println( writer.toString() );
      }
  }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  Hello World!  Welcome to Velocity!
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;Introduction to JAVA MAIL API&lt;/h3&gt;&lt;p&gt;The Java Mail API provides the capability to develop email clients and mail-enabled Java applications. It supports the creation of sophisticated user interfaces for mail clients. It includes appropriate convenience classes, which encapsulate common mail functions and protocols. It fits with other packages for the Java platform in order to facilitate its use with other Java APIs. It provides a mail and messaging framework addition to the Java platform.&lt;/p&gt;&lt;p&gt;Although the Java Mail API contains many more classes than those discussed here, concentrating on some of the core classes to start with makes it easy to understand the essence of the API. The following is a brief description of the core classes:&lt;/p&gt;&lt;h4&gt;javax.mail.Session&lt;/h4&gt;&lt;p&gt;The javax.mail.Session class is the top-level entry class for the Java Mail API, and its most commonly used methods provide the ability to control and load the classes that represent the service provider implementations (SPI) for various mail protocols (Note: A service provider is a developer and/or vendor that provides an implementation for an API; examples of Java Mail API implementations include POP3, SMTP, and IMAP4 -- some are available from Sun, others via third parties.)&lt;/p&gt;&lt;h4&gt;javax.mail.Transport&lt;/h4&gt;&lt;p&gt;The javax.mail.Transport class is another provider-implemented class and is used for sending a message over a specific protocol.&lt;/p&gt;&lt;h4&gt;javax.mail.Message&lt;/h4&gt;&lt;p&gt;The javax.mail.Message class is implemented by a provider and models all the details of an actual e-mail message, such as the subject line, sender/recipient e-mail address, sent date, and so on. The guidelines for providers who implement the javax.mail.Message dictate that the actual fetching of e-mail message components should be delayed as long as possible in order to make this class as lightweight as possible.&lt;/p&gt;&lt;h4&gt;Simple JAVA Mail Example&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;  import java.beans.*;
  import javax.mail.*;
  import javax.mail.internet.*;
  import java.io.*;
  import java.util.*;
   public class MailBean {
        public MailBean(String from, String userName, String subject, String content){
           try{
              mail(from, userName, subject, content);
           }catch(MessagingException e)  {}
         }
         public String getBenaInfo(){
              return &amp;quot;A Bean that sends mail&amp;quot;;
        }
       public void mail(String from, String userName, String subject, String content)throws MessagingException{
          String smtpHost = &amp;quot;00.00.00.00&amp;quot;;
          //start a session
          java.util.Properties properties = System.getProperties();
          properties.put(&amp;quot;mail.smtp.host&amp;quot;,smtpHost);
          Session session = Session.getInstance(properties,null);

          //Construct a message object
          MimeMessage message = new MimeMessage(session);
          message.setFrom(new InternetAddress(from));
          message.addRecipient(Message.RecipientType.TO,new InternetAddress(userName));
          message.setSubject(subject);
          message.setText(content);
          message.setSentDate(new java.util.Date());

          //connect to transport
          Transport transport = session.getTransport(&amp;quot;smtp&amp;quot;);
          transport.connect(smtpHost,&amp;quot;&amp;quot;, &amp;quot;&amp;quot;);

          //send the message and close the connection
          transport.sendMessage(message,message.getAllRecipients());
          transport.close();
       }
   }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;As there are a lot of tutorials available for Velocity and Java Mail, this tutorial deals only with the integration of Velocity for easier and more customized mailing abilities.&lt;/p&gt;&lt;h3&gt;Project Usage&lt;/h3&gt;&lt;p&gt;Our Project required nearly fifty different mail formats to be sent on various stages of the application. The difficult part being that the templates contained loads of dynamic data. Also these templates were being updated on a regular basis making it more difficult for developing the application.&lt;/p&gt;&lt;p&gt;We used Velocity Templates for storing the design and the layout of the mail which needs to be sent and used them for integrating the dynamic attributes into the layout and hence providing a seamless abstraction between the presentation and the business layer.&lt;/p&gt;&lt;h2&gt;Step-by-Step Explanation of the Code&lt;/h2&gt;&lt;h3&gt;SendMessage.java&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Velocity Template Merging&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;p&gt;The best practice for storing the non-variables such as the SMTP connect parameters, the template names etc., either in a properties file or in a constants interface. In this example, a properties file, “mail. properties” has been used. Using the ClassLoader the properties file is loaded&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  Properties props = new Properties();
  props.load(SendMessage.class.getClassLoader().getResourceAsStream(&amp;quot;mail.properties&amp;quot;));
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;The Mail.vm template is loaded from into the Velocity context using the static method Velocity.getTemplate&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  Template template = Velocity.getTemplate(&amp;quot;Mail.vm&amp;quot;);
  VelocityContext context = new VelocityContext();
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Then the user defined MailBean is placed in the velocity Context under the name “MailBean”&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  context.put(&amp;quot;MailBean&amp;quot; , mailBean);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Along with beans, we can place name value pairs directly in the velocity context&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  String host =  props.getProperty(&amp;quot;hostname&amp;quot;);
  context.put(&amp;quot;host&amp;quot;, host);
  context.put(&amp;quot;imgName&amp;quot;, &amp;quot;smile.gif&amp;quot;);
  context.put(&amp;quot;context&amp;quot;, &amp;quot;myApp&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;When the context is merged with the template and the results in placed in a StringWriter Object&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  StringWriter message = new StringWriter();
  template.merge(context, message);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;JAVA Mail - E-Mail Creation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;p&gt;The SMTP Host variable is placed in the System Properties and the javax.mail.Session is obtained for the given SMTP Host&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  Properties sysProperties = System.getProperties();
  sysProperties.put(&amp;quot;mail.smtp.host&amp;quot;, props.getProperty(&amp;quot;smtpHost&amp;quot;));
  Session session = Session.getInstance(sysProperties, null);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Since the e-mail needs to contain text and an image file, create a MimeMultipart with the subtype declared as “related’ so that the image being put doesnt get lost if the images are blocked by the recipient&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  MimeMultipart multipart = new MimeMultipart(&amp;quot;related&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;For adding the image to the e-mail&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;p&gt;Create a body part for storing the image and embedding into the e-mail&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  BodyPart imageBodyPart = new MimeBodyPart();
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Use the FileDataSource to read the image from the Web deployment folder.&lt;br/&gt;Note: &lt;em&gt;Using File.seperator takes care of the Windows/Unix environment issue&lt;/em&gt;&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  StringBuffer imgPath = new StringBuffer().append(File.separator).append(&amp;quot;applications&amp;quot;).append(File.separator).append(&amp;quot;mailheader.GIF&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Then using the DataHandler object place the image into the BodyPart created&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  DataSource fds = new FileDataSource(imgPath.toString());
  imageBodyPart.setDataHandler(new DataHandler(fds));
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Set an id for the image body part so that the image can be accessed anywhere in the mail for embedding&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  imageBodyPart.setHeader(&amp;quot;Content-ID&amp;quot;,&amp;quot;&amp;lt;123&amp;gt;&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Add the Image Body Part into the MimeMultiPart object&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  multipart.addBodyPart(imageBodyPart);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Adding the Message body content to the e-mail&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;p&gt;Create a body part for storing the message content in the e-mail&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  BodyPart messageBodyPart = new MimeBodyPart();
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Combine the StringWriter Object and the image src code using a StringBuffer&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  StringBuffer messageBuffer = new StringBuffer();
  messageBuffer.append(message.toString());
  messageBuffer.append(&amp;quot;&amp;lt;img src=&amp;quot;cid:123\&amp;quot;&amp;gt;&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Set the Message content type as &lt;em&gt;text/html&lt;/em&gt;, since our template VM is designed using HTML and add the message body part to the main MultiMime part&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  messageBodyPart.setContent(messageBuffer.toString(), &amp;quot;text/html&amp;quot;);
  multipart.addBodyPart(messageBodyPart);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Sending the E-Mail&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;p&gt;Create a MimeMessage using the javax.mail.Session Object&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  Message msg = new MimeMessage(session);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Set the content as the multimime part object created&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  msg.setContent(multipart);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;The Recipients are added to the e-mail for the recipient types TO, CC and BCC&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  msg.addRecipients(Message.RecipientType.TO, InternetAddress.parse(&amp;quot;someone@example.com&amp;quot;));
  msg.addRecipients(Message.RecipientType.CC,InternetAddress.parse(&amp;quot;everyone@example.com&amp;quot;));
  if((null!=recipientsList)&amp;amp;&amp;amp;(!recipientsList.isEmpty())){
      for(int i=0;i&amp;lt;recipientsList.size();i++){
          msg.addRecipients(Message.RecipientType.BCC,InternetAddress.parse(recipientsList.get(i)));
      }
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;The Subject Text, Sent Date and the From Address are set as below.&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  msg.setSubject(subject);
  msg.setSentDate(new Date());
  msg.setFrom(new InternetAddress(&amp;quot;dummy@example.com&amp;quot;));
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;The Transport Object is used for creating the connection to the SMTP host and sending the e-mail. The transporter object below is obtained using the getTransport method and by giving the parameter as &lt;em&gt;smtp&lt;/em&gt; as the protocol for the Transport Object&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  Transport transport = session.getTransport(&amp;quot;smtp&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Then the Transport is connected using the HOST, UserName and Password parameters from the properties file&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  transport.connect(props.getProperty(&amp;quot;connectHost&amp;quot;);
  props.getProperty(&amp;quot;connectUser&amp;quot;);
  props.getProperty(&amp;quot;connectPassword&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Then the e-mail is sent using the sendMessage to all the recipients&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  transport.sendMessage(msg,msg.getAllRecipients());
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;The transport is closed to mark the end of the connection&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;  transport.close();
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Mail.vm&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Image Path Macro&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;This macro is used to return the path to be used as SRC by the images in the HTML. It takes a parameter imgName and returns the string,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  https://$host/$context/images/$imgName
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;where $host, $context are context variables placed by the JAVA code&lt;/p&gt;&lt;p&gt;The macro looks like this&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  #macro( IMGURL $imgName )
      https://$host/$context/images/$imgName
  #end
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;img src=&amp;quot;#IMGURL(&amp;#39;mailheader.GIF&amp;#39;)&amp;quot; border=&amp;quot;0&amp;quot; width=&amp;quot;980&amp;quot; height=&amp;quot;61&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This will get generated as:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;img src=&amp;quot;https://localhost/myapp/images/mailheader.GIF&amp;quot; border=&amp;quot;0&amp;quot; width=&amp;quot;980&amp;quot; height=&amp;quot;61&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Accessing the Bean Object&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The variables in the MailBean object placed in the context can be accessed using, &lt;code&gt;$MailBean.\[variable-name\]&lt;/code&gt;&lt;br/&gt;Example: &lt;code&gt;Mail Content : $MailBean.content&lt;/code&gt;&lt;/p&gt;&lt;h4&gt;mail.properties&lt;/h4&gt;&lt;p&gt;This file contains the connection and the other context parameter properties used by the java code&lt;/p&gt;&lt;h3&gt;Advantages&lt;/h3&gt;&lt;p&gt;Designed as an easy-to-use general templating tool, Velocity is useful in any Java application area that requires data formatting and presentation. Their salient advantages being:&lt;br/&gt;* It adapts to many application areas.&lt;br/&gt;* It offers a simple, clear syntax for the template designer.&lt;br/&gt;* It offers a simple programming model for the developer.&lt;br/&gt;* Because templates and code are separate, you can develop and maintain them independently.&lt;br/&gt;* The Velocity engine easily integrates into any Java application environment, especially Servlets.&lt;br/&gt;* Velocity enables templates to access any public method of data objects in the context.&lt;/p&gt;&lt;p&gt;References&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://velocity.apache.org/&quot;&gt;http://velocity.apache.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.roseindia.net/software-tutorials/detail/3131&quot;&gt;http://www.roseindia.net/software-tutorials/detail/3131&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://java.sun.com/developer/&quot;&gt;http://java.sun.com/developer/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://kickjava.com/2876.htm&quot;&gt;http://kickjava.com/2876.htm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.javaworld.com/javaworld/jw-12-2001/jw-1228-velocity.html&quot;&gt;http://www.javaworld.com/javaworld/jw-12-2001/jw-1228-velocity.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://velocity.apache.org/engine/releases/velocity-1.5/user-guide.html&quot;&gt;http://velocity.apache.org/engine/releases/velocity-1.5/user-guide.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.javasoft.com/products/javamail&quot;&gt;http://www.javasoft.com/products/javamail&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
	</description>
    </item>
    <item>
      <title>PDF Generation using PD4ML</title>
      <link>http://sengopal.github.io//blog/pdf-generation-using-pd4ml.html</link>
      <pubDate>Mon, 5 Apr 2010 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/pdf-generation-using-pd4ml.html</guid>
      	<description>
	&lt;h3&gt;Project Usage&lt;/h3&gt;&lt;p&gt;Our Project required PDF generation at various stages of the application and the uploading the same into the FileNet FTP. PD4ML was used for generation and saving the file locally into the server from which the PDF got generated to the FileNet&lt;/p&gt;&lt;p&gt;PD4ML was used as our application used Struts framework and the data needed in the PDF was provided using STRUTS and the layout design was done using HTML and CSS. This provided us with a seamless abstraction between the presentation and the business layer for dynamic generation of PDFs online.&lt;/p&gt;&lt;h3&gt;Introduction to PD4ML&lt;/h3&gt;&lt;p&gt;PD4ML is a powerful PDF generating tool that uses HTML and CSS (Cascading Style Sheets) as page layout and content definition format. Written in 100% pure Java, it allows users to easily add PDF generation functionality to end products. PD4ML can be used either as a command line operation or in Web applications for online PDF generation from HTML and JSP templates.&lt;/p&gt;&lt;h3&gt;PD4ML as a Command Line Operation&lt;/h3&gt;&lt;p&gt;PD4ML can be used for HTML to PDF transformation with a command line application. There are man ways for achieving this conversion. However the most commonly used methods are as follows:&lt;/p&gt;&lt;h4&gt;Creating a PDF from an URL String&lt;/h4&gt;&lt;p&gt;The PDF can be generated using a html file whose URL can be in the render () method&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  import org.zefer.pd4ml.PD4ML;
  import org.zefer.pd4ml.PD4Constants;
  ........

  File f = new File(&amp;quot;D:/tools/test.pdf&amp;quot;);
  java.io.FileOutputStream fos = new java.io.FileOutputStream(f);
  PD4ML pd4ml = new PD4ML();
  pd4ml.render( urlstring, fos );
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Steps Involved&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Import the PD4ML converter class&lt;/li&gt;
  &lt;li&gt;Define HTML-to-PDF converting parameter values if needed such as user space width, HTML elements arrangement, vertical size etc.,&lt;/li&gt;
  &lt;li&gt;Preparing output stream for PDF generation.&lt;/li&gt;
  &lt;li&gt;Instantiating PD4ML converter.&lt;/li&gt;
  &lt;li&gt;Passing to it HTML-to-PDF converting parameters.&lt;/li&gt;
  &lt;li&gt;Performing HTML-to-PDF translation.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Converting HTML obtained from input stream to PDF&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Using an URL for converting an HTML into a PDF is not mandatory. PD4ML can read a source HTML from input stream and then use the input stream for conversion into the PDF&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  File f = new File(&amp;quot;D:/tools/test.pdf&amp;quot;);
  java.io.FileOutputStream fos = new java.io.FileOutputStream(f);
  File fz = new File(&amp;quot;D:/tools/yahoo.htm&amp;quot;);
  java.io.FileInputStream fis = new java.io.FileInputStream(fz);
  InputStreamReader isr = new InputStreamReader( fis, &amp;quot;UTF-8&amp;quot; );
  PD4ML html = new PD4ML();
  URL base = new URL( &amp;quot;file:D:/tools/&amp;quot; );
  html.render( isr, fos, base );
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;Formatting the PDF document generated&lt;/h3&gt;&lt;p&gt;The PDF getting generated can be formatted using various methods. Some of the most commonly used ones are given below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  PD4ML html = new PD4ML();
  html.setPageSize( new Dimension(450, 450) );
  //defines page size in points. A set of predefined page format constants is available in the PD4Constants interface.
  html.setPageInsets( new Insets(20, 50, 10, 10) );
  //specifies page insets in points
  html.setHtmlWidth( 750 );
  //defines desired HTML page width in screen pixels. Virtually it can be seen as a web browser window horizontal resize
  html.enableImgSplit( false );
  //allows to disable image splitting by page breaks. By default the option is true (splitting enabled).
&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;For Generating Text-Only Header and Footer&lt;/h4&gt;&lt;p&gt;Static or template text can be used for header and footer of the PDF document. The header and the footer can be set with various formats. Few of them are:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  PD4PageMark header = new PD4PageMark();
  header.setAreaHeight( 20 );
  //defines height of the header or footer area
  header.setTitleTemplate( &amp;quot;title: $[title]&amp;quot; );
  //defines a template for page title representation.
  //No title is printed, if the titleTemplate is set to null. Default value is null.
  header.setTitleAlignment( PD4PageMark.CENTER_ALIGN );
  //defines alignment for the page title string in the document&amp;#39;s header of footer
  header.setPageNumberAlignment( PD4PageMark.LEFT_ALIGN );
  //defines alignment for the page numbers in the document&amp;#39;s header of footer area
  header.setPageNumberTemplate( &amp;quot;#$[page]&amp;quot; );
  //defines a template for page number representation
  PD4PageMark footer = new PD4PageMark();
  footer.setAreaHeight( 30 );
  //Already explained above
  footer.setFontSize( 20 );
  //sets font size for the header or footer
  footer.setColor( Color.red );
  //setColor() sets the color of header or footer text
  footer.setPagesToSkip( 1 );
  //defines a number of pages from the document beginning, that should not be marked with the header or footer info
  footer.setTitleTemplate( &amp;quot;[ $[title] ]&amp;quot; );
  //Already explained above
  footer.setPageNumberTemplate( &amp;quot;page: $[page]&amp;quot; );
  //Already explained above
  footer.setTitleAlignment( PD4PageMark.RIGHT_ALIGN );
  //Already explained above
  footer.setPageNumberAlignment( PD4PageMark.LEFT_ALIGN );
  //Already explained above

  pd4ml.setPageHeader( header );
  pd4ml.setPageFooter( footer );
&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;Protecting PDF documents&lt;/h4&gt;&lt;p&gt;A PDF document can be encrypted to protect its contents from unauthorized access. PD4ML supports PDF access permissions concept and allows a password to be specified for a document. If any passwords or access restrictions are specified with PD4ML.setPermissions (), the document is encrypted, and the permissions and information required to validate the passwords are stored to the resulting document.&lt;/p&gt;&lt;p&gt;The possible restrictions are:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Modifying the document’s contents&lt;/li&gt;
  &lt;li&gt;Copying or otherwise extracting text and graphics from the document&lt;/li&gt;
  &lt;li&gt;Adding or modifying text annotations&lt;/li&gt;
  &lt;li&gt;Printing the document&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;The various types of pre-set Permissions available in the API are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;AllowAssembly&lt;/li&gt;
  &lt;li&gt;AllowContentExtraction&lt;/li&gt;
  &lt;li&gt;AllowCopy&lt;/li&gt;
  &lt;li&gt;AllowDegradedPrint&lt;/li&gt;
  &lt;li&gt;AllowModify&lt;/li&gt;
  &lt;li&gt;AllowPrint&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The PDF document produced by PD4ML can be protected with 40-bit or 128-bit encryption using the various Permission levels given above.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  String password = &amp;quot;empty&amp;quot;;
  boolean strongEncryption = true;
  int permissions = PD4Constants.AllowPrint | PD4Constants.AllowCopy;
  pd4ml.setPermissions( password, permissions, strongEncryption );
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Some of the other salient Features that are available with PD4ML are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Converting HTML headings or named anchors to PDF bookmarks&lt;/li&gt;
  &lt;li&gt;Named anchors&lt;/li&gt;
  &lt;li&gt;Inserting page breaks&lt;/li&gt;
  &lt;li&gt;generating and sending PDF by email&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Using PD4ML in Web applications for online PDF generation&lt;/h3&gt;&lt;p&gt;PD4ML can be used in Web applications for online PDF generation from HTML, JSP and Servlet templates. A simple example is given below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;taglib uri=&amp;quot;http://pd4ml.com/tlds/pd4ml/2.5&amp;quot; prefix=&amp;quot;pd4ml&amp;quot;&amp;gt;
  &amp;lt;page contentType=&amp;quot;text/html; charset=UTF-8&amp;quot;&amp;gt;

  &amp;lt;pd4ml:transform
        screenWidth=&amp;quot;400&amp;quot;
        pageFormat=&amp;quot;A5&amp;quot;
        pageOrientation=&amp;quot;landscape&amp;quot;
        pageInsets=&amp;quot;100,100,100,100,points&amp;quot;
        enableImageSplit=&amp;quot;false&amp;quot;&amp;gt;

    &amp;lt;html&amp;gt;
        &amp;lt;head&amp;gt;
              &amp;lt;title&amp;gt;pd4ml test&amp;lt;/title&amp;gt;
              &amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;
                    body {
                          color: red;
                          background-color: #FFFFFF;
                          font-family: Tahoma, &amp;quot;Sans-Serif&amp;quot;;
                          font-size: 10pt;
                    }
              &amp;lt;/style&amp;gt;
        &amp;lt;/head&amp;gt;
        &amp;lt;body&amp;gt;
             &amp;lt;img src=&amp;quot;images/logos.gif&amp;quot; width=&amp;quot;125&amp;quot; height=&amp;quot;74&amp;quot;&amp;gt;
              &amp;lt;p&amp;gt;
              Hello, World!
          &amp;lt;pd4ml:page.break/&amp;gt;
              &amp;lt;table width=&amp;quot;100%&amp;quot; style=&amp;quot;background-color: #f4f4f4; color: #000000&amp;quot;&amp;gt;
              &amp;lt;tr&amp;gt;
              &amp;lt;td&amp;gt;
                    Hello, New Page!
              &amp;lt;/td&amp;gt;
              &amp;lt;/tr&amp;gt;
              &amp;lt;/table&amp;gt;
        &amp;lt;/body&amp;gt;
    &amp;lt;/html&amp;gt;
  &amp;lt;/pd4ml:transform&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In order to get a PDF output, we need to surround the HTML or JSP with &amp;lt;pd4ml:transform&amp;gt; tags or refer to the markup from an external PD4ML-enabled JSP or Servlets.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;PD4ML JSP taglib declaration and opening transform tag. JSP content surrounded with&lt;br/&gt; &lt;code&gt;&amp;lt;pd4ml:transform&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/pd4ml:transform&amp;gt;&lt;/code&gt; tags is passed to the PD4ML converter.&lt;/li&gt;
  &lt;li&gt;Image should be referenced with relative path. Absolute URLs, like &lt;code&gt;src=&amp;quot;http://myserver:80/path/to/img.gif&amp;quot;&lt;/code&gt; are allowed as well, but &lt;code&gt;src=&amp;quot;/path/to/img.gif&amp;quot;&lt;/code&gt; is not allowed.&lt;/li&gt;
  &lt;li&gt;The directive forces PD4ML converter to insert a page break to the output PDF.&lt;/li&gt;
  &lt;li&gt;Closing of the transformation tag. Any content that appears after the tag is ignored.&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Defining PDF document footer (or header) with JSP custom tag&lt;/h4&gt;&lt;p&gt;The header and/or footer for the PDF can be declared in the jsp in the following fashion.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;pd4ml:footer
      titleTemplate=&amp;quot;[${title}]&amp;quot;
      pageNumberTemplate=&amp;quot;page ${page}&amp;quot;
      titleAlignment=&amp;quot;left&amp;quot;
      pageNumberAlignment=&amp;quot;right&amp;quot;
      color=&amp;quot;#008000&amp;quot;
      initialPageNumber=&amp;quot;1&amp;quot;
      pagesToSkip=&amp;quot;1&amp;quot;
      fontSize=&amp;quot;14&amp;quot;
      areaHeight=&amp;quot;18&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;Description&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Title template definition. A string that can optionally contain placeholders ${title} for a title value taken from HTML&apos;s TITLE tag, ${page} for a page counter value.&lt;/li&gt;
  &lt;li&gt;Page number template definition. A string with placeholder ${page} for a page counter value.&lt;/li&gt;
  &lt;li&gt;The attribute initializes internal page counter with the given value.&lt;/li&gt;
  &lt;li&gt;The attribute defines, that 1 page should not contain footer information.&lt;/li&gt;
  &lt;li&gt;Footer area height in points.&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Adding Dynamic data&lt;/h4&gt;&lt;p&gt;Dynamic data like data from session or scriplets can be used in the PDF generation. A Simple Example is given below.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;% String template = getFormattedDate() + &amp;quot;, page ${page} &amp;quot;; %&amp;gt;
  &amp;lt;pd4ml:footer
      pageNumberTemplate=&amp;quot;&amp;lt;%=template%&amp;gt;&amp;quot;
      .......
      /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This means that the entire form generation for Presentation Frameworks like Struts etc., can be used just like a normal JSP. This provides a nice demarcation and seamless integration of the presentation (Format/Layout) of the PDF document and the business behind the generation&lt;/p&gt;&lt;h4&gt;Temporary saving generated PDF to hard drive&lt;/h4&gt;&lt;p&gt;With &lt;code&gt;&amp;lt;pd4ml:savefile&amp;gt;&lt;/code&gt; tag you have possibility to store just generated PDF to hard drive and redirect user&apos;s browser to read the PDF as static resource or to redirect the request to another URL for PDF post-processing. The tag should be nested within &lt;code&gt;&amp;lt;pd4ml:transform&amp;gt;&lt;/code&gt; and should not have a body.There are two ways of generating the PDF and redirecting the browser.&lt;/p&gt;&lt;h4&gt;Routing the browser to the PDF generated&lt;/h4&gt;&lt;p&gt;Once the PDF is generated the user can be directed to the generated PDF using the following piece of code.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;pd4ml:savefile
      uri=&amp;quot;/WEB/savefile/saved/&amp;quot;
      dir=&amp;quot;D:/spool/generated_pdfs&amp;quot;
      redirect=&amp;quot;pdf&amp;quot;
      debug=&amp;quot;false&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The tag above forces PD4ML to save the generated PDF to D:/spool/generated_pdfs with an autogenerated name.It is expected, that local directory D:/spool/generated_pdfs corresponds to URL &lt;code&gt;http://yourserver.com/WEB/savefile/saved/&lt;/code&gt; (as given in &quot;uri&quot; attribute)&lt;/p&gt;&lt;p&gt;After generation PD4ML will send to client&apos;s browser a redirect command with URL like that:&lt;br/&gt;&lt;code&gt;http://yourserver.com/WEB/savefile/saved/generated_name.pdf&lt;/code&gt;&lt;br/&gt;where,&lt;/p&gt;&lt;p&gt;&lt;code&gt;http://yourserver.com&lt;/code&gt; - Context path&lt;/p&gt;&lt;p&gt;&lt;code&gt;/WEB/savefile/saved&lt;/code&gt; - URI given&lt;/p&gt;&lt;p&gt;&lt;code&gt;generated_name.pdf&lt;/code&gt; - Auto generated file Name&lt;/p&gt;&lt;h4&gt;Routing the browser to the next page&lt;/h4&gt;&lt;p&gt;However if the browser needs to be redirected to the next page instead of the PDF generated, it can be done in the following way.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;pd4ml:savefile
      dir=&amp;quot;D:/spool/generated_pdfs&amp;quot;
      redirect=&amp;quot;/mywebapp/send_pdf_by_email.jsp&amp;quot;
      debug=&amp;quot;false&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The tag above forces PD4ML to save the generated PDF to D:/spool/generated_pdfs with an auto generated name. After that it forwards to /mywebapp/send_pdf_by_email.jsp with a REQUEST parameter filename=&lt;code&gt;&amp;lt;pdfname&amp;gt;&lt;/code&gt;. So send_pdf_by_email.jsp can read file name using,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  String fileName = request.getParameter(&amp;quot;filename&amp;quot;);
  //Building the full path of the PDF generated
  String path = &amp;quot;D:/spool/generated_pdfs&amp;quot; + &amp;quot;/&amp;quot; + fileName;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Hence that JSP can read the just-generated PDF file and and perform post-processing or any other actions (like E-mail or File-Upload).&lt;/p&gt;&lt;p&gt;In both cases above you can predefine PDF file name with &quot;name&quot; attribute. If a file with the name is already exists in D:/spool/generated_pdfs, than the new file name is appended with an auto-incremented numeric value.&lt;/p&gt;&lt;h3&gt;Instructions for Installation&lt;/h3&gt;&lt;p&gt;PD4ML is intended to be used with JDK1.3.1 and above .For deploying PD4ML as either Console application and for online generation, use the following jars available at the PD4ML site (Given in the references)&lt;br/&gt;• pd4ml.jar&lt;br/&gt;• pd4ml_tl.jar(for the tag library)&lt;/p&gt;&lt;h3&gt;Professional Version Features&lt;/h3&gt;&lt;p&gt;Apart from the various features discussed above, the licensed professional version includes lots of additional features such as:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;TTF embedding&lt;/li&gt;
  &lt;li&gt;Configuring Fonts directory&lt;/li&gt;
  &lt;li&gt;Embedding fonts to PDF from Java API&lt;/li&gt;
  &lt;li&gt;Embedding fonts to PDF from JSP&lt;/li&gt;
  &lt;li&gt;Watermark images&lt;/li&gt;
  &lt;li&gt;Table of contents&lt;/li&gt;
  &lt;li&gt;General notes&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://pd4ml.com/api/index.html&quot;&gt;http://pd4ml.com/api/index.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://pd4ml.com/index.htm&quot;&gt;http://pd4ml.com/index.htm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
	</description>
    </item>
    <item>
      <title>Job chaining using Quartz</title>
      <link>http://sengopal.github.io//blog/job-chaining-using-quartz.html</link>
      <pubDate>Tue, 31 Mar 2009 00:00:00 -0700</pubDate>
      <guid isPermaLink="false">blog/job-chaining-using-quartz.html</guid>
      	<description>
	&lt;h3&gt;Project Usage&lt;/h3&gt;&lt;p&gt;Our Project had the requirement of reading a set of records from a table which acts as a queue and sends the pending mails. This reading /sending of mails has to happen every five minutes. However, since the SMTP server needs to address online mailing at times, this job may run more than the given five minutes. Also, if the number of records in the table is high, the Job exceeds the expected time of completion of five minutes. Hence it was decided to “chain” the jobs with a five minute delay.&lt;/p&gt;&lt;h3&gt;Introduction to Quartz&lt;/h3&gt;&lt;p&gt;Quartz is an open source job scheduling framework that provides simple but powerful mechanisms for job scheduling in Java applications. Quartz allows developers to schedule jobs by time interval or by time of day. It implements many-to-many relationships for jobs and triggers and can associate multiple jobs with different triggers.&lt;br/&gt;Applications that incorporate Quartz can reuse jobs from different events and also group multiple jobs for a single event. While you can configure Quartz through a property file (in which you can specify a data source for JDBC transactions, global job and/or trigger listeners, plug-ins, thread pools, and more) it is not at all integrated with the application server&apos;s context or references.&lt;/p&gt;&lt;h3&gt;Jobs and triggers&lt;/h3&gt;&lt;p&gt;The two fundamental units of Quartz&apos;s scheduling package are jobs and triggers. A job is an executable task that can be scheduled, while a trigger provides a schedule for a job. While these two entities could easily have been combined, their separation in Quartz is both intentional and beneficial. By keeping the work to be performed separate from its scheduling, Quartz allows you to change the scheduled trigger for a job without losing the job itself, or the context around it. Also, any singular job can have many triggers associated with it.&lt;/p&gt;&lt;h3&gt;Simple Job Example&lt;/h3&gt;&lt;p&gt;An example of a Quartz job is given below. This class overrides the execute () (JobExecutionContext context) method with a very simple output statement. This method can contain any code that constitutes the job to be executed&lt;/p&gt;&lt;h4&gt;SimpleQuartzJob.java&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;import java.util.Date;
import org.quartz.Job;
import org.quartz.JobExecutionContext;
import org.quartz.JobExecutionException;

public class SimpleQuartzJob implements Job {

    public SimpleQuartzJob() {
    }

    public void execute(JobExecutionContext context) throws JobExecutionException {
        System.out.println(&amp;quot;In SimpleQuartzJob - executing its JOB at &amp;quot;
                + new Date() + &amp;quot; by &amp;quot; + context.getTrigger().getName());
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;Notice that the execute method takes a JobExecutionContext object as an argument. This object provides the runtime context around the job instance. Specifically, it gives access to the scheduler and trigger, which collaborated to initiate execution of the job as well as the job&apos;s JobDetail object. Quartz separates the execution and the surrounding state of a job by placing the state in a JobDetail object and having the JobDetail constructor initiate an instance of a job. The JobDetail object stores the job&apos;s listeners, group, data map, description, and other properties of the job.&lt;/em&gt;&lt;/p&gt;&lt;h4&gt;Simple Trigger Example&lt;/h4&gt;&lt;p&gt;A trigger develops a schedule for job execution. Quartz offers a few different trigger options of varying complexity. The SimpleTrigger given below shows the fundamentals of triggers.&lt;/p&gt;&lt;h4&gt;SimpleTriggerRunner.java&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;import org.quartz.JobDetail;
import org.quartz.Scheduler;
import org.quartz.SchedulerException;
import org.quartz.Trigger;
import org.quartz.TriggerUtils;
import org.quartz.impl.StdSchedulerFactory;

public class Test{
    public void scheduleTask() throws SchedulerException {
        try{
            logger.info(&amp;quot;Starting the scheduler in Quartz&amp;quot;);
            StdSchedulerFactory schedFact = new StdSchedulerFactory();
            Scheduler sched = schedFact.getScheduler();
            logger.info(&amp;quot;Scheduling a Tickler job in Quartz&amp;quot;);

                //Making a daily Trigger for the Job
            Trigger simpleTrigger = TriggerUtils.makeDailyTrigger(2, 00);
            simpleTrigger.setName(&amp;quot;SimpleQuartzTrigger&amp;quot;);
            simpleTrigger.setGroup(Scheduler.DEFAULT_GROUP);
            JobDetail simpleJob = new JobDetail(&amp;quot;SimpleQuartzJob&amp;quot;, Scheduler.DEFAULT_GROUP, SimpleQuartzJob.class);
            sched.scheduleJob(simpleJob,simpleTrigger);
            logger.info(&amp;quot;Tickler Mail Job Scheduled&amp;quot;);
        }
        catch(Exception e){
            logger.info(&amp;quot;Error while scheduling the jobs.&amp;quot;);
            logger.error(e);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The scheduling method starts by instantiating a SchedulerFactory and getting the scheduler. As discussed earlier, the JobDetail object is created by taking the Job (SimpleQuartzJob) as an argument to its constructor. The TriggerUtils.makeDailyTrigger creates a simple trigger which executes the associated job(s) at 2:00 am everyday&lt;br/&gt;There are a number of other ways to manipulate a SimpleTrigger. In addition to a specified number of repeats and a specified repeat interval, jobs may be schedules to execute at a specific calendar time, given a maximum time of execution, or given a priority. Some of the advanced concepts include CronTriggers, Job Stores, and JobMap etc.,&lt;/p&gt;&lt;h3&gt;Need for Job Chaining&lt;/h3&gt;&lt;p&gt;The job known as “MailProcessor” needs to be scheduled every 5 minutes i.e., this job has to execute every five minutes. The code which was used for scheduling the job is given below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Trigger mailProcTrigger = TriggerUtils.makeMinutelyTrigger(5);
mailProcTrigger.setName(SchedulingConstants.MAILPROCESSOR_TRIGGER_NAME);
mailProcTrigger.setGroup(Scheduler.DEFAULT_GROUP);
JobDetail mailProc = new JobDetail(SchedulingConstants.MAILPROCESSOR_JOB_NAME, Scheduler.DEFAULT_GROUP, MailProcessor.class);
sched.scheduleJob(mailProc,mailProcTrigger);
logger.info(&amp;quot;Mail Processor Scheduled&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Following are the issues faced with this kind of scheduling&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;The SMTP Server needs to address online mailing at times.&lt;/li&gt;
  &lt;li&gt;The number of records in the table is high and hence the number of mails to be sent are higher in number&lt;/li&gt;
  &lt;li&gt;Due to the above reasons, this job may have a completion of time of more than five minutes, which means that the next schedule of the same will get triggered even before the first one completes.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Hence to resolve this, we need to chain the jobs such that the job gets “re-scheduled” only after the first job is completed. This is known as “Job-Chaining”&lt;/p&gt;&lt;h3&gt;Job Chaining – How it was implemented&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;A Utility Method for returning the time 5 minutes from now and another Utility method for returning a SimpleTrigger using the NextScheduledTime are created.&lt;/li&gt;
  &lt;li&gt;The first time scheduling of the Job is done with a SimpleTrigger (Utility method) which starts the first job 5 minutes from the starting instance&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;//The Utility method to return the Next Scheduling time 5 minutes from now
public static Date getNextMailScheduledTime() {
    Calendar cal = Calendar.getInstance();
    System.out.println(&amp;quot;Date Current: &amp;quot;+cal.getTimeInMillis());
    cal.add(Calendar.MINUTE,1);
    System.out.println(&amp;quot;Date after addition: &amp;quot;+cal.getTimeInMillis());
    return cal.getTime();
}

//The Utility Method to return a SimpleTrigger which used the NextScheduledTime Utility Method for the Triggering time
public static Trigger getMailProcessorTrigger() {
    Date newDate = VsimsUtil.getNextMailScheduledTime();
    Trigger mailTrigger = new SimpleTrigger(SchedulingConstants.MAILPROCESSOR_TRIGGER_NAME, Scheduler.DEFAULT_GROUP,newDate);
    mailTrigger.setJobName(SchedulingConstants.MAILPROCESSOR_JOB_NAME);
    mailTrigger.setJobGroup(Scheduler.DEFAULT_GROUP);
    return mailTrigger;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;Scheduling the Job for the First Run&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Using the Utility methods the “MailProcessor” Job is scheduled to run after Five minutes from the current Instance&lt;/li&gt;
  &lt;li&gt;Since a specific time instance is given for the Trigger, this Job will get Triggered only once&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;JobDetail mailJobDetail = new JobDetail(&amp;quot;MailProcessorJob&amp;quot;,Scheduler.DEFAULT_GROUP, MailProcessor.class);
sched.scheduleJob(mailJobDetail,VsimsUtil Util.getMailProcessorTrigger());
logger.info(&amp;quot;Mail Processor Scheduled&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note: &lt;em&gt;Since the Job is being scheduled for the first time we have to use sched.scheduleJob() for scheduling the job&lt;/em&gt;&lt;/p&gt;&lt;p&gt;In the Execute method of the Job, once the Job gets fired for the first time by the Trigger created, the Job Execution steps are completed and then the job gets “re-scheduled’ after five minutes using the same Utility method&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public void execute(JobExecutionContext jobContext) throws JobExecutionException {
        logger.info(&amp;quot;MailProcessor execute - start&amp;quot;);

        //PERFORM THE JOB EXECUTION STEPS HERE
        //Chaining of the Job by re-scheduling
        try {
            logger.info(&amp;quot;Scheduler Instance Id in Mail Processor: &amp;quot;+
                + jobContext.getScheduler().getSchedulerInstanceId());

            //If Rescheduled Correctly, the Scheduler returns the next Scheduled Time of the JOB
            Date nextScheduledTime = jobContext.getScheduler().rescheduleJob
                (&amp;quot;MailProcessorJob&amp;quot;, Scheduler.DEFAULT_GROUP, Util.getMailProcessorTrigger());
            logger.info(&amp;quot;Rescheduled at : &amp;quot;+nextScheduledTime);
        } catch (SchedulerException e) {
            logger.error(&amp;quot;Error in Scheduling the Job for the Next Iteration&amp;quot;);
            e.printStackTrace();
        }

}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note: &lt;em&gt;Since the same job is being chained, we have to use rescheduleJob().&lt;/em&gt;&lt;/p&gt;&lt;p&gt;The re-scheduling also happens using the Trigger returned by the Utility Method. Hence the job gets rescheduled only once. Hence the subsequent run of the job will reschedule the job again for its next run. Thus we achieve chaining of the job runs&lt;/p&gt;&lt;p&gt;References&lt;br/&gt;* &lt;a href=&quot;http://quartz.sourceforge.net/firstTutorial.html&quot;&gt;http://quartz.sourceforge.net/firstTutorial.html&lt;/a&gt;&lt;br/&gt;* &lt;a href=&quot;http://www-128.ibm.com/developerworks/java/library/j-quartz/&quot;&gt;http://www-128.ibm.com/developerworks/java/library/j-quartz/&lt;/a&gt;&lt;/p&gt;
	</description>
    </item>

  </channel> 
</rss>
